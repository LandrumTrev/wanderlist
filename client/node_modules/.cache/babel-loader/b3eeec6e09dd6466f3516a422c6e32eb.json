{"ast":null,"code":"// used by React client Components to make API calls to the server\n// use axios to make XMLHttpRequest API calls to Express server from React client\nimport axios from \"axios\"; // define axios call functions to be executed when calling \"API.getBooks\" etc\n// NOTE: where is the PUT route to update a document?\n\nexport default {\n  // API.getUser : user auth signin route\n  getUser: function getUser(query) {\n    return axios.post(\"/api/auth/signin\", query);\n  },\n  // API.createUser : user auth signup route\n  createUser: function createUser(query) {\n    return axios.post(\"/api/auth/signup\", query);\n  },\n  // API.checkAuth : user auth verify route\n  // verify that user is logged in and is allowed access to this functionality\n  checkAuth: function checkAuth(query) {\n    // console.log(\"Quer in API = \" + JSON.stringify(query));\n    return axios.post(\"/api/auth/verify\", query);\n  },\n  // EXAMPLE CODE BELOW (DELETE)\n  // Gets all books\n  getBooks: function getBooks() {\n    // in this app's domain, do a GET call on domain.com/api/books\n    // server.js (Express) will use routes/api/index.js etc to route this call\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function getBook(id) {\n    // construct and make an API call with (id) from a API.getBook(id) call\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function deleteBook(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function saveBook(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};","map":{"version":3,"sources":["/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/src/utils/API.js"],"names":["axios","getUser","query","post","createUser","checkAuth","getBooks","get","getBook","id","deleteBook","delete","saveBook","bookData"],"mappings":"AAAA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AACA,eAAe;AACb;AACAC,EAAAA,OAAO,EAAE,iBAAAC,KAAK,EAAI;AAChB,WAAOF,KAAK,CAACG,IAAN,CAAW,kBAAX,EAA+BD,KAA/B,CAAP;AACD,GAJY;AAKb;AACAE,EAAAA,UAAU,EAAE,oBAAAF,KAAK,EAAI;AACnB,WAAOF,KAAK,CAACG,IAAN,CAAW,kBAAX,EAA+BD,KAA/B,CAAP;AACD,GARY;AASb;AACA;AACAG,EAAAA,SAAS,EAAE,mBAASH,KAAT,EAAgB;AACzB;AACA,WAAOF,KAAK,CAACG,IAAN,CAAW,kBAAX,EAA+BD,KAA/B,CAAP;AACD,GAdY;AAeb;AACA;AACAI,EAAAA,QAAQ,EAAE,oBAAW;AACnB;AACA;AACA,WAAON,KAAK,CAACO,GAAN,CAAU,YAAV,CAAP;AACD,GArBY;AAsBb;AACAC,EAAAA,OAAO,EAAE,iBAASC,EAAT,EAAa;AACpB;AACA,WAAOT,KAAK,CAACO,GAAN,CAAU,gBAAgBE,EAA1B,CAAP;AACD,GA1BY;AA2Bb;AACAC,EAAAA,UAAU,EAAE,oBAASD,EAAT,EAAa;AACvB,WAAOT,KAAK,CAACW,MAAN,CAAa,gBAAgBF,EAA7B,CAAP;AACD,GA9BY;AA+Bb;AACAG,EAAAA,QAAQ,EAAE,kBAASC,QAAT,EAAmB;AAC3B,WAAOb,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBU,QAAzB,CAAP;AACD;AAlCY,CAAf","sourcesContent":["// used by React client Components to make API calls to the server\n\n// use axios to make XMLHttpRequest API calls to Express server from React client\nimport axios from \"axios\";\n\n// define axios call functions to be executed when calling \"API.getBooks\" etc\n// NOTE: where is the PUT route to update a document?\nexport default {\n  // API.getUser : user auth signin route\n  getUser: query => {\n    return axios.post(\"/api/auth/signin\", query);\n  },\n  // API.createUser : user auth signup route\n  createUser: query => {\n    return axios.post(\"/api/auth/signup\", query);\n  },\n  // API.checkAuth : user auth verify route\n  // verify that user is logged in and is allowed access to this functionality\n  checkAuth: function(query) {\n    // console.log(\"Quer in API = \" + JSON.stringify(query));\n    return axios.post(\"/api/auth/verify\", query);\n  },\n  // EXAMPLE CODE BELOW (DELETE)\n  // Gets all books\n  getBooks: function() {\n    // in this app's domain, do a GET call on domain.com/api/books\n    // server.js (Express) will use routes/api/index.js etc to route this call\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    // construct and make an API call with (id) from a API.getBook(id) call\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}