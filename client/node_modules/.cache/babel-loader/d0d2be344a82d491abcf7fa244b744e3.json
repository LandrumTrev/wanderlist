{"ast":null,"code":"import _defineProperty from \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/src/pages/Home.js\";\n// Home page view Component called by React Router in the App.js Router Switch Routes\nimport React, { Component } from \"react\"; // use a <Link> tag in place of <a href> to link to another page view with React Router\n// import { Link } from \"react-router-dom\";\n// import API in order to make axios API calls to the Express Server\n\nimport ListRegions from \"../utils/ListRegions\";\nimport ListFeatures from \"../utils/ListFeatures\";\nimport API from \"../utils/API\"; // import single-component .js files\n\nimport Header from \"../components/Header\";\nimport Background from \"../components/Background\"; // import DeleteBtn from \"../components/DeleteBtn\";\n// import Jumbotron from \"../components/Jumbotron\";\n// import multiple-component .js files\n\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { SelectRegion, SelectFeature } from \"../components/Search\";\nimport { CardsContainer, ResultCard, NoResultCard } from \"../components/Cards\"; // import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n// import master style.css for all page views\n\nimport \"./style.css\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      countryAndRegion: \"\",\n      countryCC: \"\",\n      regionCC: \"\",\n      featureCode: \"\",\n      listRegions: ListRegions.countryArray,\n      listFeatures: ListFeatures.featureArray,\n      featureName: \"Ensenada Mogotes\",\n      featureType: \"bay\",\n      featureCountryName: \"Argentina\",\n      featureLatitude: \"-38.13333\",\n      featureLongitude: \"-57.56667\",\n      nearPlaceName: \"LOS ACANTILADOS\",\n      nearPlaceCountryCode: \"AR\",\n      nearPlacePostalCode: \"7609\",\n      nearPlaceDistance: \"3.5\",\n      nearPlaceLatLong: \"-38.1167,-57.6\",\n      nearPlaceWifi: \"3k\"\n    };\n\n    _this.handleInputChange = function (event) {\n      // create variables name and value for event.target.name and event.target.value\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value; // use setState to change state values of the state key [name] for whichever property\n      // if selecting a country or region, also set the Country Code and Region Codes\n\n      if (name === \"countryAndRegion\") {\n        var _this$setState;\n\n        _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"countryCC\", value.substring(0, 2)), _defineProperty(_this$setState, \"regionCC\", value.substring(2, 4)), _this$setState));\n      } else {\n        _this.setState(_defineProperty({}, name, value));\n      }\n    };\n\n    _this.geonamesString = function () {\n      if (_this.state.featureCode) {\n        var geoString;\n\n        if (_this.state.countryCC === \"XX\") {\n          geoString = \"https://secure.geonames.org/searchJSON?featureCode=\".concat(_this.state.featureCode, \"&maxRows=1000&username=ghostfountain\");\n        } else if (_this.state.regionCC === \"\") {\n          geoString = \"https://secure.geonames.org/searchJSON?featureCode=\".concat(_this.state.featureCode, \"&country=\").concat(_this.state.countryCC, \"&maxRows=1000&username=ghostfountain\");\n        } else {\n          geoString = \"https://secure.geonames.org/searchJSON?featureCode=\".concat(_this.state.featureCode, \"&country=\").concat(_this.state.countryCC, \"&adminCode1=\").concat(_this.state.regionCC, \"&maxRows=1000&username=ghostfountain\");\n        } // console.log(geoString);\n\n\n        return;\n      } else {\n        alert(\"Please select a feature type.\");\n      }\n    };\n\n    _this.handleFormSubmit = function (event) {\n      // prevent page reload default behavior of \"submit\"\n      event.preventDefault(); // call geonamesString() to construct the first external API call string\n\n      _this.geonamesString();\n\n      console.log(geonamesString()); // call client/src/utils/API.js to make API.saveBook(bookData) axios API call\n      // and send current this.state.title, .author, and .synopsis values\n      // as the req.body (bookData) of the axios API POST call to /api/books\n\n      API.saveBook({\n        title: _this.state.title,\n        author: _this.state.author,\n        synopsis: _this.state.synopsis\n      }) // after async operation completes, call loadBooks() to get updated book list\n      .then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      console.log(\"handleFormSubmit() has run\");\n    };\n\n    _this.loadBooks = function () {//   API.getBooks()\n      //     .then(res => this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" }))\n      //     .catch(err => console.log(err));\n    };\n\n    _this.deleteBook = function (id) {//   API.deleteBook(id)\n      //     .then(res => this.loadBooks())\n      //     .catch(err => console.log(err));\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidUpdate\",\n    // ===================================================\n    value: function componentDidUpdate() {} // console.log(this.state.regionCC);\n    // ===================================================\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {} // this.loadBooks();\n    // console.log(this.state);\n    // ===================================================\n    // send live typed input data to this.state.title, .author, .synopsis on each keystroke\n\n  }, {\n    key: \"render\",\n    // ===================================================\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Background, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"sm-6 md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"assets/images/dinofii_logo.svg\",\n        style: {\n          width: \"90%\",\n          maxHeight: 150,\n          padding: \"1px 1px 1px 1px\"\n        },\n        alt: \"Dinofii logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(Col, {\n        size: \"sm-6 md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          fontWeight: \"100\",\n          color: \"#444\",\n          textAlign: \"left\",\n          padding: \"0px 30px 30px 0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontWeight: \"700\",\n          color: \"rgb(121, 27, 27)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"FIND NEW PLACES TO EXPLORE.\"), \" Select a feature and choose an area to search. Dinofii gives you a random point of interest and the closest city, as well as links to info, maps, directions, and local wifi.\")))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6 p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(SelectRegion, {\n        list: this.state.listRegions,\n        thisRegion: this.handleInputChange,\n        onChange: console.log(this.state.countryAndRegion, this.state.countryCC, this.state.regionCC),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-sm-6 p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(SelectFeature, {\n        list: this.state.listFeatures,\n        thisFeature: this.handleInputChange,\n        onChange: console.log(this.state.featureCode),\n        findFeature: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })))))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"results_header\",\n        className: \"row pr-2 pl-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group input-group-sm mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"form-control btn-outline-light text-left\",\n        style: {\n          height: \"30px\"\n        },\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"SEARCH RESULTS:\"), React.createElement(\"div\", {\n        className: \"input-group-prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"form-control btn btn-outline-light\",\n        type: \"button\",\n        id: \"clear_button\",\n        style: {\n          width: \"5rem\",\n          height: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"CLEAR\"))))), React.createElement(CardsContainer, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(ResultCard, {\n        featureName: this.state.featureName,\n        featureType: this.state.featureType,\n        featureCountryName: this.state.featureCountryName,\n        featureLatitude: this.state.featureLatitude,\n        featureLongitude: this.state.featureLongitude,\n        nearPlaceName: this.state.nearPlaceName,\n        nearPlaceCountryCode: this.state.nearPlaceCountryCode,\n        nearPlacePostalCode: this.state.nearPlacePostalCode,\n        nearPlaceDistance: this.state.nearPlaceDistance,\n        nearPlaceLatLong: this.state.nearPlaceLatLong,\n        nearPlaceWifi: this.state.nearPlaceWifi,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(NoResultCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/src/pages/Home.js"],"names":["React","Component","ListRegions","ListFeatures","API","Header","Background","Col","Row","Container","SelectRegion","SelectFeature","CardsContainer","ResultCard","NoResultCard","Home","state","countryAndRegion","countryCC","regionCC","featureCode","listRegions","countryArray","listFeatures","featureArray","featureName","featureType","featureCountryName","featureLatitude","featureLongitude","nearPlaceName","nearPlaceCountryCode","nearPlacePostalCode","nearPlaceDistance","nearPlaceLatLong","nearPlaceWifi","handleInputChange","event","target","name","value","setState","substring","geonamesString","geoString","alert","handleFormSubmit","preventDefault","console","log","saveBook","title","author","synopsis","then","res","loadBooks","catch","err","deleteBook","id","width","maxHeight","padding","fontWeight","color","textAlign","height"],"mappings":"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","sourcesContent":["// Home page view Component called by React Router in the App.js Router Switch Routes\n\nimport React, { Component } from \"react\";\n// use a <Link> tag in place of <a href> to link to another page view with React Router\n// import { Link } from \"react-router-dom\";\n\n// import API in order to make axios API calls to the Express Server\nimport ListRegions from \"../utils/ListRegions\";\nimport ListFeatures from \"../utils/ListFeatures\";\nimport API from \"../utils/API\";\n\n// import single-component .js files\nimport Header from \"../components/Header\";\nimport Background from \"../components/Background\";\n\n// import DeleteBtn from \"../components/DeleteBtn\";\n// import Jumbotron from \"../components/Jumbotron\";\n\n// import multiple-component .js files\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { SelectRegion, SelectFeature } from \"../components/Search\";\nimport { CardsContainer, ResultCard, NoResultCard } from \"../components/Cards\";\n\n// import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n\n// import master style.css for all page views\nimport \"./style.css\";\n\nclass Home extends Component {\n  // variable data held and managed by Home component\n  state = {\n    countryAndRegion: \"\",\n    countryCC: \"\",\n    regionCC: \"\",\n    featureCode: \"\",\n    listRegions: ListRegions.countryArray,\n    listFeatures: ListFeatures.featureArray,\n    featureName: \"Ensenada Mogotes\",\n    featureType: \"bay\",\n    featureCountryName: \"Argentina\",\n    featureLatitude: \"-38.13333\",\n    featureLongitude: \"-57.56667\",\n    nearPlaceName: \"LOS ACANTILADOS\",\n    nearPlaceCountryCode: \"AR\",\n    nearPlacePostalCode: \"7609\",\n    nearPlaceDistance: \"3.5\",\n    nearPlaceLatLong: \"-38.1167,-57.6\",\n    nearPlaceWifi: \"3k\"\n  };\n\n  // ===================================================\n\n  componentDidUpdate() {\n    // console.log(this.state.regionCC);\n  }\n  // ===================================================\n\n  componentDidMount() {\n    // this.loadBooks();\n    // console.log(this.state);\n  }\n  // ===================================================\n\n  // send live typed input data to this.state.title, .author, .synopsis on each keystroke\n  handleInputChange = event => {\n    // create variables name and value for event.target.name and event.target.value\n    const { name, value } = event.target;\n    // use setState to change state values of the state key [name] for whichever property\n    // if selecting a country or region, also set the Country Code and Region Codes\n    if (name === \"countryAndRegion\") {\n      this.setState({\n        [name]: value,\n        countryCC: value.substring(0, 2),\n        regionCC: value.substring(2, 4)\n      });\n    } else {\n      this.setState({\n        [name]: value\n      });\n    }\n  };\n\n  // ===================================================\n\n  geonamesString = () => {\n    if (this.state.featureCode) {\n      let geoString;\n      if (this.state.countryCC === \"XX\") {\n        geoString = `https://secure.geonames.org/searchJSON?featureCode=${this.state.featureCode}&maxRows=1000&username=ghostfountain`;\n      } else if (this.state.regionCC === \"\") {\n        geoString = `https://secure.geonames.org/searchJSON?featureCode=${this.state.featureCode}&country=${\n          this.state.countryCC\n        }&maxRows=1000&username=ghostfountain`;\n      } else {\n        geoString = `https://secure.geonames.org/searchJSON?featureCode=${this.state.featureCode}&country=${this.state.countryCC}&adminCode1=${\n          this.state.regionCC\n        }&maxRows=1000&username=ghostfountain`;\n      }\n      // console.log(geoString);\n      return;\n    } else {\n      alert(\"Please select a feature type.\");\n    }\n  };\n\n  // ===================================================\n\n  // when user hits the submit button to add a new book,\n  handleFormSubmit = event => {\n\n    // prevent page reload default behavior of \"submit\"\n    event.preventDefault();\n\n    // call geonamesString() to construct the first external API call string\n    this.geonamesString();\n    console.log(geonamesString());\n\n\n    // call client/src/utils/API.js to make API.saveBook(bookData) axios API call\n    // and send current this.state.title, .author, and .synopsis values\n    // as the req.body (bookData) of the axios API POST call to /api/books\n    API.saveBook({\n      title: this.state.title,\n      author: this.state.author,\n      synopsis: this.state.synopsis\n    })\n      // after async operation completes, call loadBooks() to get updated book list\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n    console.log(\"handleFormSubmit() has run\");\n  };\n\n  // ===================================================\n\n  // ===================================================\n\n  // call client/src/utils/API.js to make API.getBooks() axios API route call\n  // loads all books data in the db into this.state.books\n  // and also clear all existing data in this.state.title, .author, and .synopsis\n\n  loadBooks = () => {\n    //   API.getBooks()\n    //     .then(res => this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" }))\n    //     .catch(err => console.log(err));\n  };\n\n  // ===================================================\n\n  // when this.deleteBook(id) is called,\n  // call client/src/utils/API.js to make API.deleteBook(id) axios API route call\n  // and then call this.loadBooks() above to refresh all book data in state\n\n  deleteBook = id => {\n    //   API.deleteBook(id)\n    //     .then(res => this.loadBooks())\n    //     .catch(err => console.log(err));\n  };\n\n  // ===================================================\n\n  render() {\n    return (\n      <>\n        {/* <Container fluid > */}\n        <Background>\n          {/* logo and intro text header */}\n          <Header>\n            <Row>\n              <Col size=\"sm-6 md-4\">\n                <img src=\"assets/images/dinofii_logo.svg\" style={{ width: \"90%\", maxHeight: 150, padding: \"1px 1px 1px 1px\" }} alt=\"Dinofii logo\" />\n              </Col>\n              <Col size=\"sm-6 md-8\">\n                <div style={{ fontWeight: \"100\", color: \"#444\", textAlign: \"left\", padding: \"0px 30px 30px 0px\" }}>\n                  <span style={{ fontWeight: \"700\", color: \"rgb(121, 27, 27)\" }}>FIND NEW PLACES TO EXPLORE.</span> Select a feature and choose an\n                  area to search. Dinofii gives you a random point of interest and the closest city, as well as links to info, maps, directions, and\n                  local wifi.\n                </div>\n              </Col>\n            </Row>\n          </Header>\n\n          {/* Search Options Pulldown Selects */}\n          <Container>\n            {/* <Container fluid> */}\n            <form action=\"\">\n              <Row>\n                <div className=\"col-sm-6 p-2\">\n                  <div className=\"input-group\">\n                    <SelectRegion\n                      list={this.state.listRegions}\n                      thisRegion={this.handleInputChange}\n                      onChange={console.log(this.state.countryAndRegion, this.state.countryCC, this.state.regionCC)}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm-6 p-2\">\n                  <div className=\"input-group\">\n                    <SelectFeature\n                      list={this.state.listFeatures}\n                      thisFeature={this.handleInputChange}\n                      onChange={console.log(this.state.featureCode)}\n                      findFeature={this.handleFormSubmit}\n                    />\n                  </div>\n                </div>\n              </Row>\n            </form>\n          </Container>\n\n          {/* Clear All Results button and search results label */}\n          <Container>\n            <div id=\"results_header\" className=\"row pr-2 pl-2\">\n              <div className=\"input-group input-group-sm mb-3\">\n                <button className=\"form-control btn-outline-light text-left\" style={{ height: \"30px\" }} disabled>\n                  SEARCH RESULTS:\n                </button>\n                <div className=\"input-group-prepend\">\n                  <button className=\"form-control btn btn-outline-light\" type=\"button\" id=\"clear_button\" style={{ width: \"5rem\", height: \"30px\" }}>\n                    CLEAR\n                  </button>\n                </div>\n              </div>\n            </div>\n          </Container>\n\n          {/* ResultCards list */}\n          <CardsContainer fluid>\n            <ResultCard\n              featureName={this.state.featureName}\n              featureType={this.state.featureType}\n              featureCountryName={this.state.featureCountryName}\n              featureLatitude={this.state.featureLatitude}\n              featureLongitude={this.state.featureLongitude}\n              nearPlaceName={this.state.nearPlaceName}\n              nearPlaceCountryCode={this.state.nearPlaceCountryCode}\n              nearPlacePostalCode={this.state.nearPlacePostalCode}\n              nearPlaceDistance={this.state.nearPlaceDistance}\n              nearPlaceLatLong={this.state.nearPlaceLatLong}\n              nearPlaceWifi={this.state.nearPlaceWifi}\n            />\n            <NoResultCard />\n          </CardsContainer>\n\n          {/* Row returns a Bootstrap \"row\" */}\n          {/* <Row> */}\n          {/* Col returns a Bootstrap \"col-md-6\" */}\n          {/* <Col size=\"md-6\"> */}\n          {/* returns a Bootstrap \"jumbotron\" with inline CSS */}\n          {/* <Jumbotron> */}\n          {/* <h1>What Books Should I Read?</h1> */}\n          {/* </Jumbotron> */}\n          {/* HTML <form> tag: input for adding a new book */}\n          {/* <form> */}\n          {/* Bootstrap \"form-group\" <div> and \"form-control\" <input> with ...props */}\n          {/* <Input  */}\n          {/* // insert this.state.title data as the value of the input field */}\n          {/* value={this.state.title}  */}\n          {/* // on every char typed, make field value the value of this.state.title */}\n          {/* onChange={this.handleInputChange}  */}\n          {/* // name used by this.handleInputChange to change this.state.title */}\n          {/* name=\"title\"  */}\n          {/* // displayed field text when no value exists */}\n          {/* placeholder=\"Title (required)\"  */}\n          {/* /> */}\n          {/* <Input  */}\n          {/* value={this.state.author}  */}\n          {/* onChange={this.handleInputChange}  */}\n          {/* name=\"author\"  */}\n          {/* placeholder=\"Author (required)\"  */}\n          {/* /> */}\n          {/* uses <textarea> instead of <input>, sizes input field to 20 rows deep */}\n          {/* <TextArea  */}\n          {/* value={this.state.synopsis}  */}\n          {/* onChange={this.handleInputChange}  */}\n          {/* name=\"synopsis\"  */}\n          {/* placeholder=\"Synopsis (Optional)\"  */}\n          {/* /> */}\n          {/* <button> with Bootstrap classes, inline CSS, props, and children */}\n          {/* <FormBtn  */}\n          {/* // button is disabled if no author AND title are entered */}\n          {/* disabled={!(this.state.author && this.state.title)}  */}\n          {/* // when button is clicked, handle the click with this.handleFormSubmit */}\n          {/* onClick={this.handleFormSubmit} */}\n          {/* > */}\n          {/* Submit Book */}\n          {/* </FormBtn> */}\n          {/* </form> */}\n          {/* </Col> */}\n          {/* <Col size=\"md-6 sm-12\"> */}\n          {/* <Jumbotron> */}\n          {/* <h1>Books On My List</h1> */}\n          {/* </Jumbotron> */}\n          {/* if there are books in this.state.books (if TRUE (exists)), then */}\n          {/* {this.state.books.length ? ( */}\n          {/* // create a List component container (styled <div> holding \"list-group\" <ul>) */}\n          {/* <List> */}\n          {/* array.map() all books in this.state.books */}\n          {/* {this.state.books.map(book => ( */}\n          {/* // where every book object gets a ListItem component with a key for React */}\n          {/* // an <li> with Bootstrap \"list-group-item\" */}\n          {/* <ListItem key={book._id}> */}\n          {/* <li> contains a Link (React Router) to it's own book page */}\n          {/* App.js (React Router) sends this route to Detail.js page view */}\n          {/* <Link to={\"/books/\" + book._id}> */}\n          {/* <strong> */}\n          {/* Link surrounds the displayed title and author */}\n          {/* {book.title} by {book.author} */}\n          {/* </strong> */}\n          {/* </Link> */}\n          {/* ListItem also contains DeleteBtn with click handler */}\n          {/* returns a <button> with other non-individual properties */}\n          {/* <DeleteBtn onClick={() => this.deleteBook(book._id)} /> */}\n          {/* </ListItem> */}\n          {/* ))} */}\n          {/* </List> */}\n          {/* ) : ( */}\n          {/* // otherwise, if this.state.books does not have a length (no data), then */}\n          {/* // don't create the <List> component, just create this <h3>: */}\n          {/* <h3>No Results to Display</h3> */}\n          {/* )} */}\n          {/* </Col> */}\n          {/* </Row> */}\n          {/* </Container> */}\n        </Background>\n      </>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}