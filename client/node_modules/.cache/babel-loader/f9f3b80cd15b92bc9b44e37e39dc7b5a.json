{"ast":null,"code":"import _classCallCheck from \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/src/pages/Detail.js\";\n// Detail page view component\n// called in Book page view and routed by React Router in App.js\n// <Link to={\"/books/\" + book._id}>\n// route call always includes the MongoDB book _id\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n\nvar Detail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Detail, _Component);\n\n  function Detail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Detail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Detail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      book: {}\n    };\n    return _this;\n  }\n\n  _createClass(Detail, [{\n    key: \"componentDidMount\",\n    // When this component mounts, grab the book with the _id of this.props.match.params.id\n    // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // this.props.match.params.id gets book._id from localhost:3000/books/1234567\n      // have axios make a GET API call to Express server to query database\n      API.getBook(this.props.match.params.id) // then set this.state.book object as the returned res.data from the API call\n      .then(function (res) {\n        return _this2.setState({\n          book: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (// Bootstrap container, row, col, jumbotron React components, HTML <article>\n        React.createElement(Container, {\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Col, {\n          size: \"md-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(Jumbotron, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, this.state.book.title, \" by \", this.state.book.author)))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Col, {\n          size: \"md-10 md-offset-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"article\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Synopsis\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, this.state.book.synopsis)))), React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Col, {\n          size: \"md-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"\\u2190 Back to Authors\"))))\n      );\n    }\n  }]);\n\n  return Detail;\n}(Component);\n\nexport default Detail;","map":{"version":3,"sources":["/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/src/pages/Detail.js"],"names":["React","Component","Link","Col","Row","Container","Jumbotron","API","Detail","state","book","getBook","props","match","params","id","then","res","setState","data","catch","err","console","log","title","author","synopsis"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;IAEMC,M;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;;;;;AAIR;AACA;wCACoB;AAAA;;AAClB;AACA;AACAH,MAAAA,GAAG,CAACI,OAAJ,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC,EACA;AADA,OAEGC,IAFH,CAEQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAER,UAAAA,IAAI,EAAEO,GAAG,CAACE;AAAZ,SAAd,CAAJ;AAAA,OAFX,EAGGC,KAHH,CAGS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAHZ;AAID;;;6BAEQ;AACP,aACE;AACA,4BAAC,SAAD;AAAW,UAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKZ,KAAL,CAAWC,IAAX,CAAgBc,KADnB,UAC8B,KAAKf,KAAL,CAAWC,IAAX,CAAgBe,MAD9C,CADF,CADF,CADF,CADF,EAUE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,IAAI,EAAC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKhB,KAAL,CAAWC,IAAX,CAAgBgB,QADnB,CAFF,CADF,CADF,CAVF,EAoBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,IAAI,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF,CApBF;AAFF;AA6BD;;;;EA/CkBzB,S;;AAkDrB,eAAeO,MAAf","sourcesContent":["// Detail page view component\n// called in Book page view and routed by React Router in App.js\n// <Link to={\"/books/\" + book._id}>\n// route call always includes the MongoDB book _id\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n\nclass Detail extends Component {\n  // state holds all details for a single book as an object\n  state = {\n    book: {}\n  };\n\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  componentDidMount() {\n    // this.props.match.params.id gets book._id from localhost:3000/books/1234567\n    // have axios make a GET API call to Express server to query database\n    API.getBook(this.props.match.params.id)\n    // then set this.state.book object as the returned res.data from the API call\n      .then(res => this.setState({ book: res.data }))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      // Bootstrap container, row, col, jumbotron React components, HTML <article>\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                {this.state.book.title} by {this.state.book.author}\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1>Synopsis</h1>\n              <p>\n                {this.state.book.synopsis}\n              </p>\n            </article>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-2\">\n            <Link to=\"/\">‚Üê Back to Authors</Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}