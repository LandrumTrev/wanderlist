{"ast":null,"code":"var _jsxFileName = \"/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/src/components/Grid/index.js\";\nimport React from \"react\"; // Exports the Container, Row, and Col components\n// Container component creates a Bootstrap container or container-fluid\n// Container can be either <Container> or <Container fluid>\n// Container can contain child elements between it's open and close tags {children}\n\nexport function Container(_ref) {\n  var props = _ref.props,\n      fluid = _ref.fluid,\n      children = _ref.children;\n  // if <Container fluid> then return <div class=\"container-fluid\"> ... </div>\n  // otherwise return <div class=\"container\"> ... </div>\n  return React.createElement(\"div\", {\n    className: \"container\".concat(fluid ? \"-fluid\" : \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, children);\n} // Row component lets us use a Bootstrap row without having to think about class names\n// !!! row-fluid is OLD BOOTSTRAP (2.x), no class=\"row-fluid\" in Bootstrap 4\n\nexport function Row(_ref2) {\n  var children = _ref2.children;\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, children); // return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n} // Col component lets us size Bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\n// example to demo what can be done to create custom Component properties\n// make the class (className) the value of size (md-12 lg-6) or whatever\n// and split into an array at spaces \" \", so [\"md-12\", \"lg-6\"]\n// then do a map on that array, calling each element \"size\" (BAD CODE! CONFUSING)\n// and have the map create a new array with \"col-\" tacked onto each element, so\n// [\"col-md-12\", \"col-lg-6\"] is the new mapped array,\n// then .join that array back into a space \" \" separated string: \"col-md-12 col-lg-6\"\n// so that <div className=\"col-md-12 col-lg-6\"> {children} </div> is returned\n\nexport function Col(_ref3) {\n  var size = _ref3.size,\n      children = _ref3.children;\n  return React.createElement(\"div\", {\n    className: size.split(\" \").map(function (size) {\n      return \"col-\" + size;\n    }).join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, children);\n}","map":{"version":3,"sources":["/Users/richardltrevillianiii/Documents/homework/w21-Wanderlist/wanderlist/client/src/components/Grid/index.js"],"names":["React","Container","props","fluid","children","Row","Col","size","split","map","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,OAA+C;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACpD;AACA;AACA,SAAO;AAAK,IAAA,SAAS,qBAAcD,KAAK,GAAG,QAAH,GAAc,EAAjC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsDC,QAAtD,CAAP;AACD,C,CAED;AACA;;AACA,OAAO,SAASC,GAAT,QAA2B;AAAA,MAAZD,QAAY,SAAZA,QAAY;AAChC,SAAO;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBA,QAAxB,CAAP,CADgC,CAEhC;AACD,C,CAED;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,GAAT,QAAiC;AAAA,MAAlBC,IAAkB,SAAlBA,IAAkB;AAAA,MAAZH,QAAY,SAAZA,QAAY;AACtC,SACE;AACE,IAAA,SAAS,EAAEG,IAAI,CACZC,KADQ,CACF,GADE,EAERC,GAFQ,CAEJ,UAAAF,IAAI;AAAA,aAAI,SAASA,IAAb;AAAA,KAFA,EAGRG,IAHQ,CAGH,GAHG,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGN,QANH,CADF;AAUD","sourcesContent":["import React from \"react\";\n\n// Exports the Container, Row, and Col components\n\n// Container component creates a Bootstrap container or container-fluid\n// Container can be either <Container> or <Container fluid>\n// Container can contain child elements between it's open and close tags {children}\nexport function Container({ props, fluid, children }) {\n  // if <Container fluid> then return <div class=\"container-fluid\"> ... </div>\n  // otherwise return <div class=\"container\"> ... </div>\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// Row component lets us use a Bootstrap row without having to think about class names\n// !!! row-fluid is OLD BOOTSTRAP (2.x), no class=\"row-fluid\" in Bootstrap 4\nexport function Row({ children }) {\n  return <div className={\"row\"}>{children}</div>;\n  // return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// Col component lets us size Bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\n\n// example to demo what can be done to create custom Component properties\n// make the class (className) the value of size (md-12 lg-6) or whatever\n// and split into an array at spaces \" \", so [\"md-12\", \"lg-6\"]\n// then do a map on that array, calling each element \"size\" (BAD CODE! CONFUSING)\n// and have the map create a new array with \"col-\" tacked onto each element, so\n// [\"col-md-12\", \"col-lg-6\"] is the new mapped array,\n// then .join that array back into a space \" \" separated string: \"col-md-12 col-lg-6\"\n// so that <div className=\"col-md-12 col-lg-6\"> {children} </div> is returned\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}