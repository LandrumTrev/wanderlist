{"version":3,"sources":["components/Nav/index.js","utils/ListRegions.js","utils/ListFeatures.js","components/Header/index.js","components/Background/index.js","components/Grid/index.js","components/Search/index.js","components/Cards/index.js","pages/Home.js","utils/API.js","pages/Saved.js","components/DeleteBtn/index.js","components/Jumbotron/index.js","components/List/index.js","components/Form/index.js","pages/Books.js","pages/Detail.js","pages/NoMatch.js","App.js","index.js"],"names":["Nav","react_default","a","createElement","className","href","style","color","ListRegions","countryArray","name","value","ListFeatures","featureArray","Header","_ref","children","clear","paddingTop","textAlign","backgroundColor","Background","id","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","SelectRegion","props","Fragment","onChange","thisRegion","list","region","key","width","SelectFeature","thisFeature","feature","onClick","findFeature","CardsContainer","paddingRight","paddingLeft","ResultCard","display","featureName","target","rel","fontWeight","textDecoration","featureType","featureCountryName","float","featureLatitude","featureLongitude","nearPlaceLatLong","nearPlaceName","nearPlaceCountryCode","nearPlacePostalCode","nearPlaceDistance","fontSize","marginLeft","marginRight","nearPlaceWifi","NoResultCard","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","_this$setState","_event$target","setState","defineProperty","substring","geonamesString","state","featureCode","countryCC","regionCC","alert","handleFormSubmit","preventDefault","axios","get","then","response","data","totalResultsCount","console","log","maxNumber","Math","min","random","floor","theFeature","geonames","fcodeName","featureCountryCode","countryCode","lat","lng","featureLocation","fclName","countryName","getPostalCodes","ezcmdPostalCodes","search_results","length","place_name","trim","postal_code","country_code","nearPlaceCountryName","country_name","round","distance","coords","getHotspots","wigleHotspots","headers","Authorization","btoa","num","k","postalCode","PostalCode","wifiCountK","count","toFixed","catch","error","loadBooks","deleteBook","countryAndRegion","listRegions","listFeatures","components_Background","components_Header","src","maxHeight","padding","alt","action","height","disabled","type","Component","API","getUser","query","post","createUser","checkAuth","getBooks","getBook","delete","saveBook","bookData","Saved","_this2","token","window","localStorage","getItem","res","success","isLoggedIn","location","assign","err","DeleteBtn","role","tabIndex","Jumbotron","List","ListItem","Input","TextArea","rows","FormBtn","marginBottom","Books","books","title","author","synopsis","components_Jumbotron","placeholder","book","_id","Link","to","components_DeleteBtn","Detail","match","params","NoMatch","aria-label","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"oVAkBeA,MAbf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,cAGAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcC,KAAK,IAAIC,MAAO,CAAEC,MAAO,UAApD,wDCFSC,EAAA,CACbC,aAAc,CACZ,CACEC,KAAM,QACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,iBACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,sBACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,mCACNC,MAAO,QAET,CACED,KAAM,gCACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,oCACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,mCACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,0CACNC,MAAO,QAET,CACED,KAAM,kFACNC,MAAO,QAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,kCACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,qCACNC,MAAO,QAET,CACED,KAAM,mCACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,mCACNC,MAAO,MAET,CACED,KAAM,yBACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,gBACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,kCACNC,MAAO,QAET,CACED,KAAM,mCACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,oCACNC,MAAO,QAET,CACED,KAAM,kCACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,iCACNC,MAAO,MAET,CACED,KAAM,oBACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,eACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,oCACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,gCACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,iBACNC,MAAO,MAET,CACED,KAAM,2BACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,oCACNC,MAAO,QAET,CACED,KAAM,kCACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,mCACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,sCACNC,MAAO,QAET,CACED,KAAM,mCACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,gCACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,MAET,CACED,KAAM,0BACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,gCACNC,MAAO,MAET,CACED,KAAM,eACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,oBACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,oBACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,iBACNC,MAAO,MAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,kDACNC,MAAO,QAET,CACED,KAAM,oDACNC,MAAO,QAET,CACED,KAAM,gCACNC,MAAO,QAET,CACED,KAAM,gDACNC,MAAO,QAET,CACED,KAAM,kEACNC,MAAO,QAET,CACED,KAAM,yCACNC,MAAO,QAET,CACED,KAAM,yCACNC,MAAO,QAET,CACED,KAAM,uDACNC,MAAO,QAET,CACED,KAAM,4CACNC,MAAO,QAET,CACED,KAAM,gDACNC,MAAO,QAET,CACED,KAAM,6DACNC,MAAO,QAET,CACED,KAAM,uDACNC,MAAO,QAET,CACED,KAAM,0CACNC,MAAO,QAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,qBACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,oBACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,8BACNC,MAAO,MAET,CACED,KAAM,gBACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,gCACNC,MAAO,QAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,wCACNC,MAAO,QAET,CACED,KAAM,yCACNC,MAAO,QAET,CACED,KAAM,6CACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,2CACNC,MAAO,QAET,CACED,KAAM,mCACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,kCACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,oCACNC,MAAO,QAET,CACED,KAAM,oDACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,MAET,CACED,KAAM,mBACNC,MAAO,MAET,CACED,KAAM,8BACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,gBACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,oCACNC,MAAO,MAET,CACED,KAAM,gCACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,qDACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,oCACNC,MAAO,QAET,CACED,KAAM,gDACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,gCACNC,MAAO,QAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,qCACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,oCACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,iCACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,uCACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,oBACNC,MAAO,OAET,CACED,KAAM,kBACNC,MAAO,OAET,CACED,KAAM,mBACNC,MAAO,OAET,CACED,KAAM,qBACNC,MAAO,OAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,kCACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,+BACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,oCACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,gBACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,mBACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,8BACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,oBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,6BACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,oBACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,kBACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,gBACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,iBACNC,MAAO,MAET,CACED,KAAM,2BACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,0DACNC,MAAO,QAET,CACED,KAAM,sCACNC,MAAO,QAET,CACED,KAAM,yCACNC,MAAO,QAET,CACED,KAAM,4BACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,wDACNC,MAAO,QAET,CACED,KAAM,uEACNC,MAAO,QAET,CACED,KAAM,qCACNC,MAAO,QAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,mBACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,oBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,YACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,oBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,qBACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,sBACNC,MAAO,MAET,CACED,KAAM,+CACNC,MAAO,MAET,CACED,KAAM,wBACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,6BACNC,MAAO,MAET,CACED,KAAM,4BACNC,MAAO,MAET,CACED,KAAM,mCACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,wBACNC,MAAO,MAET,CACED,KAAM,eACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,eACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,4BACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,kBACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,eACNC,MAAO,MAET,CACED,KAAM,+CACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,yBACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,MAET,CACED,KAAM,OACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,sBACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,eACNC,MAAO,MAET,CACED,KAAM,2BACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,uBACNC,MAAO,MAET,CACED,KAAM,iBACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,SAET,CACED,KAAM,eACNC,MAAO,SAET,CACED,KAAM,uBACNC,MAAO,SAET,CACED,KAAM,YACNC,MAAO,SAET,CACED,KAAM,wCACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,MAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,2BACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,QAET,CACED,KAAM,YACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,WACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,YACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,oBACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,QAET,CACED,KAAM,oBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,WACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,YACNC,MAAO,QAET,CACED,KAAM,WACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,eACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,oBACNC,MAAO,QAET,CACED,KAAM,gBACNC,MAAO,QAET,CACED,KAAM,cACNC,MAAO,QAET,CACED,KAAM,uCACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,qBACNC,MAAO,QAET,CACED,KAAM,sBACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,wBACNC,MAAO,QAET,CACED,KAAM,kBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,iBACNC,MAAO,QAET,CACED,KAAM,uBACNC,MAAO,QAET,CACED,KAAM,mBACNC,MAAO,QAET,CACED,KAAM,yBACNC,MAAO,QAET,CACED,KAAM,0BACNC,MAAO,QAET,CACED,KAAM,aACNC,MAAO,MAET,CACED,KAAM,UACNC,MAAO,MAET,CACED,KAAM,YACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,MAET,CACED,KAAM,0BACNC,MAAO,MAET,CACED,KAAM,uBACNC,MAAO,MAET,CACED,KAAM,oBACNC,MAAO,MAET,CACED,KAAM,iBACNC,MAAO,MAET,CACED,KAAM,QACNC,MAAO,MAET,CACED,KAAM,SACNC,MAAO,MAET,CACED,KAAM,WACNC,MAAO,QCjoFEC,EAAA,CACbC,aAAc,CACZ,CACEH,KAAM,iBACNC,MAAO,IAOT,CACED,KAAM,GACNC,MAAO,UAET,CACED,KAAM,kBACNC,MAAO,KAET,CACED,KAAM,GACNC,MAAO,UAQT,CACED,KAAM,YACNC,MAAO,QAGT,CACED,KAAM,MACNC,MAAO,OA4BT,CACED,KAAM,MACNC,MAAO,OAGT,CACED,KAAM,SACNC,MAAO,QA4BT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,WACNC,MAAO,QAsCT,CACED,KAAM,QACNC,MAAO,QAkBT,CACED,KAAM,QACNC,MAAO,OAsCT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,eACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,aACNC,MAAO,QAQT,CACED,KAAM,YACNC,MAAO,QAGT,CACED,KAAM,cACNC,MAAO,QAGT,CACED,KAAM,WACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,OAQT,CACED,KAAM,QACNC,MAAO,QAQT,CACED,KAAM,WACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,OAGT,CACED,KAAM,UACNC,MAAO,QAQT,CACED,KAAM,OACNC,MAAO,MAGT,CACED,KAAM,cACNC,MAAO,OAQT,CACED,KAAM,YACNC,MAAO,OAkBT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,mBACNC,MAAO,QAGT,CACED,KAAM,eACNC,MAAO,QAQT,CACED,KAAM,aACNC,MAAO,QAaT,CACED,KAAM,yBACNC,MAAO,QAGT,CACED,KAAM,iBACNC,MAAO,OAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,aACNC,MAAO,SAmFT,CACED,KAAM,OACNC,MAAO,MAGT,CACED,KAAM,aACNC,MAAO,OAQT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,YACNC,MAAO,OAaT,CACED,KAAM,SACNC,MAAO,OAQT,CACED,KAAM,QACNC,MAAO,MAGT,CACED,KAAM,MACNC,MAAO,OAGT,CACED,KAAM,QACNC,MAAO,QAQT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,iBACNC,MAAO,QAGT,CACED,KAAM,cACNC,MAAO,QA4BT,CACED,KAAM,aACNC,MAAO,QA4BT,CACED,KAAM,aACNC,MAAO,SAaT,CACED,KAAM,QACNC,MAAO,QAaT,CACED,KAAM,OACNC,MAAO,OA4BT,CACED,KAAM,YACNC,MAAO,QAkBT,CACED,KAAM,UACNC,MAAO,QAaT,CACED,KAAM,YACNC,MAAO,QAOT,CACED,KAAM,GACNC,MAAO,UAET,CACED,KAAM,gBACNC,MAAO,iBAET,CACED,KAAM,GACNC,MAAO,UAQT,CACED,KAAM,iBACNC,MAAO,QAkBT,CACED,KAAM,cACNC,MAAO,OAGT,CACED,KAAM,WACNC,MAAO,OAGT,CACED,KAAM,UACNC,MAAO,OAkBT,CACED,KAAM,QACNC,MAAO,OAaT,CACED,KAAM,SACNC,MAAO,OAkBT,CACED,KAAM,cACNC,MAAO,OAsCT,CACED,KAAM,QACNC,MAAO,OAQT,CACED,KAAM,oBACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,OAGT,CACED,KAAM,OACNC,MAAO,OAQT,CACED,KAAM,UACNC,MAAO,OAQT,CACED,KAAM,iBACNC,MAAO,QAGT,CACED,KAAM,kBACNC,MAAO,QAGT,CACED,KAAM,iBACNC,MAAO,QAQT,CACED,KAAM,cACNC,MAAO,QAGT,CACED,KAAM,mBACNC,MAAO,QAaT,CACED,KAAM,oBACNC,MAAO,QAGT,CACED,KAAM,cACNC,MAAO,QAQT,CACED,KAAM,YACNC,MAAO,QAGT,CACED,KAAM,YACNC,MAAO,QAGT,CACED,KAAM,cACNC,MAAO,OAOT,CACED,KAAM,GACNC,MAAO,UAET,CACED,KAAM,oBACNC,MAAO,qBAET,CACED,KAAM,GACNC,MAAO,UAiCT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,qBACNC,MAAO,SAGT,CACED,KAAM,eACNC,MAAO,QAGT,CACED,KAAM,kBACNC,MAAO,QAGT,CACED,KAAM,kBACNC,MAAO,QAQT,CACED,KAAM,iBACNC,MAAO,QAGT,CACED,KAAM,iBACNC,MAAO,QAQT,CACED,KAAM,kBACNC,MAAO,QAiBT,CACED,KAAM,GACNC,MAAO,UAET,CACED,KAAM,oBACNC,MAAO,qBAET,CACED,KAAM,GACNC,MAAO,UAaT,CACED,KAAM,YACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,QAQT,CACED,KAAM,eACNC,MAAO,OAiCT,CACED,KAAM,gBACNC,MAAO,OAuBT,CACED,KAAM,iBACNC,MAAO,QAkBT,CACED,KAAM,QACNC,MAAO,OAOT,CACED,KAAM,GACNC,MAAO,UAET,CACED,KAAM,2BACNC,MAAO,0BAET,CACED,KAAM,GACNC,MAAO,WAuBT,CACED,KAAM,WACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,qBACNC,MAAO,QAGT,CACED,KAAM,eACNC,MAAO,QAGT,CACED,KAAM,eACNC,MAAO,QAGT,CACED,KAAM,sBACNC,MAAO,OAGT,CACED,KAAM,cACNC,MAAO,OAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,SAGT,CACED,KAAM,eACNC,MAAO,OAaT,CACED,KAAM,iBACNC,MAAO,QAGT,CACED,KAAM,2BACNC,MAAO,OAGT,CACED,KAAM,OACNC,MAAO,QAQT,CACED,KAAM,SACNC,MAAO,OAGT,CACED,KAAM,gBACNC,MAAO,QA4BT,CACED,KAAM,aACNC,MAAO,QAQT,CACED,KAAM,WACNC,MAAO,QAGT,CACED,KAAM,cACNC,MAAO,OAGT,CACED,KAAM,cACNC,MAAO,SAGT,CACED,KAAM,WACNC,MAAO,SAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,QA2CT,CACED,KAAM,WACNC,MAAO,QAaT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,QAkBT,CACED,KAAM,mBACNC,MAAO,SAQT,CACED,KAAM,iBACNC,MAAO,QAGT,CACED,KAAM,mBACNC,MAAO,QAGT,CACED,KAAM,eACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,MACNC,MAAO,OAGT,CACED,KAAM,aACNC,MAAO,QAQT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,WACNC,MAAO,QAGT,CACED,KAAM,WACNC,MAAO,QAQT,CACED,KAAM,sBACNC,MAAO,OAoET,CACED,KAAM,OACNC,MAAO,MAGT,CACED,KAAM,QACNC,MAAO,MAGT,CACED,KAAM,iBACNC,MAAO,OAQT,CACED,KAAM,SACNC,MAAO,OAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,cACNC,MAAO,QAQT,CACED,KAAM,0BACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,YACNC,MAAO,QAGT,CACED,KAAM,gBACNC,MAAO,OAGT,CACED,KAAM,YACNC,MAAO,QAQT,CACED,KAAM,gBACNC,MAAO,QAGT,CACED,KAAM,WACNC,MAAO,OAGT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,aACNC,MAAO,QAQT,CACED,KAAM,kBACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,MACNC,MAAO,OAGT,CACED,KAAM,OACNC,MAAO,QAaT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,UACNC,MAAO,QAQT,CACED,KAAM,UACNC,MAAO,QAQT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,aACNC,MAAO,SAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,OAQT,CACED,KAAM,UACNC,MAAO,QA4BT,CACED,KAAM,oBACNC,MAAO,QAQT,CACED,KAAM,SACNC,MAAO,OAiCT,CACED,KAAM,WACNC,MAAO,SAGT,CACED,KAAM,aACNC,MAAO,SAiCT,CACED,KAAM,WACNC,MAAO,QAkBT,CACED,KAAM,OACNC,MAAO,QAkBT,CACED,KAAM,YACNC,MAAO,QAGT,CACED,KAAM,gBACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,OAQT,CACED,KAAM,UACNC,MAAO,OAGT,CACED,KAAM,oBACNC,MAAO,QAGT,CACED,KAAM,cACNC,MAAO,OAGT,CACED,KAAM,oBACNC,MAAO,QA4BT,CACED,KAAM,cACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,OAGT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,QAkBT,CACED,KAAM,cACNC,MAAO,MAGT,CACED,KAAM,cACNC,MAAO,MAQT,CACED,KAAM,YACNC,MAAO,SAGT,CACED,KAAM,oBACNC,MAAO,SAgDT,CACED,KAAM,UACNC,MAAO,OAGT,CACED,KAAM,WACNC,MAAO,QAkBT,CACED,KAAM,cACNC,MAAO,QAGT,CACED,KAAM,YACNC,MAAO,QAGT,CACED,KAAM,aACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,YACNC,MAAO,QAQT,CACED,KAAM,iBACNC,MAAO,OAGT,CACED,KAAM,UACNC,MAAO,QAkBT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,mBACNC,MAAO,QAGT,CACED,KAAM,6BACNC,MAAO,SAGT,CACED,KAAM,gBACNC,MAAO,QAGT,CACED,KAAM,0BACNC,MAAO,SAGT,CACED,KAAM,QACNC,MAAO,QAaT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,kBACNC,MAAO,QAQT,CACED,KAAM,kBACNC,MAAO,QAGT,CACED,KAAM,mBACNC,MAAO,QAaT,CACED,KAAM,SACNC,MAAO,QAkBT,CACED,KAAM,MACNC,MAAO,OAQT,CACED,KAAM,SACNC,MAAO,OAGT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,QAkBT,CACED,KAAM,iBACNC,MAAO,QAGT,CACED,KAAM,qBACNC,MAAO,QAGT,CACED,KAAM,yBACNC,MAAO,QAGT,CACED,KAAM,gBACNC,MAAO,QAaT,CACED,KAAM,QACNC,MAAO,QAaT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,OAGT,CACED,KAAM,SACNC,MAAO,QAQT,CACED,KAAM,YACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,mBACNC,MAAO,SAaT,CACED,KAAM,mBACNC,MAAO,OAQT,CACED,KAAM,aACNC,MAAO,QAQT,CACED,KAAM,eACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,eACNC,MAAO,SAQT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAQT,CACED,KAAM,kBACNC,MAAO,OAGT,CACED,KAAM,MACNC,MAAO,OAOT,CACED,KAAM,GACNC,MAAO,WAET,CACED,KAAM,2BACNC,MAAO,0BAET,CACED,KAAM,GACNC,MAAO,WAGT,CACED,KAAM,eACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAQT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,WACNC,MAAO,QAGT,CACED,KAAM,gBACNC,MAAO,QAGT,CACED,KAAM,WACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,oBACNC,MAAO,QAQT,CACED,KAAM,SACNC,MAAO,OAGT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,QAQT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,aACNC,MAAO,OAGT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,OAGT,CACED,KAAM,qBACNC,MAAO,OAGT,CACED,KAAM,eACNC,MAAO,OAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,OAGT,CACED,KAAM,MACNC,MAAO,OAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,WACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,OAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,cACNC,MAAO,QAQT,CACED,KAAM,SACNC,MAAO,OAGT,CACED,KAAM,QACNC,MAAO,SAGT,CACED,KAAM,oBACNC,MAAO,QAGT,CACED,KAAM,kBACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,mBACNC,MAAO,QAQT,CACED,KAAM,UACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,QAQT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,UACNC,MAAO,OAGT,CACED,KAAM,WACNC,MAAO,MAGT,CACED,KAAM,YACNC,MAAO,OAQT,CACED,KAAM,UACNC,MAAO,OAGT,CACED,KAAM,WACNC,MAAO,QAGT,CACED,KAAM,MACNC,MAAO,OAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,YACNC,MAAO,OAQT,CACED,KAAM,OACNC,MAAO,MAGT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,UACNC,MAAO,QAaT,CACED,KAAM,SACNC,MAAO,OAQT,CACED,KAAM,aACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,MAGT,CACED,KAAM,SACNC,MAAO,OAGT,CACED,KAAM,cACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,eACNC,MAAO,OAGT,CACED,KAAM,OACNC,MAAO,MAGT,CACED,KAAM,WACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,iBACNC,MAAO,QAGT,CACED,KAAM,aACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,OAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,WACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,OAGT,CACED,KAAM,mBACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,OAGT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,OAGT,CACED,KAAM,iBACNC,MAAO,QAGT,CACED,KAAM,UACNC,MAAO,QAQT,CACED,KAAM,UACNC,MAAO,OAOT,CACED,KAAM,GACNC,MAAO,WAET,CACED,KAAM,aACNC,MAAO,cAET,CACED,KAAM,GACNC,MAAO,WAuBT,CACED,KAAM,mBACNC,MAAO,QAGT,CACED,KAAM,kBACNC,MAAO,QAQT,CACED,KAAM,wBACNC,MAAO,QAkBT,CACED,KAAM,OACNC,MAAO,QAGT,CACED,KAAM,mBACNC,MAAO,QAaT,CACED,KAAM,kBACNC,MAAO,QAaT,CACED,KAAM,iBACNC,MAAO,QAQT,CACED,KAAM,kBACNC,MAAO,QAGT,CACED,KAAM,mBACNC,MAAO,QAGT,CACED,KAAM,kBACNC,MAAO,QAGT,CACED,KAAM,mBACNC,MAAO,QAGT,CACED,KAAM,oBACNC,MAAO,QAGT,CACED,KAAM,mBACNC,MAAO,QAQT,CACED,KAAM,kBACNC,MAAO,QAGT,CACED,KAAM,mBACNC,MAAO,QAGT,CACED,KAAM,kBACNC,MAAO,QAGT,CACED,KAAM,sBACNC,MAAO,OAGT,CACED,KAAM,mBACNC,MAAO,QAGT,CACED,KAAM,kBACNC,MAAO,OAQT,CACED,KAAM,qBACNC,MAAO,QAGT,CACED,KAAM,sBACNC,MAAO,QAQT,CACED,KAAM,mBACNC,MAAO,QAGT,CACED,KAAM,oBACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,OACNC,MAAO,OAuBT,CACED,KAAM,mBACNC,MAAO,QAGT,CACED,KAAM,QACNC,MAAO,QAGT,CACED,KAAM,SACNC,MAAO,QAGT,CACED,KAAM,0BACNC,MAAO,QAaT,CACED,KAAM,YACNC,MAAO,QAET,CACED,KAAM,WACNC,MAAO,OAaT,CACED,KAAM,uBACNC,MAAO,QAGT,CACED,KAAM,qBACNC,MAAO,QAaT,CACED,KAAM,oBACNC,MAAO,QAGT,CACED,KAAM,oBACNC,MAAO,QAGT,CACED,KAAM,qBACNC,MAAO,QAOT,CACED,KAAM,GACNC,MAAO,WAET,CACED,KAAM,iBACNC,MAAO,kBAET,CACED,KAAM,GACNC,MAAO,WAGT,CACED,KAAM,SACNC,MAAO,QAG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","file":"static/js/main.5b749002.chunk.js","sourcesContent":["// Nav component: placed in App.js with Router, appears on every page\n\nimport React from \"react\";\n\n// creates a Bootstrap \"navbar\" component with a home page view link on logo\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-secondary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        WanderList\n      </a>\n      <a className=\"float-right\" href=\"/\" style={{ color: \"white\"}}>\n        login\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","// =========================================================\n// Array of geoNames country ISO CODES and country Names to populate dropdown\n// =========================================================\n\n// regions are usually FIPS region codes (but countries are NOT FIPS codes)\n// https://en.wikipedia.org/wiki/List_of_FIPS_region_codes_(A%E2%80%93C)\n\n// =========================================================\n\nexport default {\n  countryArray: [\n    {\n      name: \"EARTH\",\n      value: \"XX\"\n    },\n    {\n      name: \"Afghanistan\",\n      value: \"AF\"\n    },\n    {\n      name: \"Albania\",\n      value: \"AL\"\n    },\n    {\n      name: \"Algeria\",\n      value: \"DZ\"\n    },\n    {\n      name: \"American Samoa\",\n      value: \"AS\"\n    },\n    {\n      name: \"Andorra\",\n      value: \"AD\"\n    },\n    {\n      name: \"Angola\",\n      value: \"AO\"\n    },\n    {\n      name: \"Anguilla\",\n      value: \"AI\"\n    },\n    {\n      name: \"Antarctica\",\n      value: \"AQ\"\n    },\n    {\n      name: \"Antigua and Barbuda\",\n      value: \"AG\"\n    },\n    {\n      name: \"Argentina\",\n      value: \"AR\"\n    },\n    {\n      name: \"Argentina, Buenos Aires Province\",\n      value: \"AR01\"\n    },\n    {\n      name: \"Argentina, Catamarca Province\",\n      value: \"AR02\"\n    },\n    {\n      name: \"Argentina, Chaco Province\",\n      value: \"AR03\"\n    },\n    {\n      name: \"Argentina, Chubut Province\",\n      value: \"AR04\"\n    },\n    {\n      name: \"Argentina, Córdoba Province\",\n      value: \"AR05\"\n    },\n    {\n      name: \"Argentina, Corrientes Province\",\n      value: \"AR06\"\n    },\n    {\n      name: \"Argentina, Distrito Federal\",\n      value: \"AR07\"\n    },\n    {\n      name: \"Argentina, Entre Ríos Province\",\n      value: \"AR08\"\n    },\n    {\n      name: \"Argentina, Formosa Province\",\n      value: \"AR09\"\n    },\n    {\n      name: \"Argentina, Jujuy Province\",\n      value: \"AR10\"\n    },\n    {\n      name: \"Argentina, La Pampa Province\",\n      value: \"AR11\"\n    },\n    {\n      name: \"Argentina, La Rioja Province\",\n      value: \"AR12\"\n    },\n    {\n      name: \"Argentina, Mendoza Province\",\n      value: \"AR13\"\n    },\n    {\n      name: \"Argentina, Misiones Province\",\n      value: \"AR14\"\n    },\n    {\n      name: \"Argentina, Neuquén Province\",\n      value: \"AR15\"\n    },\n    {\n      name: \"Argentina, Río Negro Province\",\n      value: \"AR16\"\n    },\n    {\n      name: \"Argentina, Salta Province\",\n      value: \"AR17\"\n    },\n    {\n      name: \"Argentina, San Juan Province\",\n      value: \"AR18\"\n    },\n    {\n      name: \"Argentina, San Luis Province\",\n      value: \"AR19\"\n    },\n    {\n      name: \"Argentina, Santa Cruz Province\",\n      value: \"AR20\"\n    },\n    {\n      name: \"Argentina, Santa Fe Province\",\n      value: \"AR21\"\n    },\n    {\n      name: \"Argentina, Santiago del Estero Province\",\n      value: \"AR22\"\n    },\n    {\n      name: \"Argentina, Tierra del Fuego, Antártida e Islas del Atlántico Sur Province\",\n      value: \"AR23\"\n    },\n    {\n      name: \"Argentina, Tucumán Province\",\n      value: \"AR24\"\n    },\n    {\n      name: \"Armenia\",\n      value: \"AM\"\n    },\n    {\n      name: \"Armenia, Aragatsotn Province\",\n      value: \"AM01\"\n    },\n    {\n      name: \"Armenia, Ararat Province\",\n      value: \"AM02\"\n    },\n    {\n      name: \"Armenia, Armavir Province\",\n      value: \"AM03\"\n    },\n    {\n      name: \"Armenia, Geghark'unik' Province\",\n      value: \"AM04\"\n    },\n    {\n      name: \"Armenia, Kotayk' Province\",\n      value: \"AM05\"\n    },\n    {\n      name: \"Armenia, Lorri Province\",\n      value: \"AM06\"\n    },\n    {\n      name: \"Armenia, Shirak Province\",\n      value: \"AM07\"\n    },\n    {\n      name: \"Armenia, Syunik' Province\",\n      value: \"AM08\"\n    },\n    {\n      name: \"Armenia, Tavush Province\",\n      value: \"AM09\"\n    },\n    {\n      name: \"Armenia, Vayots' Dzor Province\",\n      value: \"AM10\"\n    },\n    {\n      name: \"Armenia, Yerevan City\",\n      value: \"AM11\"\n    },\n    {\n      name: \"Aruba\",\n      value: \"AW\"\n    },\n    {\n      name: \"Australia\",\n      value: \"AU\"\n    },\n    {\n      name: \"Austria\",\n      value: \"AT\"\n    },\n    {\n      name: \"Austria, Burgenland State\",\n      value: \"AT01\"\n    },\n    {\n      name: \"Austria, Kärnten State\",\n      value: \"AT02\"\n    },\n    {\n      name: \"Austria, Niederösterreich State\",\n      value: \"AT03\"\n    },\n    {\n      name: \"Austria, Oberösterreich State\",\n      value: \"AT04\"\n    },\n    {\n      name: \"Austria, Salzburg State\",\n      value: \"AT05\"\n    },\n    {\n      name: \"Austria, Steiermark State\",\n      value: \"AT06\"\n    },\n    {\n      name: \"Austria, Tirol State\",\n      value: \"AT07\"\n    },\n    {\n      name: \"Austria, Vorarlberg State\",\n      value: \"AT08\"\n    },\n    {\n      name: \"Austria, Wien State\",\n      value: \"AT09\"\n    },\n    {\n      name: \"Azerbaijan\",\n      value: \"AZ\"\n    },\n    {\n      name: \"Bahrain\",\n      value: \"BH\"\n    },\n    {\n      name: \"Bahamas\",\n      value: \"BS\"\n    },\n    {\n      name: \"Bangladesh\",\n      value: \"BD\"\n    },\n    {\n      name: \"Barbados\",\n      value: \"BB\"\n    },\n    {\n      name: \"Belarus\",\n      value: \"BY\"\n    },\n    {\n      name: \"Belgium\",\n      value: \"BE\"\n    },\n    {\n      name: \"Belize\",\n      value: \"BZ\"\n    },\n    {\n      name: \"Benin\",\n      value: \"BJ\"\n    },\n    {\n      name: \"Bermuda\",\n      value: \"BM\"\n    },\n    {\n      name: \"Bhutan\",\n      value: \"BT\"\n    },\n    {\n      name: \"Bolivia\",\n      value: \"BO\"\n    },\n    {\n      name: \"Bonaire, Sint Eustatius and Saba\",\n      value: \"BQ\"\n    },\n    {\n      name: \"Bosnia and Herzegovina\",\n      value: \"BA\"\n    },\n    {\n      name: \"Botswana\",\n      value: \"BW\"\n    },\n    {\n      name: \"Bouvet Island\",\n      value: \"BV\"\n    },\n    {\n      name: \"Brazil\",\n      value: \"BR\"\n    },\n    {\n      name: \"Brazil, Acre State\",\n      value: \"BR01\"\n    },\n    {\n      name: \"Brazil, Alagoas State\",\n      value: \"BR02\"\n    },\n    {\n      name: \"Brazil, Amapá State\",\n      value: \"BR03\"\n    },\n    {\n      name: \"Brazil, Amazonas State\",\n      value: \"BR04\"\n    },\n    {\n      name: \"Brazil, Bahia State\",\n      value: \"BR05\"\n    },\n    {\n      name: \"Brazil, Ceará State\",\n      value: \"BR06\"\n    },\n    {\n      name: \"Brazil, Distrito Federal\",\n      value: \"BR07\"\n    },\n    {\n      name: \"Brazil, Espírito Santo State\",\n      value: \"BR08\"\n    },\n    {\n      name: \"Brazil, Mato Grosso do Sul State\",\n      value: \"BR11\"\n    },\n    {\n      name: \"Brazil, Maranhão State\",\n      value: \"BR13\"\n    },\n    {\n      name: \"Brazil, Mato Grosso State\",\n      value: \"BR14\"\n    },\n    {\n      name: \"Brazil, Minas Gerais State\",\n      value: \"BR15\"\n    },\n    {\n      name: \"Brazil, Pará State\",\n      value: \"BR16\"\n    },\n    {\n      name: \"Brazil, Paraíba State\",\n      value: \"BR17\"\n    },\n    {\n      name: \"Brazil, Paraná State\",\n      value: \"BR18\"\n    },\n    {\n      name: \"Brazil, Piauí State\",\n      value: \"BR20\"\n    },\n    {\n      name: \"Brazil, Rio de Janeiro State\",\n      value: \"BR21\"\n    },\n    {\n      name: \"Brazil, Rio Grande do Norte State\",\n      value: \"BR22\"\n    },\n    {\n      name: \"Brazil, Rio Grande do Sul State\",\n      value: \"BR23\"\n    },\n    {\n      name: \"Brazil, Rondônia State\",\n      value: \"BR24\"\n    },\n    {\n      name: \"Brazil, Roraima State\",\n      value: \"BR25\"\n    },\n    {\n      name: \"Brazil, Santa Catarina State\",\n      value: \"BR26\"\n    },\n    {\n      name: \"Brazil, São Paulo State\",\n      value: \"BR27\"\n    },\n    {\n      name: \"Brazil, Sergipe State\",\n      value: \"BR28\"\n    },\n    {\n      name: \"Brazil, Goiás State\",\n      value: \"BR29\"\n    },\n    {\n      name: \"Brazil, Pernambuco State\",\n      value: \"BR30\"\n    },\n    {\n      name: \"Brazil, Tocantins State\",\n      value: \"BR31\"\n    },\n    {\n      name: \"British Indian Ocean Territory\",\n      value: \"IO\"\n    },\n    {\n      name: \"Brunei Darussalam\",\n      value: \"BN\"\n    },\n    {\n      name: \"Bulgaria\",\n      value: \"BG\"\n    },\n    {\n      name: \"Burkina Faso\",\n      value: \"BF\"\n    },\n    {\n      name: \"Burundi\",\n      value: \"BI\"\n    },\n    {\n      name: \"Cambodia\",\n      value: \"KH\"\n    },\n    {\n      name: \"Cameroon\",\n      value: \"CM\"\n    },\n    {\n      name: \"Canada\",\n      value: \"CA\"\n    },\n    {\n      name: \"Canada, Alberta\",\n      value: \"CA01\"\n    },\n    {\n      name: \"Canada, British Columbia\",\n      value: \"CA02\"\n    },\n    {\n      name: \"Canada, Manitoba\",\n      value: \"CA03\"\n    },\n    {\n      name: \"Canada, New Brunswick\",\n      value: \"CA04\"\n    },\n    {\n      name: \"Canada, Newfoundland and Labrador\",\n      value: \"CA05\"\n    },\n    {\n      name: \"Canada, Nova Scotia\",\n      value: \"CA07\"\n    },\n    {\n      name: \"Canada, Ontario\",\n      value: \"CA08\"\n    },\n    {\n      name: \"Canada, Prince Edward Island\",\n      value: \"CA09\"\n    },\n    {\n      name: \"Canada, Quebec\",\n      value: \"CA10\"\n    },\n    {\n      name: \"Canada, Saskatchewan\",\n      value: \"CA11\"\n    },\n    {\n      name: \"Canada, Yukon\",\n      value: \"CA12\"\n    },\n    {\n      name: \"Canada, Northwest Territories\",\n      value: \"CA13\"\n    },\n    {\n      name: \"Canada, Nunavut\",\n      value: \"CA14\"\n    },\n    {\n      name: \"Cape Verde\",\n      value: \"CV\"\n    },\n    {\n      name: \"Cayman Islands\",\n      value: \"KY\"\n    },\n    {\n      name: \"Central African Republic\",\n      value: \"CF\"\n    },\n    {\n      name: \"Chad\",\n      value: \"TD\"\n    },\n    {\n      name: \"Chile\",\n      value: \"CL\"\n    },\n    {\n      name: \"China\",\n      value: \"CN\"\n    },\n    {\n      name: \"China, Anhui Province\",\n      value: \"CN01\"\n    },\n    {\n      name: \"China, Zhejiang Province\",\n      value: \"CN02\"\n    },\n    {\n      name: \"China, Jiangxi Province\",\n      value: \"CN03\"\n    },\n    {\n      name: \"China, Jiangsu Province\",\n      value: \"CN04\"\n    },\n    {\n      name: \"China, Jilin Province\",\n      value: \"CN05\"\n    },\n    {\n      name: \"China, Qinghai Province\",\n      value: \"CN06\"\n    },\n    {\n      name: \"China, Fujian Province\",\n      value: \"CN07\"\n    },\n    {\n      name: \"China, Heilongjiang Province\",\n      value: \"CN08\"\n    },\n    {\n      name: \"China, Henan Province\",\n      value: \"CN09\"\n    },\n    {\n      name: \"China, Hebei Province\",\n      value: \"CN10\"\n    },\n    {\n      name: \"China, Hunan Province\",\n      value: \"CN11\"\n    },\n    {\n      name: \"China, Hubei Province\",\n      value: \"CN12\"\n    },\n    {\n      name: \"China, Xinjiang Autonomous Region\",\n      value: \"CN13\"\n    },\n    {\n      name: \"China, Xizang Autonomous Region\",\n      value: \"CN14\"\n    },\n    {\n      name: \"China, Gansu Province\",\n      value: \"CN15\"\n    },\n    {\n      name: \"China, Guangxi Autonomous Region\",\n      value: \"CN16\"\n    },\n    {\n      name: \"China, Guizhou Province\",\n      value: \"CN18\"\n    },\n    {\n      name: \"China, Liaoning Province\",\n      value: \"CN19\"\n    },\n    {\n      name: \"China, Nei Mongol Autonomous Region\",\n      value: \"CN20\"\n    },\n    {\n      name: \"China, Ningxia Autonomous Region\",\n      value: \"CN21\"\n    },\n    {\n      name: \"China, Beijing Municipality\",\n      value: \"CN22\"\n    },\n    {\n      name: \"China, Shanghai Municipality\",\n      value: \"CN23\"\n    },\n    {\n      name: \"China, Shanxi Province\",\n      value: \"CN24\"\n    },\n    {\n      name: \"China, Shandong Province\",\n      value: \"CN25\"\n    },\n    {\n      name: \"China, Shaanxi Province\",\n      value: \"CN26\"\n    },\n    {\n      name: \"China, Tianjin Municipality\",\n      value: \"CN28\"\n    },\n    {\n      name: \"China, Yunnan Province\",\n      value: \"CN29\"\n    },\n    {\n      name: \"China, Guangdong Province\",\n      value: \"CN30\"\n    },\n    {\n      name: \"China, Hainan Province\",\n      value: \"CN31\"\n    },\n    {\n      name: \"China, Sichuan Province\",\n      value: \"CN32\"\n    },\n    {\n      name: \"China, Chongqing Municipality\",\n      value: \"CN33\"\n    },\n    {\n      name: \"Christmas Island\",\n      value: \"CX\"\n    },\n    {\n      name: \"Cocos (Keeling) Islands\",\n      value: \"CC\"\n    },\n    {\n      name: \"Colombia\",\n      value: \"CO\"\n    },\n    {\n      name: \"Comoros\",\n      value: \"KM\"\n    },\n    {\n      name: \"Congo\",\n      value: \"CG\"\n    },\n    {\n      name: \"Congo, Democratic Republic of\",\n      value: \"CD\"\n    },\n    {\n      name: \"Cook Islands\",\n      value: \"CK\"\n    },\n    {\n      name: \"Costa Rica\",\n      value: \"CR\"\n    },\n    {\n      name: \"Costa Rica, Alajuela\",\n      value: \"CR01\"\n    },\n    {\n      name: \"Costa Rica, Cartago\",\n      value: \"CR02\"\n    },\n    {\n      name: \"Costa Rica, Guanacaste\",\n      value: \"CR03\"\n    },\n    {\n      name: \"Costa Rica, Heredia\",\n      value: \"CR04\"\n    },\n    {\n      name: \"Costa Rica, Limón\",\n      value: \"CR06\"\n    },\n    {\n      name: \"Costa Rica, Puntarenas\",\n      value: \"CR07\"\n    },\n    {\n      name: \"Costa Rica, San José\",\n      value: \"CR08\"\n    },\n    {\n      name: \"Côte d'Ivoire\",\n      value: \"CI\"\n    },\n    {\n      name: \"Croatia\",\n      value: \"HR\"\n    },\n    {\n      name: \"Cuba\",\n      value: \"CU\"\n    },\n    {\n      name: \"Cuba, Pinar del Río\",\n      value: \"CU01\"\n    },\n    {\n      name: \"Cuba, Ciudad de La Habana\",\n      value: \"CU02\"\n    },\n    {\n      name: \"Cuba, Matanzas\",\n      value: \"CU03\"\n    },\n    {\n      name: \"Cuba, Isla de la Juventud\",\n      value: \"CU04\"\n    },\n    {\n      name: \"Cuba, Camagüey\",\n      value: \"CU05\"\n    },\n    {\n      name: \"Cuba, Ciego de Ávila\",\n      value: \"CU07\"\n    },\n    {\n      name: \"Cuba, Cienfuegos\",\n      value: \"CU08\"\n    },\n    {\n      name: \"Cuba, Granma\",\n      value: \"CU09\"\n    },\n    {\n      name: \"Cuba, Guantánamo\",\n      value: \"CU10\"\n    },\n    {\n      name: \"Cuba, La Habana\",\n      value: \"CU11\"\n    },\n    {\n      name: \"Cuba, Holguín\",\n      value: \"CU12\"\n    },\n    {\n      name: \"Cuba, Las Tunas\",\n      value: \"CU13\"\n    },\n    {\n      name: \"Cuba, Sancti Spíritus\",\n      value: \"CU14\"\n    },\n    {\n      name: \"Cuba, Santiago de Cuba\",\n      value: \"CU15\"\n    },\n    {\n      name: \"Cuba, Villa Clara\",\n      value: \"CU16\"\n    },\n    {\n      name: \"Curaçao\",\n      value: \"CW\"\n    },\n    {\n      name: \"Cyprus\",\n      value: \"CY\"\n    },\n    {\n      name: \"Czech Republic\",\n      value: \"CZ\"\n    },\n    {\n      name: \"Czech Republic, Prague (Praha)\",\n      value: \"CZ52\"\n    },\n    {\n      name: \"Czech Republic, South Moravia (Jihomoravský)\",\n      value: \"CZ78\"\n    },\n    {\n      name: \"Czech Republic, South Bohemia (Jihočeský)\",\n      value: \"CZ79\"\n    },\n    {\n      name: \"Czech Republic, Vysočina\",\n      value: \"CZ80\"\n    },\n    {\n      name: \"Czech Republic, Karlovy Vary (Karlovarský)\",\n      value: \"CZ81\"\n    },\n    {\n      name: \"Czech Republic, Hradec Králové (Královéhradecký)\",\n      value: \"CZ82\"\n    },\n    {\n      name: \"Czech Republic, Liberec (Liberecký)\",\n      value: \"CZ83\"\n    },\n    {\n      name: \"Czech Republic, Olomouc (Olomoucký)\",\n      value: \"CZ84\"\n    },\n    {\n      name: \"Czech Republic, Moravia-Silesia (Moravskoslezský)\",\n      value: \"CZ85\"\n    },\n    {\n      name: \"Czech Republic, Pardubice (Pardubický)\",\n      value: \"CZ86\"\n    },\n    {\n      name: \"Czech Republic, Plzeň (Plzeňský)\",\n      value: \"CZ87\"\n    },\n    {\n      name: \"Czech Republic, Central Bohemia (Středočeský)\",\n      value: \"CZ88\"\n    },\n    {\n      name: \"Czech Republic, Ústí nad Labem (Ústecký)\",\n      value: \"CZ89\"\n    },\n    {\n      name: \"Czech Republic, Zlín (Zlínský)\",\n      value: \"CZ90\"\n    },\n    {\n      name: \"Denmark\",\n      value: \"DK\"\n    },\n    {\n      name: \"Djibouti\",\n      value: \"DJ\"\n    },\n    {\n      name: \"Dominica\",\n      value: \"DM\"\n    },\n    {\n      name: \"Dominican Republic\",\n      value: \"DO\"\n    },\n    {\n      name: \"Ecuador\",\n      value: \"EC\"\n    },\n    {\n      name: \"Egypt\",\n      value: \"EG\"\n    },\n    {\n      name: \"El Salvador\",\n      value: \"SV\"\n    },\n    {\n      name: \"Equatorial Guinea\",\n      value: \"GQ\"\n    },\n    {\n      name: \"Eritrea\",\n      value: \"ER\"\n    },\n    {\n      name: \"Estonia\",\n      value: \"EE\"\n    },\n    {\n      name: \"Ethiopia\",\n      value: \"ET\"\n    },\n    {\n      name: \"Falkland Islands (Malvinas)\",\n      value: \"FK\"\n    },\n    {\n      name: \"Faroe Islands\",\n      value: \"FO\"\n    },\n    {\n      name: \"Fiji\",\n      value: \"FJ\"\n    },\n    {\n      name: \"Finland\",\n      value: \"FI\"\n    },\n    {\n      name: \"Finland, Uusimaa\",\n      value: \"FI01\"\n    },\n    {\n      name: \"Finland, Finland Proper\",\n      value: \"FI02\"\n    },\n    {\n      name: \"Finland, Satakunta\",\n      value: \"FI04\"\n    },\n    {\n      name: \"Finland, Tavastia Proper\",\n      value: \"FI05\"\n    },\n    {\n      name: \"Finland, Pirkanmaa\",\n      value: \"FI06\"\n    },\n    {\n      name: \"Finland, Kymenlaakso\",\n      value: \"FI08\"\n    },\n    {\n      name: \"Finland, Southern Savonia\",\n      value: \"FI10\"\n    },\n    {\n      name: \"Finland, Northern Savo\",\n      value: \"FI11\"\n    },\n    {\n      name: \"Finland, North Karelia\",\n      value: \"FI12\"\n    },\n    {\n      name: \"Finland, Central Finland\",\n      value: \"FI13\"\n    },\n    {\n      name: \"Finland, Southern Ostrobothnia\",\n      value: \"FI14\"\n    },\n    {\n      name: \"Finland, Ostrobothnia\",\n      value: \"FI15\"\n    },\n    {\n      name: \"Finland, Central Ostrobothnia\",\n      value: \"FI16\"\n    },\n    {\n      name: \"Finland, Northern Ostrobothnia\",\n      value: \"FI17\"\n    },\n    {\n      name: \"Finland, Kainuu\",\n      value: \"FI18\"\n    },\n    {\n      name: \"Finland, Lapland\",\n      value: \"FI19\"\n    },\n    {\n      name: \"Finland, Åland Islands\",\n      value: \"AX\"\n    },\n    {\n      name: \"France\",\n      value: \"FR\"\n    },\n    {\n      name: \"France, Grand Est (Strasbourg)\",\n      value: \"FR44\"\n    },\n    {\n      name: \"France, Nouvelle-Aquitaine (Bordeaux)\",\n      value: \"FR75\"\n    },\n    {\n      name: \"France, Auvergne-Rhône-Alpes (Lyon)\",\n      value: \"FR84\"\n    },\n    {\n      name: \"France, Bourgogne-Franche-Comté (Dijon)\",\n      value: \"FR27\"\n    },\n    {\n      name: \"France, Brittany (Rennes)\",\n      value: \"FR53\"\n    },\n    {\n      name: \"France, Centre-Val de Loire (Orléans)\",\n      value: \"FR24\"\n    },\n    {\n      name: \"France, Île-de-France (Paris)\",\n      value: \"FR11\"\n    },\n    {\n      name: \"France, Occitanie (Toulouse)\",\n      value: \"FR76\"\n    },\n    {\n      name: \"France, Hauts-de-France (Lille)\",\n      value: \"FR32\"\n    },\n    {\n      name: \"France, Normandy (Rouen)\",\n      value: \"FR28\"\n    },\n    {\n      name: \"France, Pays de la Loire (Nantes)\",\n      value: \"FR52\"\n    },\n    {\n      name: \"France, Provence-Alpes-Côte d'Azur (Marseille)\",\n      value: \"FR93\"\n    },\n    {\n      name: \"France, Corsica (Ajaccio)\",\n      value: \"FR94\"\n    },\n    {\n      name: \"French Guiana\",\n      value: \"GF\"\n    },\n    {\n      name: \"French Polynesia\",\n      value: \"PF\"\n    },\n    {\n      name: \"French Southern Territories\",\n      value: \"TF\"\n    },\n    {\n      name: \"Gabon\",\n      value: \"GA\"\n    },\n    {\n      name: \"Gambia\",\n      value: \"GM\"\n    },\n    {\n      name: \"Georgia\",\n      value: \"GE\"\n    },\n    {\n      name: \"Germany\",\n      value: \"DE\"\n    },\n    {\n      name: \"Ghana\",\n      value: \"GH\"\n    },\n    {\n      name: \"Gibraltar\",\n      value: \"GI\"\n    },\n    {\n      name: \"Greece\",\n      value: \"GR\"\n    },\n    {\n      name: \"Greenland\",\n      value: \"GL\"\n    },\n    {\n      name: \"Grenada\",\n      value: \"GD\"\n    },\n    {\n      name: \"Guadeloupe\",\n      value: \"GP\"\n    },\n    {\n      name: \"Guam\",\n      value: \"GU\"\n    },\n    {\n      name: \"Guatemala\",\n      value: \"GT\"\n    },\n    {\n      name: \"Guernsey\",\n      value: \"GG\"\n    },\n    {\n      name: \"Guinea\",\n      value: \"GN\"\n    },\n    {\n      name: \"Guinea-Bissau\",\n      value: \"GW\"\n    },\n    {\n      name: \"Guyana\",\n      value: \"GY\"\n    },\n    {\n      name: \"Haiti\",\n      value: \"HT\"\n    },\n    {\n      name: \"Heard Island and McDonald Islands\",\n      value: \"HM\"\n    },\n    {\n      name: \"Holy See (Vatican City State)\",\n      value: \"VA\"\n    },\n    {\n      name: \"Honduras\",\n      value: \"HN\"\n    },\n    {\n      name: \"Hong Kong\",\n      value: \"HK\"\n    },\n    {\n      name: \"Hungary\",\n      value: \"HU\"\n    },\n    {\n      name: \"Iceland\",\n      value: \"IS\"\n    },\n    {\n      name: \"India\",\n      value: \"IN\"\n    },\n    {\n      name: \"India, Andaman and Nicobar Islands Union Territory\",\n      value: \"IN01\"\n    },\n    {\n      name: \"India, Andhra Pradesh State\",\n      value: \"IN02\"\n    },\n    {\n      name: \"India, Assam State\",\n      value: \"IN03\"\n    },\n    {\n      name: \"India, Chandigarh Union Territory\",\n      value: \"IN05\"\n    },\n    {\n      name: \"India, Dadra and Nagar Haveli Union Territory\",\n      value: \"IN06\"\n    },\n    {\n      name: \"India, Delhi Union Territory\",\n      value: \"IN07\"\n    },\n    {\n      name: \"India, Gujarat State\",\n      value: \"IN09\"\n    },\n    {\n      name: \"India, Haryana State\",\n      value: \"IN10\"\n    },\n    {\n      name: \"India, Himachal Pradesh State\",\n      value: \"IN11\"\n    },\n    {\n      name: \"India, Jammu and Kashmir State\",\n      value: \"IN12\"\n    },\n    {\n      name: \"India, Kerala State\",\n      value: \"IN13\"\n    },\n    {\n      name: \"India, Lakshadweep Union Territory\",\n      value: \"IN14\"\n    },\n    {\n      name: \"India, Maharashtra State\",\n      value: \"IN16\"\n    },\n    {\n      name: \"India, Manipur State\",\n      value: \"IN17\"\n    },\n    {\n      name: \"India, Meghalaya State\",\n      value: \"IN18\"\n    },\n    {\n      name: \"India, Karnataka State\",\n      value: \"IN19\"\n    },\n    {\n      name: \"India, Nagaland State\",\n      value: \"IN20\"\n    },\n    {\n      name: \"India, Odisha State\",\n      value: \"IN21\"\n    },\n    {\n      name: \"India, Puducherry Union Territory\",\n      value: \"IN22\"\n    },\n    {\n      name: \"India, Punjab State\",\n      value: \"IN23\"\n    },\n    {\n      name: \"India, Rajasthan State\",\n      value: \"IN24\"\n    },\n    {\n      name: \"India, Tamil Nadu State\",\n      value: \"IN25\"\n    },\n    {\n      name: \"India, Tripura State\",\n      value: \"IN26\"\n    },\n    {\n      name: \"India, West Bengal State\",\n      value: \"IN28\"\n    },\n    {\n      name: \"India, Sikkim State\",\n      value: \"IN29\"\n    },\n    {\n      name: \"India, Arunachal Pradesh State\",\n      value: \"IN30\"\n    },\n    {\n      name: \"India, Mizoram State\",\n      value: \"IN31\"\n    },\n    {\n      name: \"India, Daman and Diu Union Territory\",\n      value: \"IN32\"\n    },\n    {\n      name: \"India, Goa State\",\n      value: \"IN33\"\n    },\n    {\n      name: \"India, Bihar State\",\n      value: \"IN34\"\n    },\n    {\n      name: \"India, Madhya Pradesh State\",\n      value: \"IN35\"\n    },\n    {\n      name: \"India, Uttar Pradesh State\",\n      value: \"IN36\"\n    },\n    {\n      name: \"India, Chhattisgarh State\",\n      value: \"IN37\"\n    },\n    {\n      name: \"India, Jharkhand State\",\n      value: \"IN38\"\n    },\n    {\n      name: \"India, Uttarakhand State\",\n      value: \"IN39\"\n    },\n    {\n      name: \"India, Telangana State\",\n      value: \"IN40\"\n    },\n    {\n      name: \"Indonesia\",\n      value: \"ID\"\n    },\n    {\n      name: \"Iran\",\n      value: \"IR\"\n    },\n    {\n      name: \"Iraq\",\n      value: \"IQ\"\n    },\n    {\n      name: \"Ireland\",\n      value: \"IE\"\n    },\n    {\n      name: \"Ireland, Leinster\",\n      value: \"IEL\"\n    },\n    {\n      name: \"Ireland, Ulster\",\n      value: \"IEU\"\n    },\n    {\n      name: \"Ireland, Munster\",\n      value: \"IEM\"\n    },\n    {\n      name: \"Ireland, Connaught\",\n      value: \"IEC\"\n    },\n    {\n      name: \"Isle of Man\",\n      value: \"IM\"\n    },\n    {\n      name: \"Israel\",\n      value: \"IL\"\n    },\n    {\n      name: \"Italy\",\n      value: \"IT\"\n    },\n    {\n      name: \"Jamaica\",\n      value: \"JM\"\n    },\n    {\n      name: \"Japan\",\n      value: \"JP\"\n    },\n    {\n      name: \"Japan, Aichi Prefecture\",\n      value: \"JP01\"\n    },\n    {\n      name: \"Japan, Akita Prefecture\",\n      value: \"JP02\"\n    },\n    {\n      name: \"Japan, Aomori Prefecture\",\n      value: \"JP03\"\n    },\n    {\n      name: \"Japan, Chiba Prefecture\",\n      value: \"JP04\"\n    },\n    {\n      name: \"Japan, Ehime Prefecture\",\n      value: \"JP05\"\n    },\n    {\n      name: \"Japan, Fukui Prefecture\",\n      value: \"JP06\"\n    },\n    {\n      name: \"Japan, Fukuoka Prefecture\",\n      value: \"JP07\"\n    },\n    {\n      name: \"Japan, Fukushima Prefecture\",\n      value: \"JP08\"\n    },\n    {\n      name: \"Japan, Gifu Prefecture\",\n      value: \"JP09\"\n    },\n    {\n      name: \"Japan, Gunma Prefecture\",\n      value: \"JP10\"\n    },\n    {\n      name: \"Japan, Hiroshima Prefecture\",\n      value: \"JP11\"\n    },\n    {\n      name: \"Japan, Hokkaidō Prefecture\",\n      value: \"JP12\"\n    },\n    {\n      name: \"Japan, Hyōgo Prefecture\",\n      value: \"JP13\"\n    },\n    {\n      name: \"Japan, Ibaraki Prefecture\",\n      value: \"JP14\"\n    },\n    {\n      name: \"Japan, Ishikawa Prefecture\",\n      value: \"JP15\"\n    },\n    {\n      name: \"Japan, Iwate Prefecture\",\n      value: \"JP16\"\n    },\n    {\n      name: \"Japan, Kagawa Prefecture\",\n      value: \"JP17\"\n    },\n    {\n      name: \"Japan, Kagoshima Prefecture\",\n      value: \"JP18\"\n    },\n    {\n      name: \"Japan, Kanagawa Prefecture\",\n      value: \"JP19\"\n    },\n    {\n      name: \"Japan, Kōchi Prefecture\",\n      value: \"JP20\"\n    },\n    {\n      name: \"Japan, Kumamoto Prefecture\",\n      value: \"JP21\"\n    },\n    {\n      name: \"Japan, Kyōto Prefecture\",\n      value: \"JP22\"\n    },\n    {\n      name: \"Japan, Mie Prefecture\",\n      value: \"JP23\"\n    },\n    {\n      name: \"Japan, Miyagi Prefecture\",\n      value: \"JP24\"\n    },\n    {\n      name: \"Japan, Miyazaki Prefecture\",\n      value: \"JP25\"\n    },\n    {\n      name: \"Japan, Nagano Prefecture\",\n      value: \"JP26\"\n    },\n    {\n      name: \"Japan, Nagasaki Prefecture\",\n      value: \"JP27\"\n    },\n    {\n      name: \"Japan, Nara Prefecture\",\n      value: \"JP28\"\n    },\n    {\n      name: \"Japan, Niigata Prefecture\",\n      value: \"JP29\"\n    },\n    {\n      name: \"Japan, Ōita Prefecture\",\n      value: \"JP30\"\n    },\n    {\n      name: \"Japan, Okayama Prefecture\",\n      value: \"JP31\"\n    },\n    {\n      name: \"Japan, Ōsaka Prefecture\",\n      value: \"JP32\"\n    },\n    {\n      name: \"Japan, Saga Prefecture\",\n      value: \"JP33\"\n    },\n    {\n      name: \"Japan, Saitama Prefecture\",\n      value: \"JP34\"\n    },\n    {\n      name: \"Japan, Shiga Prefecture\",\n      value: \"JP35\"\n    },\n    {\n      name: \"Japan, Shimane Prefecture\",\n      value: \"JP36\"\n    },\n    {\n      name: \"Japan, Shizuoka Prefecture\",\n      value: \"JP37\"\n    },\n    {\n      name: \"Japan, Tochigi Prefecture\",\n      value: \"JP38\"\n    },\n    {\n      name: \"Japan, Tokushima Prefecture\",\n      value: \"JP39\"\n    },\n    {\n      name: \"Japan, Tōkyō Prefecture\",\n      value: \"JP40\"\n    },\n    {\n      name: \"Japan, Tottori Prefecture\",\n      value: \"JP41\"\n    },\n    {\n      name: \"Japan, Toyama Prefecture\",\n      value: \"JP42\"\n    },\n    {\n      name: \"Japan, Wakayama Prefecture\",\n      value: \"JP43\"\n    },\n    {\n      name: \"Japan, Yamagata Prefecture\",\n      value: \"JP44\"\n    },\n    {\n      name: \"Japan, Yamaguchi Prefecture\",\n      value: \"JP45\"\n    },\n    {\n      name: \"Japan, Yamanashi Prefecture\",\n      value: \"JP46\"\n    },\n    {\n      name: \"Japan, Okinawa Prefecture\",\n      value: \"JP47\"\n    },\n    {\n      name: \"Jersey\",\n      value: \"JE\"\n    },\n    {\n      name: \"Jordan\",\n      value: \"JO\"\n    },\n    {\n      name: \"Jordan, Balqa\",\n      value: \"JO02\"\n    },\n    {\n      name: \"Jordan, Karak\",\n      value: \"JO09\"\n    },\n    {\n      name: \"Jordan, Tafilah\",\n      value: \"JO12\"\n    },\n    {\n      name: \"Jordan, Mafraq\",\n      value: \"JO15\"\n    },\n    {\n      name: \"Jordan, Amman\",\n      value: \"JO16\"\n    },\n    {\n      name: \"Jordan, Zarqa\",\n      value: \"JO17\"\n    },\n    {\n      name: \"Jordan, Irbid\",\n      value: \"JO18\"\n    },\n    {\n      name: \"Jordan, Ma'an\",\n      value: \"JO19\"\n    },\n    {\n      name: \"Jordan, Ajlun\",\n      value: \"JO20\"\n    },\n    {\n      name: \"Jordan, Aqaba\",\n      value: \"JO21\"\n    },\n    {\n      name: \"Jordan, Jerash\",\n      value: \"JO22\"\n    },\n    {\n      name: \"Jordan, Madaba\",\n      value: \"JO23\"\n    },\n    {\n      name: \"Kazakhstan\",\n      value: \"KZ\"\n    },\n    {\n      name: \"Kenya\",\n      value: \"KE\"\n    },\n    {\n      name: \"Kiribati\",\n      value: \"KI\"\n    },\n    {\n      name: \"North Korea\",\n      value: \"KP\"\n    },\n    {\n      name: \"South Korea\",\n      value: \"KR\"\n    },\n    {\n      name: \"Kuwait\",\n      value: \"KW\"\n    },\n    {\n      name: \"Kyrgyzstan\",\n      value: \"KG\"\n    },\n    {\n      name: \"Laos\",\n      value: \"LA\"\n    },\n    {\n      name: \"Latvia\",\n      value: \"LV\"\n    },\n    {\n      name: \"Lebanon\",\n      value: \"LB\"\n    },\n    {\n      name: \"Lesotho\",\n      value: \"LS\"\n    },\n    {\n      name: \"Liberia\",\n      value: \"LR\"\n    },\n    {\n      name: \"Libya\",\n      value: \"LY\"\n    },\n    {\n      name: \"Liechtenstein\",\n      value: \"LI\"\n    },\n    {\n      name: \"Lithuania\",\n      value: \"LT\"\n    },\n    {\n      name: \"Luxembourg\",\n      value: \"LU\"\n    },\n    {\n      name: \"Macao\",\n      value: \"MO\"\n    },\n    {\n      name: \"Macedonia\",\n      value: \"MK\"\n    },\n    {\n      name: \"Madagascar\",\n      value: \"MG\"\n    },\n    {\n      name: \"Malawi\",\n      value: \"MW\"\n    },\n    {\n      name: \"Malaysia\",\n      value: \"MY\"\n    },\n    {\n      name: \"Maldives\",\n      value: \"MV\"\n    },\n    {\n      name: \"Mali\",\n      value: \"ML\"\n    },\n    {\n      name: \"Malta\",\n      value: \"MT\"\n    },\n    {\n      name: \"Marshall Islands\",\n      value: \"MH\"\n    },\n    {\n      name: \"Martinique\",\n      value: \"MQ\"\n    },\n    {\n      name: \"Mauritania\",\n      value: \"MR\"\n    },\n    {\n      name: \"Mauritius\",\n      value: \"MU\"\n    },\n    {\n      name: \"Mayotte\",\n      value: \"YT\"\n    },\n    {\n      name: \"Mexico\",\n      value: \"MX\"\n    },\n    {\n      name: \"Mexico, Aguascalientes\",\n      value: \"MX01\"\n    },\n    {\n      name: \"Mexico, Baja California\",\n      value: \"MX02\"\n    },\n    {\n      name: \"Mexico, Baja California Sur\",\n      value: \"MX03\"\n    },\n    {\n      name: \"Mexico, Campeche\",\n      value: \"MX04\"\n    },\n    {\n      name: \"Mexico, Chiapas\",\n      value: \"MX05\"\n    },\n    {\n      name: \"Mexico, Chihuahua\",\n      value: \"MX06\"\n    },\n    {\n      name: \"Mexico, Coahuila\",\n      value: \"MX07\"\n    },\n    {\n      name: \"Mexico, Colima\",\n      value: \"MX08\"\n    },\n    {\n      name: \"Mexico, Distrito Federal\",\n      value: \"MX09\"\n    },\n    {\n      name: \"Mexico, Durango\",\n      value: \"MX10\"\n    },\n    {\n      name: \"Mexico, Guanajuato\",\n      value: \"MX11\"\n    },\n    {\n      name: \"Mexico, Guerrero\",\n      value: \"MX12\"\n    },\n    {\n      name: \"Mexico, Hidalgo\",\n      value: \"MX13\"\n    },\n    {\n      name: \"Mexico, Jalisco\",\n      value: \"MX14\"\n    },\n    {\n      name: \"Mexico, México State\",\n      value: \"MX15\"\n    },\n    {\n      name: \"Mexico, Michoacán\",\n      value: \"MX16\"\n    },\n    {\n      name: \"Mexico, Morelos\",\n      value: \"MX17\"\n    },\n    {\n      name: \"Mexico, Nayarit\",\n      value: \"MX18\"\n    },\n    {\n      name: \"Mexico, Nuevo León\",\n      value: \"MX19\"\n    },\n    {\n      name: \"Mexico, Oaxaca\",\n      value: \"MX20\"\n    },\n    {\n      name: \"Mexico, Puebla\",\n      value: \"MX21\"\n    },\n    {\n      name: \"Mexico, Querétaro\",\n      value: \"MX22\"\n    },\n    {\n      name: \"Mexico, Quintana Roo\",\n      value: \"MX23\"\n    },\n    {\n      name: \"Mexico, San Luis Potosí\",\n      value: \"MX24\"\n    },\n    {\n      name: \"Mexico, Sinaloa\",\n      value: \"MX25\"\n    },\n    {\n      name: \"Mexico, Sonora\",\n      value: \"MX26\"\n    },\n    {\n      name: \"Mexico, Tabasco\",\n      value: \"MX27\"\n    },\n    {\n      name: \"Mexico, Tamaulipas\",\n      value: \"MX28\"\n    },\n    {\n      name: \"Mexico, Tlaxcala\",\n      value: \"MX29\"\n    },\n    {\n      name: \"Mexico, Veracruz\",\n      value: \"MX30\"\n    },\n    {\n      name: \"Mexico, Yucatán\",\n      value: \"MX31\"\n    },\n    {\n      name: \"Mexico, Zacatecas\",\n      value: \"MX32\"\n    },\n    {\n      name: \"Micronesia\",\n      value: \"FM\"\n    },\n    {\n      name: \"Moldova\",\n      value: \"MD\"\n    },\n    {\n      name: \"Monaco\",\n      value: \"MC\"\n    },\n    {\n      name: \"Mongolia\",\n      value: \"MN\"\n    },\n    {\n      name: \"Montenegro\",\n      value: \"ME\"\n    },\n    {\n      name: \"Montserrat\",\n      value: \"MS\"\n    },\n    {\n      name: \"Morocco\",\n      value: \"MA\"\n    },\n    {\n      name: \"Mozambique\",\n      value: \"MZ\"\n    },\n    {\n      name: \"Myanmar (Burma)\",\n      value: \"MM\"\n    },\n    {\n      name: \"Namibia\",\n      value: \"NA\"\n    },\n    {\n      name: \"Nauru\",\n      value: \"NR\"\n    },\n    {\n      name: \"Nepal\",\n      value: \"NP\"\n    },\n    {\n      name: \"Netherlands\",\n      value: \"NL\"\n    },\n    {\n      name: \"New Caledonia\",\n      value: \"NC\"\n    },\n    {\n      name: \"New Zealand\",\n      value: \"NZ\"\n    },\n    {\n      name: \"Nicaragua\",\n      value: \"NI\"\n    },\n    {\n      name: \"Niger\",\n      value: \"NE\"\n    },\n    {\n      name: \"Nigeria\",\n      value: \"NG\"\n    },\n    {\n      name: \"Niue\",\n      value: \"NU\"\n    },\n    {\n      name: \"Norfolk Island\",\n      value: \"NF\"\n    },\n    {\n      name: \"Northern Mariana Islands\",\n      value: \"MP\"\n    },\n    {\n      name: \"Norway\",\n      value: \"NO\"\n    },\n    {\n      name: \"Oman\",\n      value: \"OM\"\n    },\n    {\n      name: \"Pakistan\",\n      value: \"PK\"\n    },\n    {\n      name: \"Pakistan, Federally Administered Tribal Areas Territory\",\n      value: \"PK01\"\n    },\n    {\n      name: \"Pakistan, Balochistān Province\",\n      value: \"PK02\"\n    },\n    {\n      name: \"Pakistan, North-West Frontier Province\",\n      value: \"PK03\"\n    },\n    {\n      name: \"Pakistan, Punjab Province\",\n      value: \"PK04\"\n    },\n    {\n      name: \"Pakistan, Sindh Province\",\n      value: \"PK05\"\n    },\n    {\n      name: \"Pakistan, Azad Jammu and Kashmir (disputed territory)\",\n      value: \"PK06\"\n    },\n    {\n      name: \"Pakistan, Federally Administered Northern Areas (disputed territory)\",\n      value: \"PK07\"\n    },\n    {\n      name: \"Pakistan, Islāmābād\",\n      value: \"PK08\"\n    },\n    {\n      name: \"Palau\",\n      value: \"PW\"\n    },\n    {\n      name: \"Palestine\",\n      value: \"PS\"\n    },\n    {\n      name: \"Panama\",\n      value: \"PA\"\n    },\n    {\n      name: \"Papua New Guinea\",\n      value: \"PG\"\n    },\n    {\n      name: \"Paraguay\",\n      value: \"PY\"\n    },\n    {\n      name: \"Peru\",\n      value: \"PE\"\n    },\n    {\n      name: \"Peru, Amazonas\",\n      value: \"PE01\"\n    },\n    {\n      name: \"Peru, Ancash\",\n      value: \"PE02\"\n    },\n    {\n      name: \"Peru, Apurímac\",\n      value: \"PE03\"\n    },\n    {\n      name: \"Peru, Arequipa\",\n      value: \"PE04\"\n    },\n    {\n      name: \"Peru, Ayacucho\",\n      value: \"PE05\"\n    },\n    {\n      name: \"Peru, Cajamarca\",\n      value: \"PE06\"\n    },\n    {\n      name: \"Peru, Callao\",\n      value: \"PE07\"\n    },\n    {\n      name: \"Peru, Cusco\",\n      value: \"PE08\"\n    },\n    {\n      name: \"Peru, Huancavelica\",\n      value: \"PE09\"\n    },\n    {\n      name: \"Peru, Huánuco\",\n      value: \"PE10\"\n    },\n    {\n      name: \"Peru, Ica\",\n      value: \"PE11\"\n    },\n    {\n      name: \"Peru, Junín\",\n      value: \"PE12\"\n    },\n    {\n      name: \"Peru, La Libertad\",\n      value: \"PE13\"\n    },\n    {\n      name: \"Peru, Lambayeque\",\n      value: \"PE14\"\n    },\n    {\n      name: \"Peru, Lima\",\n      value: \"PE15\"\n    },\n    {\n      name: \"Peru, Loreto\",\n      value: \"PE16\"\n    },\n    {\n      name: \"Peru, Madre de Dios\",\n      value: \"PE17\"\n    },\n    {\n      name: \"Peru, Moquegua\",\n      value: \"PE18\"\n    },\n    {\n      name: \"Peru, Pasco\",\n      value: \"PE19\"\n    },\n    {\n      name: \"Peru, Piura\",\n      value: \"PE20\"\n    },\n    {\n      name: \"Peru, Puno\",\n      value: \"PE21\"\n    },\n    {\n      name: \"Peru, San Martín\",\n      value: \"PE22\"\n    },\n    {\n      name: \"Peru, Tacna\",\n      value: \"PE23\"\n    },\n    {\n      name: \"Peru, Tumbes\",\n      value: \"PE24\"\n    },\n    {\n      name: \"Peru, Ucayali\",\n      value: \"PE25\"\n    },\n    {\n      name: \"Philippines\",\n      value: \"PH\"\n    },\n    {\n      name: \"Pitcairn\",\n      value: \"PN\"\n    },\n    {\n      name: \"Poland\",\n      value: \"PL\"\n    },\n    {\n      name: \"Portugal\",\n      value: \"PT\"\n    },\n    {\n      name: \"Puerto Rico\",\n      value: \"PR\"\n    },\n    {\n      name: \"Qatar\",\n      value: \"QA\"\n    },\n    {\n      name: \"Réunion\",\n      value: \"RE\"\n    },\n    {\n      name: \"Romania\",\n      value: \"RO\"\n    },\n    {\n      name: \"Russian Federation\",\n      value: \"RU\"\n    },\n    {\n      name: \"Rwanda\",\n      value: \"RW\"\n    },\n    {\n      name: \"Saint Barthélemy\",\n      value: \"BL\"\n    },\n    {\n      name: \"Saint Helena, Ascension and Tristan da Cunha\",\n      value: \"SH\"\n    },\n    {\n      name: \"Saint Kitts and Nevis\",\n      value: \"KN\"\n    },\n    {\n      name: \"Saint Lucia\",\n      value: \"LC\"\n    },\n    {\n      name: \"Saint Martin (French part)\",\n      value: \"MF\"\n    },\n    {\n      name: \"Saint Pierre and Miquelon\",\n      value: \"PM\"\n    },\n    {\n      name: \"Saint Vincent and the Grenadines\",\n      value: \"VC\"\n    },\n    {\n      name: \"Samoa\",\n      value: \"WS\"\n    },\n    {\n      name: \"San Marino\",\n      value: \"SM\"\n    },\n    {\n      name: \"Sao Tome and Principe\",\n      value: \"ST\"\n    },\n    {\n      name: \"Saudi Arabia\",\n      value: \"SA\"\n    },\n    {\n      name: \"Senegal\",\n      value: \"SN\"\n    },\n    {\n      name: \"Serbia\",\n      value: \"RS\"\n    },\n    {\n      name: \"Seychelles\",\n      value: \"SC\"\n    },\n    {\n      name: \"Sierra Leone\",\n      value: \"SL\"\n    },\n    {\n      name: \"Singapore\",\n      value: \"SG\"\n    },\n    {\n      name: \"Sint Maarten (Dutch part)\",\n      value: \"SX\"\n    },\n    {\n      name: \"Slovakia\",\n      value: \"SK\"\n    },\n    {\n      name: \"Slovenia\",\n      value: \"SI\"\n    },\n    {\n      name: \"Solomon Islands\",\n      value: \"SB\"\n    },\n    {\n      name: \"Somalia\",\n      value: \"SO\"\n    },\n    {\n      name: \"South Africa\",\n      value: \"ZA\"\n    },\n    {\n      name: \"South Georgia and the South Sandwich Islands\",\n      value: \"GS\"\n    },\n    {\n      name: \"South Sudan\",\n      value: \"SS\"\n    },\n    {\n      name: \"Spain\",\n      value: \"ES\"\n    },\n    {\n      name: \"Sri Lanka\",\n      value: \"LK\"\n    },\n    {\n      name: \"Sudan\",\n      value: \"SD\"\n    },\n    {\n      name: \"Suriname\",\n      value: \"SR\"\n    },\n    {\n      name: \"Svalbard and Jan Mayen\",\n      value: \"SJ\"\n    },\n    {\n      name: \"Swaziland\",\n      value: \"SZ\"\n    },\n    {\n      name: \"Sweden\",\n      value: \"SE\"\n    },\n    {\n      name: \"Switzerland\",\n      value: \"CH\"\n    },\n    {\n      name: \"Syria\",\n      value: \"SY\"\n    },\n    {\n      name: \"Taiwan\",\n      value: \"TW\"\n    },\n    {\n      name: \"Tajikistan\",\n      value: \"TJ\"\n    },\n    {\n      name: \"Tanzania\",\n      value: \"TZ\"\n    },\n    {\n      name: \"Thailand\",\n      value: \"TH\"\n    },\n    {\n      name: \"Timor-Leste\",\n      value: \"TL\"\n    },\n    {\n      name: \"Togo\",\n      value: \"TG\"\n    },\n    {\n      name: \"Tokelau\",\n      value: \"TK\"\n    },\n    {\n      name: \"Tonga\",\n      value: \"TO\"\n    },\n    {\n      name: \"Trinidad and Tobago\",\n      value: \"TT\"\n    },\n    {\n      name: \"Tunisia\",\n      value: \"TN\"\n    },\n    {\n      name: \"Turkey\",\n      value: \"TR\"\n    },\n    {\n      name: \"Turkmenistan\",\n      value: \"TM\"\n    },\n    {\n      name: \"Turks and Caicos Islands\",\n      value: \"TC\"\n    },\n    {\n      name: \"Tuvalu\",\n      value: \"TV\"\n    },\n    {\n      name: \"Uganda\",\n      value: \"UG\"\n    },\n    {\n      name: \"Ukraine\",\n      value: \"UA\"\n    },\n    {\n      name: \"United Arab Emirates\",\n      value: \"AE\"\n    },\n    {\n      name: \"United Kingdom\",\n      value: \"GB\"\n    },\n    {\n      name: \"UK, England\",\n      value: \"GBENG\"\n    },\n    {\n      name: \"UK, Scotland\",\n      value: \"GBSCT\"\n    },\n    {\n      name: \"UK, Northern Ireland\",\n      value: \"GBNIR\"\n    },\n    {\n      name: \"UK, Wales\",\n      value: \"GBWLS\"\n    },\n    {\n      name: \"UK, Isle of Man, Guernsey, and Jersey\",\n      value: \"GB00\"\n    },\n    {\n      name: \"UK, Dhekelia (Cyprus)\",\n      value: \"GB03\"\n    },\n    {\n      name: \"UK, Akrotiri (Cyprus)\",\n      value: \"GB05\"\n    },\n    {\n      name: \"United States of America\",\n      value: \"US\"\n    },\n    {\n      name: \"US, Alabama\",\n      value: \"USAL\"\n    },\n    {\n      name: \"US, Alaska\",\n      value: \"USAK\"\n    },\n    {\n      name: \"US, Arizona\",\n      value: \"USAZ\"\n    },\n    {\n      name: \"US, Arkansas\",\n      value: \"USAR\"\n    },\n    {\n      name: \"US, California\",\n      value: \"USCA\"\n    },\n    {\n      name: \"US, Colorado\",\n      value: \"USCO\"\n    },\n    {\n      name: \"US, Connecticut\",\n      value: \"USCT\"\n    },\n    {\n      name: \"US, Delaware\",\n      value: \"USDE\"\n    },\n    {\n      name: \"US, District of Columbia\",\n      value: \"USDC\"\n    },\n    {\n      name: \"US, Florida\",\n      value: \"USFL\"\n    },\n    {\n      name: \"US, Georgia\",\n      value: \"USGA\"\n    },\n    {\n      name: \"US, Hawaii\",\n      value: \"USHI\"\n    },\n    {\n      name: \"US, Idaho\",\n      value: \"USID\"\n    },\n    {\n      name: \"US, Illinois\",\n      value: \"USIL\"\n    },\n    {\n      name: \"US, Indiana\",\n      value: \"USIN\"\n    },\n    {\n      name: \"US, Iowa\",\n      value: \"USIA\"\n    },\n    {\n      name: \"US, Kansas\",\n      value: \"USKS\"\n    },\n    {\n      name: \"US, Kentucky\",\n      value: \"USKY\"\n    },\n    {\n      name: \"US, Louisiana\",\n      value: \"USLA\"\n    },\n    {\n      name: \"US, Maine\",\n      value: \"USME\"\n    },\n    {\n      name: \"US, Maryland\",\n      value: \"USMD\"\n    },\n    {\n      name: \"US, Massachusetts\",\n      value: \"USMA\"\n    },\n    {\n      name: \"US, Michigan\",\n      value: \"USMI\"\n    },\n    {\n      name: \"US, Minnesota\",\n      value: \"USMN\"\n    },\n    {\n      name: \"US, Mississippi\",\n      value: \"USMS\"\n    },\n    {\n      name: \"US, Missouri\",\n      value: \"USMO\"\n    },\n    {\n      name: \"US, Montana\",\n      value: \"USMT\"\n    },\n    {\n      name: \"US, Nebraska\",\n      value: \"USNE\"\n    },\n    {\n      name: \"US, Nevada\",\n      value: \"USNV\"\n    },\n    {\n      name: \"US, New Hampshire\",\n      value: \"USNH\"\n    },\n    {\n      name: \"US, New Jersey\",\n      value: \"USNJ\"\n    },\n    {\n      name: \"US, New Mexico\",\n      value: \"USNM\"\n    },\n    {\n      name: \"US, New York\",\n      value: \"USNY\"\n    },\n    {\n      name: \"US, North Carolina\",\n      value: \"USNC\"\n    },\n    {\n      name: \"US, North Dakota\",\n      value: \"USND\"\n    },\n    {\n      name: \"US, Ohio\",\n      value: \"USOH\"\n    },\n    {\n      name: \"US, Oklahoma\",\n      value: \"USOK\"\n    },\n    {\n      name: \"US, Oregon\",\n      value: \"USOR\"\n    },\n    {\n      name: \"US, Pennsylvania\",\n      value: \"USPA\"\n    },\n    {\n      name: \"US, Rhode Island\",\n      value: \"USRI\"\n    },\n    {\n      name: \"US, South Carolina\",\n      value: \"USSC\"\n    },\n    {\n      name: \"US, South Dakota\",\n      value: \"USSD\"\n    },\n    {\n      name: \"US, Tennessee\",\n      value: \"USTN\"\n    },\n    {\n      name: \"US, Texas\",\n      value: \"USTX\"\n    },\n    {\n      name: \"US, Utah\",\n      value: \"USUT\"\n    },\n    {\n      name: \"US, Vermont\",\n      value: \"USVT\"\n    },\n    {\n      name: \"US, Virginia\",\n      value: \"USVA\"\n    },\n    {\n      name: \"US, Washington\",\n      value: \"USWA\"\n    },\n    {\n      name: \"US, West Virginia\",\n      value: \"USWV\"\n    },\n    {\n      name: \"US, Wisconsin\",\n      value: \"USWI\"\n    },\n    {\n      name: \"US, Wyoming\",\n      value: \"USWY\"\n    },\n    {\n      name: \"United States Minor Outlying Islands\",\n      value: \"UM\"\n    },\n    {\n      name: \"Uruguay\",\n      value: \"UY\"\n    },\n    {\n      name: \"Uruguay, Artigas\",\n      value: \"UY01\"\n    },\n    {\n      name: \"Uruguay, Canelones\",\n      value: \"UY02\"\n    },\n    {\n      name: \"Uruguay, Cerro Largo\",\n      value: \"UY03\"\n    },\n    {\n      name: \"Uruguay, Colonia\",\n      value: \"UY04\"\n    },\n    {\n      name: \"Uruguay, Durazno\",\n      value: \"UY05\"\n    },\n    {\n      name: \"Uruguay, Flores\",\n      value: \"UY06\"\n    },\n    {\n      name: \"Uruguay, Florida\",\n      value: \"UY07\"\n    },\n    {\n      name: \"Uruguay, Lavalleja\",\n      value: \"UY08\"\n    },\n    {\n      name: \"Uruguay, Maldonado\",\n      value: \"UY09\"\n    },\n    {\n      name: \"Uruguay, Montevideo\",\n      value: \"UY10\"\n    },\n    {\n      name: \"Uruguay, Paysandú\",\n      value: \"UY11\"\n    },\n    {\n      name: \"Uruguay, Río Negro\",\n      value: \"UY12\"\n    },\n    {\n      name: \"Uruguay, Rivera\",\n      value: \"UY13\"\n    },\n    {\n      name: \"Uruguay, Rocha\",\n      value: \"UY14\"\n    },\n    {\n      name: \"Uruguay, Salto\",\n      value: \"UY15\"\n    },\n    {\n      name: \"Uruguay, San José\",\n      value: \"UY16\"\n    },\n    {\n      name: \"Uruguay, Soriano\",\n      value: \"UY17\"\n    },\n    {\n      name: \"Uruguay, Tacuarembó\",\n      value: \"UY18\"\n    },\n    {\n      name: \"Uruguay, Treinta y Tres\",\n      value: \"UY19\"\n    },\n    {\n      name: \"Uzbekistan\",\n      value: \"UZ\"\n    },\n    {\n      name: \"Vanuatu\",\n      value: \"VU\"\n    },\n    {\n      name: \"Venezuela\",\n      value: \"VE\"\n    },\n    {\n      name: \"Viet Nam\",\n      value: \"VN\"\n    },\n    {\n      name: \"Virgin Islands, British\",\n      value: \"VG\"\n    },\n    {\n      name: \"Virgin Islands, U.S.\",\n      value: \"VI\"\n    },\n    {\n      name: \"Wallis and Futuna\",\n      value: \"WF\"\n    },\n    {\n      name: \"Western Sahara\",\n      value: \"EH\"\n    },\n    {\n      name: \"Yemen\",\n      value: \"YE\"\n    },\n    {\n      name: \"Zambia\",\n      value: \"ZM\"\n    },\n    {\n      name: \"Zimbabwe\",\n      value: \"ZW\"\n    }\n  ]\n};\n","// =========================================================\n// Array of geoNames feature CODES and feature Names to populate dropdown\n// =========================================================\n\nexport default {\n  featureArray: [\n    {\n      name: \"SELECT FEATURE\",\n      value: \"\"\n    },\n    // =====================================================\n    // =====================================================\n    // H. STREAM, LAKE, ...\n    // =====================================================\n    // =====================================================\n    {\n      name: \"\",\n      value: \"blank1\"\n    },\n    {\n      name: \"STREAMS + LAKES\",\n      value: \"H\"\n    },\n    {\n      name: \"\",\n      value: \"blank2\"\n    },\n    // // H.AIRS\tseaplane landing area\ta place on a waterbody where floatplanes land and take off\n    // {\n    //     name: \"seaplane landing area\",\n    //     value: \"AIRS\",\n    // },\n    // H.ANCH\tanchorage\tan area where vessels may anchor\n    {\n      name: \"anchorage\",\n      value: \"ANCH\"\n    },\n    // H.BAY\tbay\ta coastal indentation between two capes or headlands, larger than a cove but smaller than a gulf\n    {\n      name: \"bay\",\n      value: \"BAY\"\n    },\n    // // H.BAYS\tbays\tcoastal indentations between two capes or headlands, larger than a cove but smaller than a gulf\n    // {\n    //     name: \"bays\",\n    //     value: \"BAYS\",\n    // },\n    // // H.BGHT\tbight(s)\tan open body of water forming a slight recession in a coastline\n    // {\n    //     name: \"bight\",\n    //     value: \"BGHT\",\n    // },\n    // // H.BNK\tbank(s)\tan elevation, typically located on a shelf, over which the depth of water is relatively shallow but sufficient for most surface navigation\n    // {\n    //     name: \"bank\",\n    //     value: \"BNK\",\n    // },\n    // // H.BNKR\tstream bank\ta sloping margin of a stream channel which normally confines the stream to its channel on land\n    // {\n    //     name: \"stream bank\",\n    //     value: \"BNKR\",\n    // },\n    // // H.BNKX\tsection of bank\n    // {\n    //     name: \"section of bank\",\n    //     value: \"BNKX\",\n    // },\n    // H.BOG\tbog(s)\ta wetland characterized by peat forming sphagnum moss, sedge, and other acid-water plants\n    {\n      name: \"bog\",\n      value: \"BOG\"\n    },\n    // H.CAPG\ticecap\ta dome-shaped mass of glacial ice covering an area of mountain summits or other high lands; smaller than an ice sheet\n    {\n      name: \"icecap\",\n      value: \"CAPG\"\n    },\n    // // H.CHN\tchannel\tthe deepest part of a stream, bay, lagoon, or strait, through which the main current flows\n    // {\n    //     name: \"channel\",\n    //     value: \"CHN\",\n    // },\n    // // H.CHNL\tlake channel(s)\tthat part of a lake having water deep enough for navigation between islands, shoals, etc.\n    // {\n    //     name: \"lake channel\",\n    //     value: \"CHNL\",\n    // },\n    // // H.CHNM\tmarine channel\tthat part of a body of water deep enough for navigation through an area otherwise not suitable\n    // {\n    //     name: \"marine channel\",\n    //     value: \"CHNM\",\n    // },\n    // // H.CHNN\tnavigation channel\ta buoyed channel of sufficient depth for the safe navigation of vessels\n    // {\n    //     name: \"navigation channel\",\n    //     value: \"CHNN\",\n    // },\n    // // H.CNFL\tconfluence\ta place where two or more streams or intermittent streams flow together\n    // {\n    //     name: \"confluence\",\n    //     value: \"CNFL\",\n    // },\n    // H.CNL\tcanal\tan artificial watercourse\n    {\n      name: \"canal\",\n      value: \"CNL\"\n    },\n    // H.CNLA\taqueduct\ta conduit used to carry water\n    {\n      name: \"aqueduct\",\n      value: \"CNLA\"\n    },\n    // // H.CNLB\tcanal bend\ta conspicuously curved or bent section of a canal\n    // {\n    //     name: \"canal bend\",\n    //     value: \"CNLB\",\n    // },\n    // // H.CNLD\tdrainage canal\tan artificial waterway carrying water away from a wetland or from drainage ditches\n    // {\n    //     name: \"drainage canal\",\n    //     value: \"CNLD\",\n    // },\n    // // H.CNLI\tirrigation canal\ta canal which serves as a main conduit for irrigation water\n    // {\n    //     name: \"irrigation canal\",\n    //     value: \"CNLI\",\n    // },\n    // // H.CNLN\tnavigation canal(s)\ta watercourse constructed for navigation of vessels\n    // {\n    //     name: \"navigation canals\",\n    //     value: \"CNLN\",\n    // },\n    // // H.CNLQ\tabandoned canal\n    // {\n    //     name: \"abandoned canal\",\n    //     value: \"CNLQ\",\n    // },\n    // // H.CNLSB\tunderground irrigation canal(s)\ta gently inclined underground tunnel bringing water for irrigation from aquifers\n    // {\n    //     name: \"underground irrigation canal\",\n    //     value: \"CNLSB\",\n    // },\n    // // H.CNLX\tsection of canal\n    // {\n    //     name: \"section of canal\",\n    //     value: \"CNLX\",\n    // },\n    // H.COVE\tcove(s)\ta small coastal indentation, smaller than a bay\n    {\n      name: \"coves\",\n      value: \"COVE\"\n    },\n    // // H.CRKT\ttidal creek(s)\ta meandering channel in a coastal wetland subject to bi-directional tidal currents\n    // {\n    //     name: \"tidal creeks\",\n    //     value: \"CRKT\",\n    // },\n    // // H.CRNT\tcurrent\ta horizontal flow of water in a given direction with uniform velocity\n    // {\n    //     name: \"current\",\n    //     value: \"CRNT\",\n    // },\n    // // H.CUTF\tcutoff\ta channel formed as a result of a stream cutting through a meander neck\n    // {\n    //     name: \"cutoff\",\n    //     value: \"CUTF\",\n    // },\n    // H.DCK\tdock(s)\ta waterway between two piers, or cut into the land for the berthing of ships\n    {\n      name: \"docks\",\n      value: \"DCK\"\n    },\n    // // H.DCKB\tdocking basin\ta part of a harbor where ships dock\n    // {\n    //     name: \"docking basin\",\n    //     value: \"DCKB\",\n    // },\n    // // H.DOMG\ticecap dome\ta comparatively elevated area on an icecap\n    // {\n    //     name: \"icecap dome\",\n    //     value: \"DOMG\",\n    // },\n    // // H.DPRG\ticecap depression\ta comparatively depressed area on an icecap\n    // {\n    //     name: \"icecap depression\",\n    //     value: \"DPRG\",\n    // },\n    // // H.DTCH\tditch\ta small artificial watercourse dug for draining or irrigating the land\n    // {\n    //     name: \"ditch\",\n    //     value: \"DTCH\",\n    // },\n    // // H.DTCHD\tdrainage ditch\ta ditch which serves to drain the land\n    // {\n    //     name: \"drainage ditch\",\n    //     value: \"DTCHD\",\n    // },\n    // // H.DTCHI\tirrigation ditch\ta ditch which serves to distribute irrigation water\n    // {\n    //     name: \"irrigation ditch\",\n    //     value: \"DTCHI\",\n    // },\n    // // H.DTCHM\tditch mouth(s)\tan area where a drainage ditch enters a lagoon, lake or bay\n    // {\n    //     name: \"ditch mouth\",\n    //     value: \"DTCHM\",\n    // },\n    // H.ESTY\testuary\ta funnel-shaped stream mouth or embayment where fresh water mixes with sea water under tidal influences\n    {\n      name: \"estuary\",\n      value: \"ESTY\"\n    },\n    // H.FISH\tfishing area\ta fishing ground, bank or area where fishermen go to catch fish\n    {\n      name: \"fishing area\",\n      value: \"FISH\"\n    },\n    // H.FJD\tfjord\ta long, narrow, steep-walled, deep-water arm of the sea at high latitudes, usually along mountainous coasts\n    {\n      name: \"fjord\",\n      value: \"FJD\"\n    },\n    // H.FJDS\tfjords\tlong, narrow, steep-walled, deep-water arms of the sea at high latitudes, usually along mountainous coasts\n    {\n      name: \"fjords\",\n      value: \"FJDS\"\n    },\n    // H.FLLS\twaterfall(s)\ta perpendicular or very steep descent of the water of a stream\n    {\n      name: \"waterfalls\",\n      value: \"FLLS\"\n    },\n    // // H.FLLSX\tsection of waterfall(s)\n    // {\n    //     name: \"section of waterfall\",\n    //     value: \"FLLSX\",\n    // },\n    // H.FLTM\tmud flat(s)\ta relatively level area of mud either between high and low tide lines, or subject to flooding\n    {\n      name: \"mud flats\",\n      value: \"FLTM\"\n    },\n    // H.FLTT\ttidal flat(s)\ta large flat area of mud or sand attached to the shore and alternately covered and uncovered by the tide\n    {\n      name: \"tidal flats\",\n      value: \"FLTT\"\n    },\n    // H.GLCR\tglacier(s)\ta mass of ice, usually at high latitudes or high elevations, with sufficient thickness to flow away from the source area in lobes, tongues, or masses\n    {\n      name: \"glaciers\",\n      value: \"GLCR\"\n    },\n    // H.GULF\tgulf\ta large recess in the coastline, larger than a bay\n    {\n      name: \"gulf\",\n      value: \"GULF\"\n    },\n    // H.GYSR\tgeyser\ta type of hot spring with intermittent eruptions of jets of hot water and steam\n    {\n      name: \"geyser\",\n      value: \"GYSR\"\n    },\n    // H.HBR\tharbor(s)\ta haven or space of deep water so sheltered by the adjacent land as to afford a safe anchorage for ships\n    {\n      name: \"harbor\",\n      value: \"HBR\"\n    },\n    // // H.HBRX\tsection of harbor\n    // {\n    //     name: \"section of harbor\",\n    //     value: \"HBRX\",\n    // },\n    // H.INLT\tinlet\ta narrow waterway extending into the land, or connecting a bay or lagoon with a larger body of water\n    {\n      name: \"inlet\",\n      value: \"INLT\"\n    },\n    // // H.INLTQ\tformer inlet\tan inlet which has been filled in, or blocked by deposits\n    // {\n    //     name: \"former inlet\",\n    //     value: \"INLTQ\",\n    // },\n    // H.LBED\tlake bed(s)\ta dried up or drained area of a former lake\n    {\n      name: \"lake bed\",\n      value: \"LBED\"\n    },\n    // H.LGN\tlagoon\ta shallow coastal waterbody, completely or partly separated from a larger body of water by a barrier island, coral reef or other depositional feature\n    {\n      name: \"lagoon\",\n      value: \"LGN\"\n    },\n    // H.LGNS\tlagoons\tshallow coastal waterbodies, completely or partly separated from a larger body of water by a barrier island, coral reef or other depositional feature\n    {\n      name: \"lagoons\",\n      value: \"LGNS\"\n    },\n    // // H.LGNX\tsection of lagoon\n    // {\n    //     name: \"section of lagoon\",\n    //     value: \"LGNX\",\n    // },\n    // H.LK\tlake\ta large inland body of standing water\n    {\n      name: \"lake\",\n      value: \"LK\"\n    },\n    // H.LKC\tcrater lake\ta lake in a crater or caldera\n    {\n      name: \"crater lake\",\n      value: \"LKC\"\n    },\n    // // H.LKI\tintermittent lake\n    // {\n    //     name: \"intermittent lake\",\n    //     value: \"LKI\",\n    // },\n    // H.LKN\tsalt lake\tan inland body of salt water with no outlet\n    {\n      name: \"salt lake\",\n      value: \"LKN\"\n    },\n    // // H.LKNI\tintermittent salt lake\n    // {\n    //     name: \"intermittent salt lake\",\n    //     value: \"LKNI\",\n    // },\n    // // H.LKO\toxbow lake\ta crescent-shaped lake commonly found adjacent to meandering streams\n    // {\n    //     name: \"oxbow lake\",\n    //     value: \"LKO\",\n    // },\n    // // H.LKOI\tintermittent oxbow lake\n    // {\n    //     name: \"intermittent oxbow lake\",\n    //     value: \"LKOI\",\n    // },\n    // H.LKS\tlakes\tlarge inland bodies of standing water\n    {\n      name: \"lakes\",\n      value: \"LKS\"\n    },\n    // H.LKSB\tunderground lake\ta standing body of water in a cave\n    {\n      name: \"underground lake\",\n      value: \"LKSB\"\n    },\n    // H.LKSC\tcrater lakes\tlakes in a crater or caldera\n    {\n      name: \"crater lakes\",\n      value: \"LKSC\"\n    },\n    // // H.LKSI\tintermittent lakes\n    // {\n    //     name: \"intermittent lakes\",\n    //     value: \"LKSI\",\n    // },\n    // H.LKSN\tsalt lakes\tinland bodies of salt water with no outlet\n    {\n      name: \"salt lakes\",\n      value: \"LKSN\"\n    },\n    // // H.LKSNI\tintermittent salt lakes\n    // {\n    //     name: \"intermittent salt lakes\",\n    //     value: \"LKSNI\",\n    // },\n    // // H.LKX\tsection of lake\n    // {\n    //     name: \"lakes\",\n    //     value: \"LKS\",\n    // },\n    // H.MFGN\tsalt evaporation ponds\tdiked salt ponds used in the production of solar evaporated salt\n    {\n      name: \"salt evaporation ponds\",\n      value: \"MFGN\"\n    },\n    // H.MGV\tmangrove swamp\ta tropical tidal mud flat characterized by mangrove vegetation\n    {\n      name: \"mangrove swamp\",\n      value: \"MGV\"\n    },\n    // H.MOOR\tmoor(s)\tan area of open ground overlaid with wet peaty soils\n    {\n      name: \"moor\",\n      value: \"MOOR\"\n    },\n    // H.MRSH\tmarsh(es)\ta wetland dominated by grass-like vegetation\n    {\n      name: \"marsh\",\n      value: \"MRSH\"\n    },\n    // H.MRSHN\tsalt marsh\ta flat area, subject to periodic salt water inundation, dominated by grassy salt-tolerant plants\n    {\n      name: \"salt marsh\",\n      value: \"MRSHN\"\n    },\n    // // H.NRWS\tnarrows\ta navigable narrow part of a bay, strait, river, etc.\n    // {\n    //     name: \"narrows\",\n    //     value: \"NRWS\",\n    // },\n    // // H.OCN\tocean\tone of the major divisions of the vast expanse of salt water covering part of the earth\n    // {\n    //     name: \"ocean\",\n    //     value: \"OCN\",\n    // },\n    // // H.OVF\toverfalls\tan area of breaking waves caused by the meeting of currents or by waves moving against the current\n    // {\n    //     name: \"overfalls\",\n    //     value: \"OVF\",\n    // },\n    // // H.PND\tpond\ta small standing waterbody\n    // {\n    //     name: \"pond\",\n    //     value: \"PND\",\n    // },\n    // // H.PNDI\tintermittent pond\n    // {\n    //     name: \"intermittent pond\",\n    //     value: \"PNDI\",\n    // },\n    // // H.PNDN\tsalt pond\ta small standing body of salt water often in a marsh or swamp, usually along a seacoast\n    // {\n    //     name: \"salt pond\",\n    //     value: \"PNDN\",\n    // },\n    // // H.PNDNI\tintermittent salt pond(s)\n    // {\n    //     name: \"intermittent salt ponds\",\n    //     value: \"PNDNI\",\n    // },\n    // // H.PNDS\tponds\tsmall standing waterbodies\n    // {\n    //     name: \"ponds\",\n    //     value: \"PNDS\",\n    // },\n    // // H.PNDSF\tfishponds\tponds or enclosures in which fish are kept or raised\n    // {\n    //     name: \"fishponds\",\n    //     value: \"PNDSF\",\n    // },\n    // // H.PNDSI\tintermittent ponds\n    // {\n    //     name: \"intermittent ponds\",\n    //     value: \"PNDSI\",\n    // },\n    // // H.PNDSN\tsalt ponds\tsmall standing bodies of salt water often in a marsh or swamp, usually along a seacoast\n    // {\n    //     name: \"salt ponds\",\n    //     value: \"PNDSN\",\n    // },\n    // // H.POOL\tpool(s)\ta small and comparatively still, deep part of a larger body of water such as a stream or harbor; or a small body of standing water\n    // {\n    //     name: \"pool\",\n    //     value: \"POOL\",\n    // },\n    // // H.POOLI\tintermittent pool\n    // {\n    //     name: \"intermittent pool\",\n    //     value: \"POOLI\",\n    // },\n    // // H.RCH\treach\ta straight section of a navigable stream or channel between two bends\n    // {\n    //     name: \"reach\",\n    //     value: \"RCH\",\n    // },\n    // // H.RDGG\ticecap ridge\ta linear elevation on an icecap\n    // {\n    //     name: \"icecap ridge\",\n    //     value: \"RDGG\",\n    // },\n    // // H.RDST\troadstead\tan open anchorage affording less protection than a harbor\n    // {\n    //     name: \"roadstead\",\n    //     value: \"RDST\",\n    // },\n    // H.RF\treef(s)\ta surface-navigation hazard composed of consolidated material\n    {\n      name: \"reef\",\n      value: \"RF\"\n    },\n    // H.RFC\tcoral reef(s)\ta surface-navigation hazard composed of coral\n    {\n      name: \"coral reef\",\n      value: \"RFC\"\n    },\n    // // H.RFX\tsection of reef\n    // {\n    //     name: \"section of reef\",\n    //     value: \"RFX\",\n    // },\n    // H.RPDS\trapids\ta turbulent section of a stream associated with a steep, irregular stream bed\n    {\n      name: \"rapids\",\n      value: \"RPDS\"\n    },\n    // H.RSV\treservoir(s)\tan artificial pond or lake\n    {\n      name: \"reservoir\",\n      value: \"RSV\"\n    },\n    // // H.RSVI\tintermittent reservoir\n    // {\n    //     name: \"intermittent reservoir\",\n    //     value: \"RSVI\",\n    // },\n    // // H.RSVT\twater tank\ta contained pool or tank of water at, below, or above ground level\n    // {\n    //     name: \"water tank\",\n    //     value: \"RSVT\",\n    // },\n    // H.RVN\travine(s)\ta small, narrow, deep, steep-sided stream channel, smaller than a gorge\n    {\n      name: \"ravine\",\n      value: \"RVN\"\n    },\n    // // H.SBKH\tsabkha(s)\ta salt flat or salt encrusted plain subject to periodic inundation from flooding or high tides\n    // {\n    //     name: \"sabkha\",\n    //     value: \"SBKH\",\n    // },\n    // H.SD\tsound\ta long arm of the sea forming a channel between the mainland and an island or islands; or connecting two larger bodies of water\n    {\n      name: \"sound\",\n      value: \"SD\"\n    },\n    // H.SEA\tsea\ta large body of salt water more or less confined by continuous land or chains of islands forming a subdivision of an ocean\n    {\n      name: \"sea\",\n      value: \"SEA\"\n    },\n    // H.SHOL\tshoal(s)\ta surface-navigation hazard composed of unconsolidated material\n    {\n      name: \"shoal\",\n      value: \"SHOL\"\n    },\n    // // H.SILL\tsill\tthe low part of an underwater gap or saddle separating basins, including a similar feature at the mouth of a fjord\n    // {\n    //     name: \"sill\",\n    //     value: \"SILL\",\n    // },\n    // H.SPNG\tspring(s)\ta place where ground water flows naturally out of the ground\n    {\n      name: \"spring\",\n      value: \"SPNG\"\n    },\n    // H.SPNS\tsulphur spring(s)\ta place where sulphur ground water flows naturally out of the ground\n    {\n      name: \"sulphur spring\",\n      value: \"SPNS\"\n    },\n    // H.SPNT\thot spring(s)\ta place where hot ground water flows naturally out of the ground\n    {\n      name: \"hot springs\",\n      value: \"SPNT\"\n    },\n    // // H.STM\tstream\ta body of running water moving to a lower level in a channel on land\n    // {\n    //     name: \"stream\",\n    //     value: \"STM\",\n    // },\n    // // H.STMA\tanabranch\ta diverging branch flowing out of a main stream and rejoining it downstream\n    // {\n    //     name: \"anabranch\",\n    //     value: \"STMA\",\n    // },\n    // // H.STMB\tstream bend\ta conspicuously curved or bent segment of a stream\n    // {\n    //     name: \"stream bend\",\n    //     value: \"STMB\",\n    // },\n    // // H.STMC\tcanalized stream\ta stream that has been substantially ditched, diked, or straightened\n    // {\n    //     name: \"canalized stream\",\n    //     value: \"STMC\",\n    // },\n    // // H.STMD\tdistributary(-ies)\ta branch which flows away from the main stream, as in a delta or irrigation canal\n    // {\n    //     name: \"distributary\",\n    //     value: \"STMD\",\n    // },\n    // H.STMH\theadwaters\tthe source and upper part of a stream, including the upper drainage basin\n    {\n      name: \"headwaters\",\n      value: \"STMH\"\n    },\n    // // H.STMI\tintermittent stream\n    // {\n    //     name: \"intermittent stream\",\n    //     value: \"STMI\",\n    // },\n    // // H.STMIX\tsection of intermittent stream\n    // {\n    //     name: \"section of intermittent stream\",\n    //     value: \"STMIX\",\n    // },\n    // // H.STMM\tstream mouth(s)\ta place where a stream discharges into a lagoon, lake, or the sea\n    // {\n    //     name: \"stream mouth\",\n    //     value: \"STMM\",\n    // },\n    // // H.STMQ\tabandoned watercourse\ta former stream or distributary no longer carrying flowing water, but still evident due to lakes, wetland, topographic or vegetation patterns\n    // {\n    //     name: \"abondoned watercourse\",\n    //     value: \"STMQ\",\n    // },\n    // // H.STMS\tstreams\tbodies of running water moving to a lower level in a channel on land\n    // {\n    //     name: \"streams\",\n    //     value: \"STMS\",\n    // },\n    // H.STMSB\tlost river\ta surface stream that disappears into an underground channel, or dries up in an arid area\n    {\n      name: \"lost river\",\n      value: \"STMSB\"\n    },\n    // // H.STMX\tsection of stream\n    // {\n    //     name: \"section of stream\",\n    //     value: \"STMX\",\n    // },\n    // // H.STRT\tstrait\ta relatively narrow waterway, usually narrower and less extensive than a sound, connecting two larger bodies of water\n    // {\n    //     name: \"strait\",\n    //     value: \"STRT\",\n    // },\n    // H.SWMP\tswamp\ta wetland dominated by tree vegetation\n    {\n      name: \"swamp\",\n      value: \"SWMP\"\n    },\n    // // H.SYSI\tirrigation system\ta network of ditches and one or more of the following elements: water supply, reservoir, canal, pump, well, drain, etc.\n    // {\n    //     name: \"irrigation system\",\n    //     value: \"SYSI\",\n    // },\n    // // H.TNLC\tcanal tunnel\ta tunnel through which a canal passes\n    // {\n    //     name: \"canal tunnel\",\n    //     value: \"TNLC\",\n    // },\n    // H.WAD\twadi\ta valley or ravine, bounded by relatively steep banks, which in the rainy season becomes a watercourse; found primarily in North Africa and the Middle East\n    {\n      name: \"wadi\",\n      value: \"WAD\"\n    },\n    // // H.WADB\twadi bend\ta conspicuously curved or bent segment of a wadi\n    // {\n    //     name: \"wadi bend\",\n    //     value: \"WADB\",\n    // },\n    // // H.WADJ\twadi junction\ta place where two or more wadies join\n    // {\n    //     name: \"wadi junction\",\n    //     value: \"WADJ\",\n    // },\n    // // H.WADM\twadi mouth\tthe lower terminus of a wadi where it widens into an adjoining floodplain, depression, or waterbody\n    // {\n    //     name: \"wadi mouth\",\n    //     value: \"WADM\",\n    // },\n    // // H.WADS\twadies\tvalleys or ravines, bounded by relatively steep banks, which in the rainy season become watercourses; found primarily in North Africa and the Middle East\n    // {\n    //     name: \"wadies\",\n    //     value: \"WADS\",\n    // },\n    // // H.WADX\tsection of wadi\n    // {\n    //     name: \"section of wadi\",\n    //     value: \"WADX\",\n    // },\n    // H.WHRL\twhirlpool\ta turbulent, rotating movement of water in a stream\n    {\n      name: \"whirlpool\",\n      value: \"WHRL\"\n    },\n    // // H.WLL\twell\ta cylindrical hole, pit, or tunnel drilled or dug down to a depth from which water, oil, or gas can be pumped or brought to the surface\n    // {\n    //     name: \"well\",\n    //     value: \"WLL\",\n    // },\n    // // H.WLLQ\tabandoned well\n    // {\n    //     name: \"abandoned well\",\n    //     value: \"WLLQ\",\n    // },\n    // // H.WLLS\twells\tcylindrical holes, pits, or tunnels drilled or dug down to a depth from which water, oil, or gas can be pumped or brought to the surface\n    // {\n    //     name: \"wells\",\n    //     value: \"WLLS\",\n    // },\n    // H.WTLD\twetland\tan area subject to inundation, usually characterized by bog, marsh, or swamp vegetation\n    {\n      name: \"wetland\",\n      value: \"WTLD\"\n    },\n    // // H.WTLDI\tintermittent wetland\n    // {\n    //     name: \"intermittent wetland\",\n    //     value: \"WTLDI\",\n    // },\n    // // H.WTRC\twatercourse\ta natural, well-defined channel produced by flowing water, or an artificial channel designed to carry flowing water\n    // {\n    //     name: \"watercourse\",\n    //     value: \"WTRC\",\n    // },\n    // H.WTRH\twaterhole(s)\ta natural hole, hollow, or small depression that contains water, used by man and animals, especially in arid areas\n    {\n      name: \"waterhole\",\n      value: \"WTRH\"\n    },\n    // =====================================================\n    // =====================================================\n    // L. PARKS, AREA, ...\n    // =====================================================\n    // =====================================================\n    {\n      name: \"\",\n      value: \"blank3\"\n    },\n    {\n      name: \"PARKS + AREAS\",\n      value: \"ParksAndAreas\"\n    },\n    {\n      name: \"\",\n      value: \"blank4\"\n    },\n    // // L.AGRC\tagricultural colony\ta tract of land set aside for agricultural settlement\n    // {\n    //     name: \"agricultural colony\",\n    //     value: \"AGRC\",\n    // },\n    // L.AMUS\tamusement park\tAmusement Park are theme parks, adventure parks offering entertainment, similar to funfairs but with a fix location\n    {\n      name: \"amusement park\",\n      value: \"AMUS\"\n    },\n    // // L.AREA\tarea\ta tract of land without homogeneous character or boundaries\n    // {\n    //     name: \"area\",\n    //     value: \"AREA\",\n    // },\n    // // L.BSND\tdrainage basin\tan area drained by a stream\n    // {\n    //     name: \"drainage basin\",\n    //     value: \"BSND\",\n    // },\n    // // L.BSNP\tpetroleum basin\tan area underlain by an oil-rich structural basin\n    // {\n    //     name: \"petroleum basin\",\n    //     value: \"BSNP\",\n    // },\n    // L.BTL\tbattlefield\ta site of a land battle of historical importance\n    {\n      name: \"battlefield\",\n      value: \"BTL\"\n    },\n    // L.CLG\tclearing\tan area in a forest with trees removed\n    {\n      name: \"clearing\",\n      value: \"CLG\"\n    },\n    // L.CMN\tcommon\ta park or pasture for community use\n    {\n      name: \"commons\",\n      value: \"CMN\"\n    },\n    // // L.CNS\tconcession area\ta lease of land by a government for economic development, e.g., mining, forestry\n    // {\n    //     name: \"concession area\",\n    //     value: \"CNS\",\n    // },\n    // // L.COLF\tcoalfield\ta region in which coal deposits of possible economic value occur\n    // {\n    //     name: \"coalfield\",\n    //     value: \"COLF\",\n    // },\n    // // L.CONT\tcontinent\tcontinent: Europe, Africa, Asia, North America, South America, Oceania, Antarctica\n    // {\n    //     name: \"continent\",\n    //     value: \"CONT\",\n    // },\n    // L.CST\tcoast\ta zone of variable width straddling the shoreline\n    {\n      name: \"coast\",\n      value: \"CST\"\n    },\n    // // L.CTRB\tbusiness center\ta place where a number of businesses are located\n    // {\n    //     name: \"business center\",\n    //     value: \"CTRB\",\n    // },\n    // // L.DEVH\thousing development\ta tract of land on which many houses of similar design are built according to a development plan\n    // {\n    //     name: \"housing development\",\n    //     value: \"DEVH\",\n    // },\n    // L.FLD\tfield(s)\tan open as opposed to wooded area\n    {\n      name: \"fields\",\n      value: \"FLD\"\n    },\n    // // L.FLDI\tirrigated field(s)\ta tract of level or terraced land which is irrigated\n    // {\n    //     name: \"irrigated fields\",\n    //     value: \"FLDI\",\n    // },\n    // // L.GASF\tgasfield\tan area containing a subterranean store of natural gas of economic value\n    // {\n    //     name: \"gasfield\",\n    //     value: \"GASF\",\n    // },\n    // // L.GRAZ\tgrazing area\tan area of grasses and shrubs used for grazing\n    // {\n    //     name: \"grazing area\",\n    //     value: \"GRAZ\",\n    // },\n    // L.GVL\tgravel area\tan area covered with gravel\n    {\n      name: \"gravel area\",\n      value: \"GVL\"\n    },\n    // // L.INDS\tindustrial area\tan area characterized by industrial activity\n    // {\n    //     name: \"industrial area\",\n    //     value: \"INDS\",\n    // },\n    // // L.LAND\tarctic land\ta tract of land in the Arctic\n    // {\n    //     name: \"arctic land\",\n    //     value: \"LAND\",\n    // },\n    // // L.LCTY\tlocality\ta minor area or place of unspecified or mixed character and indefinite boundaries\n    // {\n    //     name: \"locality\",\n    //     value: \"LCTY\",\n    // },\n    // // L.MILB\tmilitary base\ta place used by an army or other armed service for storing arms and supplies, and for accommodating and training troops, a base from which operations can be initiated\n    // {\n    //     name: \"military base\",\n    //     value: \"MILB\",\n    // },\n    // // L.MNA\tmining area\tan area of mine sites where minerals and ores are extracted\n    // {\n    //     name: \"mining area\",\n    //     value: \"MNA\",\n    // },\n    // // L.MVA\tmaneuver area\ta tract of land where military field exercises are carried out\n    // {\n    //     name: \"maneuver area\",\n    //     value: \"MVA\",\n    // },\n    // // L.NVB\tnaval base\tan area used to store supplies, provide barracks for troops and naval personnel, a port for naval vessels, and from which operations are initiated\n    // {\n    //     name: \"naval base\",\n    //     value: \"NVB\",\n    // },\n    // L.OAS\toasis(-es)\tan area in a desert made productive by the availability of water\n    {\n      name: \"oasis\",\n      value: \"OAS\"\n    },\n    // // L.OILF\toilfield\tan area containing a subterranean store of petroleum of economic value\n    // {\n    //     name: \"oilfield\",\n    //     value: \"OILF\",\n    // },\n    // L.PEAT\tpeat cutting area\tan area where peat is harvested\n    {\n      name: \"peat cutting area\",\n      value: \"PEAT\"\n    },\n    // L.PRK\tpark\tan area, often of forested land, maintained as a place of beauty, or for recreation\n    {\n      name: \"park\",\n      value: \"PRK\"\n    },\n    // L.PRT\tport\ta place provided with terminal and transfer facilities for loading and discharging waterborne cargo or passengers, usually located in a harbor\n    {\n      name: \"port\",\n      value: \"PRT\"\n    },\n    // // L.QCKS\tquicksand\tan area where loose sand with water moving through it may become unstable when heavy objects are placed at the surface, causing them to sink\n    // {\n    //     name: \"quicksand\",\n    //     value: \"QCKS\",\n    // },\n    // L.RES\treserve\ta tract of public land reserved for future use or restricted as to use\n    {\n      name: \"reserve\",\n      value: \"RES\"\n    },\n    // // L.RESA\tagricultural reserve\ta tract of land reserved for agricultural reclamation and/or development\n    // {\n    //     name: \"agricultural reserve\",\n    //     value: \"RESA\",\n    // },\n    // L.RESF\tforest reserve\ta forested area set aside for preservation or controlled use\n    {\n      name: \"forest reserve\",\n      value: \"RESF\"\n    },\n    // L.RESH\thunting reserve\ta tract of land used primarily for hunting\n    {\n      name: \"hunting reserve\",\n      value: \"RESH\"\n    },\n    // L.RESN\tnature reserve\tan area reserved for the maintenance of a natural habitat\n    {\n      name: \"nature reserve\",\n      value: \"RESN\"\n    },\n    // // L.RESP\tpalm tree reserve\tan area of palm trees where use is controlled\n    // {\n    //     name: \"palm tree reserve\",\n    //     value: \"RESP\",\n    // },\n    // L.RESV\treservation\ta tract of land set aside for aboriginal, tribal, or native populations\n    {\n      name: \"reservation\",\n      value: \"RESV\"\n    },\n    // L.RESW\twildlife reserve\ta tract of public land reserved for the preservation of wildlife\n    {\n      name: \"wildlife reserve\",\n      value: \"RESW\"\n    },\n    // // L.RGN\tregion\tan area distinguished by one or more observable physical or cultural characteristics\n    // {\n    //     name: \"region\",\n    //     value: \"RGN\",\n    // },\n    // // L.RGNE\teconomic region\ta region of a country established for economic development or for statistical purposes\n    // {\n    //     name: \"economic region\",\n    //     value: \"RGNE\",\n    // },\n    // L.RGNH\thistorical region\ta former historic area distinguished by one or more observable physical or cultural characteristics\n    {\n      name: \"historical region\",\n      value: \"RGNH\"\n    },\n    // L.RGNL\tlake region\ta tract of land distinguished by numerous lakes\n    {\n      name: \"lake region\",\n      value: \"RGNL\"\n    },\n    // // L.RNGA\tartillery range\ta tract of land used for artillery firing practice\n    // {\n    //     name: \"artillery range\",\n    //     value: \"RNGA\",\n    // },\n    // L.SALT\tsalt area\ta shallow basin or flat where salt accumulates after periodic inundation\n    {\n      name: \"salt area\",\n      value: \"SALT\"\n    },\n    // L.SNOW\tsnowfield\tan area of permanent snow and ice forming the accumulation area of a glacier\n    {\n      name: \"snowfield\",\n      value: \"SNOW\"\n    },\n    // L.TRB\ttribal area\ta tract of land used by nomadic or other tribes\n    {\n      name: \"tribal area\",\n      value: \"TRB\"\n    },\n    // =====================================================\n    // =====================================================\n    // P. CITY, VILLAGE, ...\n    // =====================================================\n    // =====================================================\n    {\n      name: \"\",\n      value: \"blank5\"\n    },\n    {\n      name: \"CITIES + VILLAGES\",\n      value: \"CitiesAndVillages\"\n    },\n    {\n      name: \"\",\n      value: \"blank6\"\n    },\n    // // P.PPL\tpopulated place\ta city, town, village, or other agglomeration of buildings where people live and work\n    // {\n    //     name: \"populated place\",\n    //     value: \"PPL\",\n    // },\n    // // P.PPLA\tseat of a first-order administrative division\tseat of a first-order administrative division (PPLC takes precedence over PPLA)\n    // {\n    //     name: \"1st-order district seat\",\n    //     value: \"PPLA\",\n    // },\n    // // P.PPLA2\tseat of a second-order administrative division\n    // {\n    //     name: \"2nd-order district seat\",\n    //     value: \"PPLA2\",\n    // },\n    // // P.PPLA3\tseat of a third-order administrative division\n    // {\n    //     name: \"3rd-order district seat\",\n    //     value: \"PPLA3\",\n    // },\n    // // P.PPLA4\tseat of a fourth-order administrative division\n    // {\n    //     name: \"4th-order district seat\",\n    //     value: \"PPLA4\",\n    // },\n    // // P.PPLA5\tseat of a fifth-order administrative division\n    // {\n    //     name: \"5th-order district seat\",\n    //     value: \"PPLA5\",\n    // },\n    // P.PPLC\tcapital of a political entity\n    {\n      name: \"capital\",\n      value: \"PPLC\"\n    },\n    // P.PPLCH\thistorical capital of a political entity\ta former capital of a political entity\n    {\n      name: \"historical capital\",\n      value: \"PPLCH\"\n    },\n    // P.PPLF\tfarm village\ta populated place where the population is largely engaged in agricultural activities\n    {\n      name: \"farm village\",\n      value: \"PPLF\"\n    },\n    // P.PPLG\tseat of government of a political entity\n    {\n      name: \"government seat\",\n      value: \"PPLG\"\n    },\n    // P.PPLH\thistorical populated place\ta populated place that no longer exists\n    {\n      name: \"historical area\",\n      value: \"PPLH\"\n    },\n    // // P.PPLL\tpopulated locality\tan area similar to a locality but with a small group of dwellings or other buildings\n    // {\n    //     name: \"populated area\",\n    //     value: \"PPLL\",\n    // },\n    // P.PPLQ\tabandoned populated place\n    {\n      name: \"abandoned area\",\n      value: \"PPLQ\"\n    },\n    // P.PPLR\treligious populated place\ta populated place whose population is largely engaged in religious occupations\n    {\n      name: \"religious area\",\n      value: \"PPLR\"\n    },\n    // // P.PPLS\tpopulated places\tcities, towns, villages, or other agglomerations of buildings where people live and work\n    // {\n    //     name: \"populated place\",\n    //     value: \"PPLS\",\n    // },\n    // P.PPLW\tdestroyed populated place\ta village, town or city destroyed by a natural disaster, or by war\n    {\n      name: \"destroyed place\",\n      value: \"PPLW\"\n    },\n    // // P.PPLX\tsection of populated place\n    // {\n    //     name: \"section of populated place\",\n    //     value: \"PPLX\",\n    // },\n    // // P.STLMT\tisraeli settlement\n    // {\n    //     name: \"israeli settlement\",\n    //     value: \"STLMT\",\n    // },\n    // =====================================================\n    // =====================================================\n    // R. ROAD, RAILROAD\n    // =====================================================\n    // =====================================================\n    {\n      name: \"\",\n      value: \"blank7\"\n    },\n    {\n      name: \"ROADS + RAILROADS\",\n      value: \"RoadsAndRailroads\"\n    },\n    {\n      name: \"\",\n      value: \"blank8\"\n    },\n    // // R.CSWY\tcauseway\ta raised roadway across wet ground or shallow water\n    // {\n    //     name: \"causeway\",\n    //     value: \"CSWY\",\n    // },\n    // // R.OILP\toil pipeline\ta pipeline used for transporting oil\n    // {\n    //     name: \"oil pipeline\",\n    //     value: \"OILP\",\n    // },\n    // R.PRMN\tpromenade\ta place for public walking, usually along a beach front\n    {\n      name: \"promenade\",\n      value: \"PRMN\"\n    },\n    // R.PTGE\tportage\ta place where boats, goods, etc., are carried overland between navigable waters\n    {\n      name: \"portage\",\n      value: \"PTGE\"\n    },\n    // // R.RD\troad\tan open way with improved surface for transportation of animals, people and vehicles\n    // {\n    //     name: \"road\",\n    //     value: \"RD\",\n    // },\n    // R.RDA\tancient road\tthe remains of a road used by ancient cultures\n    {\n      name: \"ancient road\",\n      value: \"RDA\"\n    },\n    // // R.RDB\troad bend\ta conspicuously curved or bent section of a road\n    // {\n    //     name: \"road bend\",\n    //     value: \"RDB\",\n    // },\n    // // R.RDCUT\troad cut\tan excavation cut through a hill or ridge for a road\n    // {\n    //     name: \"road cut\",\n    //     value: \"RDCUT\",\n    // },\n    // // R.RDJCT\troad junction\ta place where two or more roads join\n    // {\n    //     name: \"road junction\",\n    //     value: \"RDJCT\",\n    // },\n    // // R.RJCT\trailroad junction\ta place where two or more railroad tracks join\n    // {\n    //     name: \"railroad junction\",\n    //     value: \"RJCT\",\n    // },\n    // // R.RR\trailroad\ta permanent twin steel-rail track on which freight and passenger cars move long distances\n    // {\n    //     name: \"railroad\",\n    //     value: \"RR\",\n    // },\n    // // R.RRQ\tabandoned railroad\n    // {\n    //     name: \"abandoned railroad\",\n    //     value: \"RRQ\",\n    // },\n    // R.RTE\tcaravan route\tthe route taken by caravans\n    {\n      name: \"caravan route\",\n      value: \"RTE\"\n    },\n    // // R.RYD\trailroad yard\ta system of tracks used for the making up of trains, and switching and storing freight cars\n    // {\n    //     name: \"railroad yard\",\n    //     value: \"RYD\",\n    // },\n    // // R.ST\tstreet\ta paved urban thoroughfare\n    // {\n    //     name: \"street\",\n    //     value: \"ST\",\n    // },\n    // // R.STKR\tstock route\ta route taken by livestock herds\n    // {\n    //     name: \"stock route\",\n    //     value: \"STKR\",\n    // },\n    // // R.TNL\ttunnel\ta subterranean passageway for transportation\n    // {\n    //     name: \"tunnel\",\n    //     value: \"TNL\",\n    // },\n    // R.TNLN\tnatural tunnel\ta cave that is open at both ends\n    {\n      name: \"natural tunnel\",\n      value: \"TNLN\"\n    },\n    // // R.TNLRD\troad tunnel\ta tunnel through which a road passes\n    // {\n    //     name: \"road tunnel\",\n    //     value: \"TNLRD\",\n    // },\n    // // R.TNLRR\trailroad tunnel\ta tunnel through which a railroad passes\n    // {\n    //     name: \"railroad tunnel\",\n    //     value: \"TNLRR\",\n    // },\n    // // R.TNLS\ttunnels\tsubterranean passageways for transportation\n    // {\n    //     name: \"tunnels\",\n    //     value: \"TNLS\",\n    // },\n    // R.TRL\ttrail\ta path, track, or route used by pedestrians, animals, or off-road vehicles\n    {\n      name: \"trail\",\n      value: \"TRL\"\n    },\n    // =====================================================\n    // =====================================================\n    // S. SPOT, BUILDING, FARM, ...\n    // =====================================================\n    // =====================================================\n    {\n      name: \"\",\n      value: \"blank9\"\n    },\n    {\n      name: \"SPOTS, BUILDINGS + FARMS\",\n      value: \"SpotsBuildingsAndFarms\"\n    },\n    {\n      name: \"\",\n      value: \"blank10\"\n    },\n    // // S.ADMF\tadministrative facility\ta government building\n    // {\n    //     name: \"administrative facility\",\n    //     value: \"ADMF\",\n    // },\n    // // S.AGRF\tagricultural facility\ta building and/or tract of land used for improving agriculture\n    // {\n    //     name: \"agricultural facility\",\n    //     value: \"AGRF\",\n    // },\n    // // S.AIRB\tairbase\tan area used to store supplies, provide barracks for air force personnel, hangars and runways for aircraft, and from which operations are initiated\n    // {\n    //     name: \"airbase\",\n    //     value: \"AIRB\",\n    // },\n    // // S.AIRF\tairfield\ta place on land where aircraft land and take off; no facilities provided for the commercial handling of passengers and cargo\n    // {\n    //     name: \"airfield\",\n    //     value: \"AIRF\",\n    // },\n    // S.AIRH\theliport\ta place where helicopters land and take off\n    {\n      name: \"heliport\",\n      value: \"AIRH\"\n    },\n    // S.AIRP\tairport\ta place where aircraft regularly land and take off, with runways, navigational aids, and major facilities for the commercial handling of passengers and cargo\n    {\n      name: \"airport\",\n      value: \"AIRP\"\n    },\n    // S.AIRQ\tabandoned airfield\n    {\n      name: \"abandoned airfield\",\n      value: \"AIRQ\"\n    },\n    // S.AIRT\tterminal\tairport facilities for the handling of freight and passengers\n    {\n      name: \"air terminal\",\n      value: \"AIRT\"\n    },\n    // S.AMTH\tamphitheater\tan oval or circular structure with rising tiers of seats about a stage or open space\n    {\n      name: \"amphitheater\",\n      value: \"AMTH\"\n    },\n    // S.ANS\tarchaeological/prehistoric site\ta place where archeological remains, old structures, or cultural artifacts are located\n    {\n      name: \"archaeological site\",\n      value: \"ANS\"\n    },\n    // S.AQC\taquaculture facility\tfacility or area for the cultivation of aquatic animals and plants, especially fish, shellfish, and seaweed, in natural or controlled marine or freshwater environments; underwater agriculture\n    {\n      name: \"aquaculture\",\n      value: \"AQC\"\n    },\n    // S.ARCH\tarch\ta natural or man-made structure in the form of an arch\n    {\n      name: \"arch\",\n      value: \"ARCH\"\n    },\n    // S.ARCHV\tarchive\ta place or institution where documents are preserved\n    {\n      name: \"archive\",\n      value: \"ARCHV\"\n    },\n    // S.ART\tpiece of art\ta piece of art, like a sculpture, painting. In contrast to monument (MNMT) it is not commemorative.\n    {\n      name: \"piece of art\",\n      value: \"ART\"\n    },\n    // // S.ASTR\tastronomical station\ta point on the earth whose position has been determined by observations of celestial bodies\n    // {\n    //     name: \"astronomical station\",\n    //     value: \"ASTR\",\n    // },\n    // // S.ASYL\tasylum\ta facility where the insane are cared for and protected\n    // {\n    //     name: \"asylum\",\n    //     value: \"ASYL\",\n    // },\n    // S.ATHF\tathletic field\ta tract of land used for playing team sports, and athletic track and field events\n    {\n      name: \"athletic field\",\n      value: \"ATHF\"\n    },\n    // S.ATM\tautomatic teller machine\tAn unattended electronic machine in a public place, connected to a data system and related equipment and activated by a bank customer to obtain cash withdrawals and other banking services.\n    {\n      name: \"automatic teller machine\",\n      value: \"ATM\"\n    },\n    // S.BANK\tbank\tA business establishment in which money is kept for saving or commercial purposes or is invested, supplied for loans, or exchanged.\n    {\n      name: \"bank\",\n      value: \"BANK\"\n    },\n    // // S.BCN\tbeacon\ta fixed artificial navigation mark\n    // {\n    //     name: \"beacon\",\n    //     value: \"BCN\",\n    // },\n    // S.BDG\tbridge\ta structure erected across an obstacle such as a stream, road, etc., in order to carry roads, railroads, and pedestrians across\n    {\n      name: \"bridge\",\n      value: \"BDG\"\n    },\n    // S.BDGQ\truined bridge\ta destroyed or decayed bridge which is no longer functional\n    {\n      name: \"ruined bridge\",\n      value: \"BDGQ\"\n    },\n    // // S.BLDA\tapartment building\ta building containing several individual apartments\n    // {\n    //     name: \"apartment building\",\n    //     value: \"BLDA\",\n    // },\n    // // S.BLDG\tbuilding(s)\ta structure built for permanent use, as a house, factory, etc.\n    // {\n    //     name: \"building\",\n    //     value: \"BLDG\",\n    // },\n    // // S.BLDO\toffice building\tcommercial building where business and/or services are conducted\n    // {\n    //     name: \"office building\",\n    //     value: \"BLDO\",\n    // },\n    // // S.BP\tboundary marker\ta fixture marking a point along a boundary\n    // {\n    //     name: \"boundary marker\",\n    //     value: \"BP\",\n    // },\n    // // S.BRKS\tbarracks\ta building for lodging military personnel\n    // {\n    //     name: \"barracks\",\n    //     value: \"BRKS\",\n    // },\n    // S.BRKW\tbreakwater\ta structure erected to break the force of waves at the entrance to a harbor or port\n    {\n      name: \"breakwater\",\n      value: \"BRKW\"\n    },\n    // // S.BSTN\tbaling station\ta facility for baling agricultural products\n    // {\n    //     name: \"baling station\",\n    //     value: \"BSTN\",\n    // },\n    // S.BTYD\tboatyard\ta waterside facility for servicing, repairing, and building small vessels\n    {\n      name: \"boatyard\",\n      value: \"BTYD\"\n    },\n    // S.BUR\tburial cave(s)\ta cave used for human burials\n    {\n      name: \"burial cave\",\n      value: \"BUR\"\n    },\n    // S.BUSTN\tbus station\ta facility comprising ticket office, platforms, etc. for loading and unloading passengers\n    {\n      name: \"bus station\",\n      value: \"BUSTN\"\n    },\n    // S.BUSTP\tbus stop\ta place lacking station facilities\n    {\n      name: \"bus stop\",\n      value: \"BUSTP\"\n    },\n    // S.CARN\tcairn\ta heap of stones erected as a landmark or for other purposes\n    {\n      name: \"cairn\",\n      value: \"CARN\"\n    },\n    // S.CAVE\tcave(s)\tan underground passageway or chamber, or cavity on the side of a cliff\n    {\n      name: \"cave\",\n      value: \"CAVE\"\n    },\n    // // S.CH\tchurch\ta building for public Christian worship\n    // {\n    //     name: \"church\",\n    //     value: \"CH\",\n    // },\n    // // S.CMP\tcamp(s)\ta site occupied by tents, huts, or other shelters for temporary use\n    // {\n    //     name: \"camp\",\n    //     value: \"CMP\",\n    // },\n    // // S.CMPL\tlogging camp\ta camp used by loggers\n    // {\n    //     name: \"logging camp\",\n    //     value: \"CMPL\",\n    // },\n    // // S.CMPLA\tlabor camp\ta camp used by migrant or temporary laborers\n    // {\n    //     name: \"labor camp\",\n    //     value: \"CMPLA\",\n    // },\n    // // S.CMPMN\tmining camp\ta camp used by miners\n    // {\n    //     name: \"mining camp\",\n    //     value: \"CMPMN\",\n    // },\n    // // S.CMPO\toil camp\ta camp used by oilfield workers\n    // {\n    //     name: \"oil camp\",\n    //     value: \"CMPO\",\n    // },\n    // // S.CMPQ\tabandoned camp\n    // {\n    //     name: \"abandoned camp\",\n    //     value: \"CMPQ\",\n    // },\n    // // S.CMPRF\trefugee camp\ta camp used by refugees\n    // {\n    //     name: \"refugee camp\",\n    //     value: \"CMPRF\",\n    // },\n    // S.CMTY\tcemetery\ta burial place or ground\n    {\n      name: \"cemetery\",\n      value: \"CMTY\"\n    },\n    // // S.COMC\tcommunication center\ta facility, including buildings, antennae, towers and electronic equipment for receiving and transmitting information\n    // {\n    //     name: \"communication center\",\n    //     value: \"COMC\",\n    // },\n    // // S.CRRL\tcorral(s)\ta pen or enclosure for confining or capturing animals\n    // {\n    //     name: \"corral\",\n    //     value: \"CRRL\",\n    // },\n    // S.CSNO\tcasino\ta building used for entertainment, especially gambling\n    {\n      name: \"casino\",\n      value: \"CSNO\"\n    },\n    // S.CSTL\tcastle\ta large fortified building or set of buildings\n    {\n      name: \"castle\",\n      value: \"CSTL\"\n    },\n    // // S.CSTM\tcustoms house\ta building in a port where customs and duties are paid, and where vessels are entered and cleared\n    // {\n    //     name: \"customs house\",\n    //     value: \"CSTM\",\n    // },\n    // // S.CTHSE\tcourthouse\ta building in which courts of law are held\n    // {\n    //     name: \"courthouse\",\n    //     value: \"CTHSE\",\n    // },\n    // // S.CTRA\tatomic center\ta facility where atomic research is carried out\n    // {\n    //     name: \"atomic center\",\n    //     value: \"CTRA\",\n    // },\n    // S.CTRCM\tcommunity center\ta facility for community recreation and other activities\n    {\n      name: \"community center\",\n      value: \"CTRCM\"\n    },\n    // // S.CTRF\tfacility center\ta place where more than one facility is situated\n    // {\n    //     name: \"facility center\",\n    //     value: \"CTRF\",\n    // },\n    // S.CTRM\tmedical center\ta complex of health care buildings including two or more of the following: hospital, medical school, clinic, pharmacy, doctor's offices, etc.\n    {\n      name: \"medical center\",\n      value: \"CTRM\"\n    },\n    // S.CTRR\treligious center\ta facility where more than one religious activity is carried out, e.g., retreat, school, monastery, worship\n    {\n      name: \"religious center\",\n      value: \"CTRR\"\n    },\n    // S.CTRS\tspace center\ta facility for launching, tracking, or controlling satellites and space vehicles\n    {\n      name: \"space center\",\n      value: \"CTRS\"\n    },\n    // S.CVNT\tconvent\ta building where a community of nuns lives in seclusion\n    {\n      name: \"convent\",\n      value: \"CVNT\"\n    },\n    // S.DAM\tdam\ta barrier constructed across a stream to impound water\n    {\n      name: \"dam\",\n      value: \"DAM\"\n    },\n    // S.DAMQ\truined dam\ta destroyed or decayed dam which is no longer functional\n    {\n      name: \"ruined dam\",\n      value: \"DAMQ\"\n    },\n    // // S.DAMSB\tsub-surface dam\ta dam put down to bedrock in a sand river\n    // {\n    //     name: \"sub-surface dam\",\n    //     value: \"DAMSB\",\n    // },\n    // S.DARY\tdairy\ta facility for the processing, sale and distribution of milk or milk products\n    {\n      name: \"dairy\",\n      value: \"DARY\"\n    },\n    // S.DCKD\tdry dock\ta dock providing support for a vessel, and means for removing the water so that the bottom of the vessel can be exposed\n    {\n      name: \"dry dock\",\n      value: \"DCKD\"\n    },\n    // S.DCKY\tdockyard\ta facility for servicing, building, or repairing ships\n    {\n      name: \"dockyard\",\n      value: \"DCKY\"\n    },\n    // // S.DIKE\tdike\tan earth or stone embankment usually constructed for flood or stream control\n    // {\n    //     name: \"dike\",\n    //     value: \"DIKE\",\n    // },\n    // S.DIP\tdiplomatic facility\toffice, residence, or facility of a foreign government, which may include an embassy, consulate, chancery, office of charge d'affaires, or other diplomatic, economic, military, or cultural mission\n    {\n      name: \"diplomatic facility\",\n      value: \"DIP\"\n    },\n    // // S.DPOF\tfuel depot\tan area where fuel is stored\n    // {\n    //     name: \"fuel depot\",\n    //     value: \"DPOF\",\n    // },\n    // // S.EST\testate(s)\ta large commercialized agricultural landholding with associated buildings and other facilities\n    // {\n    //     name: \"estate\",\n    //     value: \"EST\",\n    // },\n    // // S.ESTO\toil palm plantation\tan estate specializing in the cultivation of oil palm trees\n    // {\n    //     name: \"oil palm plantation\",\n    //     value: \"ESTO\",\n    // },\n    // // S.ESTR\trubber plantation\tan estate which specializes in growing and tapping rubber trees\n    // {\n    //     name: \"rubber plantation\",\n    //     value: \"ESTR\",\n    // },\n    // // S.ESTSG\tsugar plantation\tan estate that specializes in growing sugar cane\n    // {\n    //     name: \"sugar plantation\",\n    //     value: \"ESTSG\",\n    // },\n    // // S.ESTT\ttea plantation\tan estate which specializes in growing tea bushes\n    // {\n    //     name: \"tea plantation\",\n    //     value: \"ESTT\",\n    // },\n    // // S.ESTX\tsection of estate\n    // {\n    //     name: \"section of estate\",\n    //     value: \"ESTX\",\n    // },\n    // // S.FCL\tfacility\ta building or buildings housing a center, institute, foundation, hospital, prison, mission, courthouse, etc.\n    // {\n    //     name: \"facility\",\n    //     value: \"FCL\",\n    // },\n    // // S.FNDY\tfoundry\ta building or works where metal casting is carried out\n    // {\n    //     name: \"foundry\",\n    //     value: \"FNDY\",\n    // },\n    // // S.FRM\tfarm\ta tract of land with associated buildings devoted to agriculture\n    // {\n    //     name: \"farm\",\n    //     value: \"FRM\",\n    // },\n    // // S.FRMQ\tabandoned farm\n    // {\n    //     name: \"abandoned farm\",\n    //     value: \"FRMQ\",\n    // },\n    // // S.FRMS\tfarms\ttracts of land with associated buildings devoted to agriculture\n    // {\n    //     name: \"farms\",\n    //     value: \"FRMS\",\n    // },\n    // // S.FRMT\tfarmstead\tthe buildings and adjacent service areas of a farm\n    // {\n    //     name: \"farmstead\",\n    //     value: \"FRMT\",\n    // },\n    // S.FT\tfort\ta defensive structure or earthworks\n    {\n      name: \"fort\",\n      value: \"FT\"\n    },\n    // S.FY\tferry\ta boat or other floating conveyance and terminal facilities regularly used to transport people and vehicles across a waterbody\n    {\n      name: \"ferry\",\n      value: \"FY\"\n    },\n    // S.FYT\tferry terminal\ta place where ferries pick-up and discharge passengers, vehicles and or cargo\n    {\n      name: \"ferry terminal\",\n      value: \"FYT\"\n    },\n    // // S.GATE\tgate\ta controlled access entrance or exit\n    // {\n    //     name: \"gate\",\n    //     value: \"GATE\",\n    // },\n    // S.GDN\tgarden(s)\tan enclosure for displaying selected plant or animal life\n    {\n      name: \"garden\",\n      value: \"GDN\"\n    },\n    // S.GHAT\tghat\ta set of steps leading to a river, which are of religious significance, and at their base is usually a platform for bathing\n    {\n      name: \"ghat\",\n      value: \"GHAT\"\n    },\n    // S.GHSE\tguest house\ta house used to provide lodging for paying guests\n    {\n      name: \"guest house\",\n      value: \"GHSE\"\n    },\n    // // S.GOSP\tgas-oil separator plant\ta facility for separating gas from oil\n    // {\n    //     name: \"gas-oil separator\",\n    //     value: \"GOSP\",\n    // },\n    // S.GOVL\tlocal government office\ta facility housing local governmental offices, usually a city, town, or village hall\n    {\n      name: \"local government office\",\n      value: \"GOVL\"\n    },\n    // S.GRVE\tgrave\ta burial site\n    {\n      name: \"grave\",\n      value: \"GRVE\"\n    },\n    // S.HERM\thermitage\ta secluded residence, usually for religious sects\n    {\n      name: \"hermitage\",\n      value: \"HERM\"\n    },\n    // S.HLT\thalting place\ta place where caravans stop for rest\n    {\n      name: \"halting place\",\n      value: \"HLT\"\n    },\n    // S.HMSD\thomestead\ta residence, owner's or manager's, on a sheep or cattle station, woolshed, outcamp, or Aboriginal outstation, specific to Australia and New Zealand\n    {\n      name: \"homestead\",\n      value: \"HMSD\"\n    },\n    // // S.HSE\thouse(s)\ta building used as a human habitation\n    // {\n    //     name: \"house\",\n    //     value: \"HSE\",\n    // },\n    // S.HSEC\tcountry house\ta large house, mansion, or chateau, on a large estate\n    {\n      name: \"country house\",\n      value: \"HSEC\"\n    },\n    // S.HSP\thospital\ta building in which sick or injured, especially those confined to bed, are medically treated\n    {\n      name: \"hospital\",\n      value: \"HSP\"\n    },\n    // S.HSPC\tclinic\ta medical facility associated with a hospital for outpatients\n    {\n      name: \"clinic\",\n      value: \"HSPC\"\n    },\n    // S.HSPD\tdispensary\ta building where medical or dental aid is dispensed\n    {\n      name: \"dispensary\",\n      value: \"HSPD\"\n    },\n    // // S.HSPL\tleprosarium\tan asylum or hospital for lepers\n    // {\n    //     name: \"leprosarium\",\n    //     value: \"HSPL\",\n    // },\n    // S.HSTS\thistorical site\ta place of historical importance\n    {\n      name: \"historical site\",\n      value: \"HSTS\"\n    },\n    // S.HTL\thotel\ta building providing lodging and/or meals for the public\n    {\n      name: \"hotel\",\n      value: \"HTL\"\n    },\n    // S.HUT\thut\ta small primitive house\n    {\n      name: \"hut\",\n      value: \"HUT\"\n    },\n    // S.HUTS\thuts\tsmall primitive houses\n    {\n      name: \"huts\",\n      value: \"HUTS\"\n    },\n    // // S.INSM\tmilitary installation\ta facility for use of and control by armed forces\n    // {\n    //     name: \"military installation\",\n    //     value: \"INSM\",\n    // },\n    // // S.ITTR\tresearch institute\ta facility where research is carried out\n    // {\n    //     name: \"research institute\",\n    //     value: \"ITTR\",\n    // },\n    // S.JTY\tjetty\ta structure built out into the water at a river mouth or harbor entrance to regulate currents and silting\n    {\n      name: \"jetty\",\n      value: \"JTY\"\n    },\n    // S.LDNG\tlanding\ta place where boats receive or discharge passengers and freight, but lacking most port facilities\n    {\n      name: \"landing\",\n      value: \"LDNG\"\n    },\n    // // S.LEPC\tleper colony\ta settled area inhabited by lepers in relative isolation\n    // {\n    //     name: \"leper colony\",\n    //     value: \"LEPC\",\n    // },\n    // S.LIBR\tlibrary\tA place in which information resources such as books are kept for reading, reference, or lending.\n    {\n      name: \"library\",\n      value: \"LIBR\"\n    },\n    // // S.LNDF\tlandfill\ta place for trash and garbage disposal in which the waste is buried between layers of earth to build up low-lying land\n    // {\n    //     name: \"landfill\",\n    //     value: \"LNDF\",\n    // },\n    // S.LOCK\tlock(s)\ta basin in a waterway with gates at each end by means of which vessels are passed from one water level to another\n    {\n      name: \"locks\",\n      value: \"LOCK\"\n    },\n    // S.LTHSE\tlighthouse\ta distinctive structure exhibiting a major navigation light\n    {\n      name: \"lighthouse\",\n      value: \"LTHSE\"\n    },\n    // S.MALL\tmall\tA large, often enclosed shopping complex containing various stores, businesses, and restaurants usually accessible by common passageways.\n    {\n      name: \"mall\",\n      value: \"MALL\"\n    },\n    // S.MAR\tmarina\ta harbor facility for small boats, yachts, etc.\n    {\n      name: \"marina\",\n      value: \"MAR\"\n    },\n    // // S.MFG\tfactory\tone or more buildings where goods are manufactured, processed or fabricated\n    // {\n    //     name: \"factory\",\n    //     value: \"MFG\",\n    // },\n    // S.MFGB\tbrewery\tone or more buildings where beer is brewed\n    {\n      name: \"brewery\",\n      value: \"MFGB\"\n    },\n    // // S.MFGC\tcannery\ta building where food items are canned\n    // {\n    //     name: \"cannery\",\n    //     value: \"MFGC\",\n    // },\n    // // S.MFGCU\tcopper works\ta facility for processing copper ore\n    // {\n    //     name: \"copper works\",\n    //     value: \"MFGCU\",\n    // },\n    // // S.MFGLM\tlimekiln\ta furnace in which limestone is reduced to lime\n    // {\n    //     name: \"limekiln\",\n    //     value: \"MFGLM\",\n    // },\n    // // S.MFGM\tmunitions plant\ta factory where ammunition is made\n    // {\n    //     name: \"munitions plant\",\n    //     value: \"MFGM\",\n    // },\n    // // S.MFGPH\tphosphate works\ta facility for producing fertilizer\n    // {\n    //     name: \"phosphate works\",\n    //     value: \"MFGPH\",\n    // },\n    // S.MFGQ\tabandoned factory\n    {\n      name: \"abandoned factory\",\n      value: \"MFGQ\"\n    },\n    // // S.MFGSG\tsugar refinery\ta facility for converting raw sugar into refined sugar\n    // {\n    //     name: \"sugar refinery\",\n    //     value: \"MFGSG\",\n    // },\n    // S.MKT\tmarket\ta place where goods are bought and sold at regular intervals\n    {\n      name: \"market\",\n      value: \"MKT\"\n    },\n    // // S.ML\tmill(s)\ta building housing machines for transforming, shaping, finishing, grinding, or extracting products\n    // {\n    //     name: \"mill\",\n    //     value: \"ML\",\n    // },\n    // // S.MLM\tore treatment plant\ta facility for improving the metal content of ore by concentration\n    // {\n    //     name: \"ore treatment plant\",\n    //     value: \"MLM\",\n    // },\n    // // S.MLO\tolive oil mill\ta mill where oil is extracted from olives\n    // {\n    //     name: \"olive oil mill\",\n    //     value: \"MLO\",\n    // },\n    // // S.MLSG\tsugar mill\ta facility where sugar cane is processed into raw sugar\n    // {\n    //     name: \"sugar mill\",\n    //     value: \"MLSG\",\n    // },\n    // // S.MLSGQ\tformer sugar mill\ta sugar mill no longer used as a sugar mill\n    // {\n    //     name: \"former sugar mill\",\n    //     value: \"MLSGQ\",\n    // },\n    // // S.MLSW\tsawmill\ta mill where logs or lumber are sawn to specified shapes and sizes\n    // {\n    //     name: \"sawmill\",\n    //     value: \"MLSW\",\n    // },\n    // S.MLWND\twindmill\ta mill or water pump powered by wind\n    {\n      name: \"windmill\",\n      value: \"MLWND\"\n    },\n    // S.MLWTR\twater mill\ta mill powered by running water\n    {\n      name: \"water mill\",\n      value: \"MLWTR\"\n    },\n    // // S.MN\tmine(s)\ta site where mineral ores are extracted from the ground by excavating surface pits and subterranean passages\n    // {\n    //     name: \"mine\",\n    //     value: \"MN\",\n    // },\n    // // S.MNAU\tgold mine(s)\ta mine where gold ore, or alluvial gold is extracted\n    // {\n    //     name: \"gold mine\",\n    //     value: \"MNAU\",\n    // },\n    // // S.MNC\tcoal mine(s)\ta mine where coal is extracted\n    // {\n    //     name: \"coal mine\",\n    //     value: \"MNC\",\n    // },\n    // // S.MNCR\tchrome mine(s)\ta mine where chrome ore is extracted\n    // {\n    //     name: \"chrome mine\",\n    //     value: \"MNCR\",\n    // },\n    // // S.MNCU\tcopper mine(s)\ta mine where copper ore is extracted\n    // {\n    //     name: \"copper mine\",\n    //     value: \"MNCU\",\n    // },\n    // // S.MNFE\tiron mine(s)\ta mine where iron ore is extracted\n    // {\n    //     name: \"iron mine\",\n    //     value: \"MNFE\",\n    // },\n    // S.MNMT\tmonument\ta commemorative structure or statue\n    {\n      name: \"monument\",\n      value: \"MNMT\"\n    },\n    // // S.MNN\tsalt mine(s)\ta mine from which salt is extracted\n    // {\n    //     name: \"salt mine\",\n    //     value: \"MNN\",\n    // },\n    // // S.MNQ\tabandoned mine\n    // {\n    //     name: \"abandoned mine\",\n    //     value: \"MNQ\",\n    // },\n    // // S.MNQR\tquarry(-ies)\ta surface mine where building stone or gravel and sand, etc. are extracted\n    // {\n    //     name: \"quarry\",\n    //     value: \"MNQR\",\n    // },\n    // S.MOLE\tmole\ta massive structure of masonry or large stones serving as a pier or breakwater\n    {\n      name: \"mole\",\n      value: \"MOLE\"\n    },\n    // // S.MSQE\tmosque\ta building for public Islamic worship\n    // {\n    //     name: \"mosque\",\n    //     value: \"MSQE\",\n    // },\n    // // S.MSSN\tmission\ta place characterized by dwellings, school, church, hospital and other facilities operated by a religious group for the purpose of providing charitable services and to propagate religion\n    // {\n    //     name: \"mission\",\n    //     value: \"MSSN\",\n    // },\n    // // S.MSSNQ\tabandoned mission\n    // {\n    //     name: \"abandoned mission\",\n    //     value: \"MSSNQ\",\n    // },\n    // S.MSTY\tmonastery\ta building and grounds where a community of monks lives in seclusion\n    {\n      name: \"monastery\",\n      value: \"MSTY\"\n    },\n    // S.MTRO\tmetro station\tmetro station (Underground, Tube, or Metro)\n    {\n      name: \"metro station\",\n      value: \"MTRO\"\n    },\n    // S.MUS\tmuseum\ta building where objects of permanent interest in one or more of the arts and sciences are preserved and exhibited\n    {\n      name: \"museum\",\n      value: \"MUS\"\n    },\n    // // S.NOV\tnovitiate\ta religious house or school where novices are trained\n    // {\n    //     name: \"novitiate\",\n    //     value: \"NOV\",\n    // },\n    // S.NSY\tnursery(-ies)\ta place where plants are propagated for transplanting or grafting\n    {\n      name: \"nursery\",\n      value: \"NSY\"\n    },\n    // S.OBPT\tobservation point\ta wildlife or scenic observation point\n    {\n      name: \"observation point\",\n      value: \"OBPT\"\n    },\n    // S.OBS\tobservatory\ta facility equipped for observation of atmospheric or space phenomena\n    {\n      name: \"observatory\",\n      value: \"OBS\"\n    },\n    // S.OBSR\tradio observatory\ta facility equipped with an array of antennae for receiving radio waves from space\n    {\n      name: \"radio observatory\",\n      value: \"OBSR\"\n    },\n    // // S.OILJ\toil pipeline junction\ta section of an oil pipeline where two or more pipes join together\n    // {\n    //     name: \"oil pipeline junction\",\n    //     value: \"OILJ\",\n    // },\n    // // S.OILQ\tabandoned oil well\n    // {\n    //     name: \"abandoned oil well\",\n    //     value: \"OILQ\",\n    // },\n    // // S.OILR\toil refinery\ta facility for converting crude oil into refined petroleum products\n    // {\n    //     name: \"oil refinery\",\n    //     value: \"OILR\",\n    // },\n    // // S.OILT\ttank farm\ta tract of land occupied by large, cylindrical, metal tanks in which oil or liquid petrochemicals are stored\n    // {\n    //     name: \"tank farm\",\n    //     value: \"OILT\",\n    // },\n    // // S.OILW\toil well\ta well from which oil may be pumped\n    // {\n    //     name: \"oil well\",\n    //     value: \"OILW\",\n    // },\n    // S.OPRA\topera house\tA theater designed chiefly for the performance of operas.\n    {\n      name: \"opera house\",\n      value: \"OPRA\"\n    },\n    // S.PAL\tpalace\ta large stately house, often a royal or presidential residence\n    {\n      name: \"palace\",\n      value: \"PAL\"\n    },\n    // S.PGDA\tpagoda\ta tower-like storied structure, usually a Buddhist shrine\n    {\n      name: \"pagoda\",\n      value: \"PGDA\"\n    },\n    // S.PIER\tpier\ta structure built out into navigable water on piles providing berthing for ships and recreation\n    {\n      name: \"pier\",\n      value: \"PIER\"\n    },\n    // // S.PKLT\tparking lot\tan area used for parking vehicles\n    // {\n    //     name: \"parking lot\",\n    //     value: \"PKLT\",\n    // },\n    // // S.PMPO\toil pumping station\ta facility for pumping oil through a pipeline\n    // {\n    //     name: \"oil pumping station\",\n    //     value: \"PMPO\",\n    // },\n    // // S.PMPW\twater pumping station\ta facility for pumping water from a major well or through a pipeline\n    // {\n    //     name: \"water pumping station\",\n    //     value: \"PMPW\",\n    // },\n    // S.PO\tpost office\ta public building in which mail is received, sorted and distributed\n    {\n      name: \"post office\",\n      value: \"PO\"\n    },\n    // S.PP\tpolice post\ta building in which police are stationed\n    {\n      name: \"police post\",\n      value: \"PP\"\n    },\n    // // S.PPQ\tabandoned police post\n    // {\n    //     name: \"abandoned police post\",\n    //     value: \"PPQ\",\n    // },\n    // S.PRKGT\tpark gate\ta controlled access to a park\n    {\n      name: \"park gate\",\n      value: \"PRKGT\"\n    },\n    // S.PRKHQ\tpark headquarters\ta park administrative facility\n    {\n      name: \"park headquarters\",\n      value: \"PRKHQ\"\n    },\n    // // S.PRN\tprison\ta facility for confining prisoners\n    // {\n    //     name: \"prison\",\n    //     value: \"PRN\",\n    // },\n    // // S.PRNJ\treformatory\ta facility for confining, training, and reforming young law offenders\n    // {\n    //     name: \"reformatory\",\n    //     value: \"PRNJ\",\n    // },\n    // // S.PRNQ\tabandoned prison\n    // {\n    //     name: \"abandoned prison\",\n    //     value: \"PRNQ\",\n    // },\n    // // S.PS\tpower station\ta facility for generating electric power\n    // {\n    //     name: \"power station\",\n    //     value: \"PS\",\n    // },\n    // // S.PSH\thydroelectric power station\ta building where electricity is generated from water power\n    // {\n    //     name: \"hydroelectric power station\",\n    //     value: \"PSH\",\n    // },\n    // // S.PSN\tnuclear power station\tnuclear power station\n    // {\n    //     name: \"nuclear power station\",\n    //     value: \"PSN\",\n    // },\n    // // S.PSTB\tborder post\ta post or station at an international boundary for the regulation of movement of people and goods\n    // {\n    //     name: \"border post\",\n    //     value: \"PSTB\",\n    // },\n    // // S.PSTC\tcustoms post\ta building at an international boundary where customs and duties are paid on goods\n    // {\n    //     name: \"customs post\",\n    //     value: \"PSTC\",\n    // },\n    // // S.PSTP\tpatrol post\ta post from which patrols are sent out\n    // {\n    //     name: \"patrol post\",\n    //     value: \"PSTP\",\n    // },\n    // S.PYR\tpyramid\tan ancient massive structure of square ground plan with four triangular faces meeting at a point and used for enclosing tombs\n    {\n      name: \"pyramid\",\n      value: \"PYR\"\n    },\n    // S.PYRS\tpyramids\tancient massive structures of square ground plan with four triangular faces meeting at a point and used for enclosing tombs\n    {\n      name: \"pyramids\",\n      value: \"PYRS\"\n    },\n    // // S.QUAY\tquay\ta structure of solid construction along a shore or bank which provides berthing for ships and which generally provides cargo handling facilities\n    // {\n    //     name: \"quay\",\n    //     value: \"QUAY\",\n    // },\n    // // S.RDCR\ttraffic circle\ta road junction formed around a central circle about which traffic moves in one direction only\n    // {\n    //     name: \"traffic circle\",\n    //     value: \"RDCR\",\n    // },\n    // // S.RDIN\tintersection\ta junction of two or more highways by a system of separate levels that permit traffic to pass from one to another without the crossing of traffic streams\n    // {\n    //     name: \"intersection\",\n    //     value: \"RDIN\",\n    // },\n    // S.RECG\tgolf course\ta recreation field where golf is played\n    {\n      name: \"golf course\",\n      value: \"RECG\"\n    },\n    // S.RECR\tracetrack\ta track where races are held\n    {\n      name: \"racetrack\",\n      value: \"RECR\"\n    },\n    // S.REST\trestaurant\tA place where meals are served to the public\n    {\n      name: \"restaurant\",\n      value: \"REST\"\n    },\n    // S.RET\tstore\ta building where goods and/or services are offered for sale\n    {\n      name: \"store\",\n      value: \"RET\"\n    },\n    // S.RHSE\tresthouse\ta structure maintained for the rest and shelter of travelers\n    {\n      name: \"resthouse\",\n      value: \"RHSE\"\n    },\n    // // S.RKRY\trookery\ta breeding place of a colony of birds or seals\n    // {\n    //     name: \"rookery\",\n    //     value: \"RKRY\",\n    // },\n    // S.RLG\treligious site\tan ancient site of significant religious importance\n    {\n      name: \"religious site\",\n      value: \"RLG\"\n    },\n    // S.RLGR\tretreat\ta place of temporary seclusion, especially for religious groups\n    {\n      name: \"retreat\",\n      value: \"RLGR\"\n    },\n    // // S.RNCH\tranch(es)\ta large farm specializing in extensive grazing of livestock\n    // {\n    //     name: \"ranch\",\n    //     value: \"RNCH\",\n    // },\n    // // S.RSD\trailroad siding\ta short track parallel to and joining the main track\n    // {\n    //     name: \"railroad siding\",\n    //     value: \"RSD\",\n    // },\n    // // S.RSGNL\trailroad signal\ta signal at the entrance of a particular section of track governing the movement of trains\n    // {\n    //     name: \"railroad signal\",\n    //     value: \"RSGNL\",\n    // },\n    // S.RSRT\tresort\ta specialized facility for vacation, health, or participation sports activities\n    {\n      name: \"resort\",\n      value: \"RSRT\"\n    },\n    // S.RSTN\trailroad station\ta facility comprising ticket office, platforms, etc. for loading and unloading train passengers and freight\n    {\n      name: \"railroad station\",\n      value: \"RSTN\"\n    },\n    // S.RSTNQ\tabandoned railroad station\n    {\n      name: \"abandoned railroad station\",\n      value: \"RSTNQ\"\n    },\n    // S.RSTP\trailroad stop\ta place lacking station facilities where trains stop to pick up and unload passengers and freight\n    {\n      name: \"railroad stop\",\n      value: \"RSTP\"\n    },\n    // S.RSTPQ\tabandoned railroad stop\n    {\n      name: \"abandoned railroad stop\",\n      value: \"RSTPQ\"\n    },\n    // S.RUIN\truin(s)\ta destroyed or decayed structure which is no longer functional\n    {\n      name: \"ruins\",\n      value: \"RUIN\"\n    },\n    // // S.SCH\tschool\tbuilding(s) where instruction in one or more branches of knowledge takes place\n    // {\n    //     name: \"school\",\n    //     value: \"SCH\",\n    // },\n    // // S.SCHA\tagricultural school\ta school with a curriculum focused on agriculture\n    // {\n    //     name: \"agricultural school\",\n    //     value: \"SCHA\",\n    // },\n    // S.SCHC\tcollege\tthe grounds and buildings of an institution of higher learning\n    {\n      name: \"college\",\n      value: \"SCHC\"\n    },\n    // S.SCHL\tlanguage school\tLanguage Schools & Institutions\n    {\n      name: \"language school\",\n      value: \"SCHL\"\n    },\n    // // S.SCHM\tmilitary school\ta school at which military science forms the core of the curriculum\n    // {\n    //     name: \"military school\",\n    //     value: \"SCHM\",\n    // },\n    // S.SCHN\tmaritime school\ta school at which maritime sciences form the core of the curriculum\n    {\n      name: \"maritime school\",\n      value: \"SCHN\"\n    },\n    // S.SCHT\ttechnical school\tpost-secondary school with a specifically technical or vocational curriculum\n    {\n      name: \"technical school\",\n      value: \"SCHT\"\n    },\n    // // S.SECP\tState Exam Prep Centre\tstate exam preparation centres\n    // {\n    //     name: \"State Exam Prep Centre\",\n    //     value: \"SECP\",\n    // },\n    // // S.SHPF\tsheepfold\ta fence or wall enclosure for sheep and other small herd animals\n    // {\n    //     name: \"sheepfold\",\n    //     value: \"SHPF\",\n    // },\n    // S.SHRN\tshrine\ta structure or place memorializing a person or religious concept\n    {\n      name: \"shrine\",\n      value: \"SHRN\"\n    },\n    // // S.SHSE\tstorehouse\ta building for storing goods, especially provisions\n    // {\n    //     name: \"storehouse\",\n    //     value: \"SHSE\",\n    // },\n    // // S.SLCE\tsluice\ta conduit or passage for carrying off surplus water from a waterbody, usually regulated by means of a sluice gate\n    // {\n    //     name: \"sluice\",\n    //     value: \"SLCE\",\n    // },\n    // // S.SNTR\tsanatorium\ta facility where victims of physical or mental disorders are treated\n    // {\n    //     name: \"sanatorium\",\n    //     value: \"SNTR\",\n    // },\n    // S.SPA\tspa\ta resort area usually developed around a medicinal spring\n    {\n      name: \"spa\",\n      value: \"SPA\"\n    },\n    // // S.SPLY\tspillway\ta passage or outlet through which surplus water flows over, around or through a dam\n    // {\n    //     name: \"spillway\",\n    //     value: \"SPLY\",\n    // },\n    // S.SQR\tsquare\ta broad, open, public area near the center of a town or city\n    {\n      name: \"square\",\n      value: \"SQR\"\n    },\n    // S.STBL\tstable\ta building for the shelter and feeding of farm animals, especially horses\n    {\n      name: \"stable\",\n      value: \"STBL\"\n    },\n    // S.STDM\tstadium\ta structure with an enclosure for athletic games with tiers of seats for spectators\n    {\n      name: \"stadium\",\n      value: \"STDM\"\n    },\n    // // S.STNB\tscientific research base\ta scientific facility used as a base from which research is carried out or monitored\n    // {\n    //     name: \"scientific research base\",\n    //     value: \"STNB\",\n    // },\n    // // S.STNC\tcoast guard station\ta facility from which the coast is guarded by armed vessels\n    // {\n    //     name: \"coast guard station\",\n    //     value: \"STNC\",\n    // },\n    // // S.STNE\texperiment station\ta facility for carrying out experiments\n    // {\n    //     name: \"experiment station\",\n    //     value: \"STNE\",\n    // },\n    // S.STNF\tforest station\ta collection of buildings and facilities for carrying out forest management\n    {\n      name: \"forest station\",\n      value: \"STNF\"\n    },\n    // S.STNI\tinspection station\ta station at which vehicles, goods, and people are inspected\n    {\n      name: \"inspection station\",\n      value: \"STNI\"\n    },\n    // S.STNM\tmeteorological station\ta station at which weather elements are recorded\n    {\n      name: \"meteorological station\",\n      value: \"STNM\"\n    },\n    // S.STNR\tradio station\ta facility for producing and transmitting information by radio waves\n    {\n      name: \"radio station\",\n      value: \"STNR\"\n    },\n    // // S.STNS\tsatellite station\ta facility for tracking and communicating with orbiting satellites\n    // {\n    //     name: \"satellite station\",\n    //     value: \"STNS\",\n    // },\n    // // S.STNW\twhaling station\ta facility for butchering whales and processing train oil\n    // {\n    //     name: \"whaling station\",\n    //     value: \"STNW\",\n    // },\n    // S.STPS\tsteps\tstones or slabs placed for ease in ascending or descending a steep slope\n    {\n      name: \"steps\",\n      value: \"STPS\"\n    },\n    // // S.SWT\tsewage treatment plant\tfacility for the processing of sewage and/or wastewater\n    // {\n    //     name: \"sewage treatment plant\",\n    //     value: \"SWT\",\n    // },\n    // // S.SYG\tsynagogue\ta place for Jewish worship and religious instruction\n    // {\n    //     name: \"synagogue\",\n    //     value: \"SYG\",\n    // },\n    // S.THTR\ttheater\tA building, room, or outdoor structure for the presentation of plays, films, or other dramatic performances\n    {\n      name: \"theater\",\n      value: \"THTR\"\n    },\n    // S.TMB\ttomb(s)\ta structure for interring bodies\n    {\n      name: \"tomb(s)\",\n      value: \"TMB\"\n    },\n    // S.TMPL\ttemple(s)\tan edifice dedicated to religious worship\n    {\n      name: \"temple\",\n      value: \"TMPL\"\n    },\n    // // S.TNKD\tcattle dipping tank\ta small artificial pond used for immersing cattle in chemically treated water for disease control\n    // {\n    //     name: \"cattle dipping tank\",\n    //     value: \"TNKD\",\n    // },\n    // S.TOLL\ttoll gate/barrier\thighway toll collection station\n    {\n      name: \"toll gate\",\n      value: \"TOLL\"\n    },\n    // S.TOWR\ttower\ta high conspicuous structure, typically much higher than its diameter\n    {\n      name: \"tower\",\n      value: \"TOWR\"\n    },\n    // S.TRAM\ttram\trail vehicle along urban streets (also known as streetcar or trolley)\n    {\n      name: \"tram\",\n      value: \"TRAM\"\n    },\n    // S.TRANT\ttransit terminal\tfacilities for the handling of vehicular freight and passengers\n    {\n      name: \"transit terminal\",\n      value: \"TRANT\"\n    },\n    // // S.TRIG\ttriangulation station\ta point on the earth whose position has been determined by triangulation\n    // {\n    //     name: \"triangulation station\",\n    //     value: \"TRIG\",\n    // },\n    // // S.TRMO\toil pipeline terminal\ta tank farm or loading facility at the end of an oil pipeline\n    // {\n    //     name: \"oil pipeline terminal\",\n    //     value: \"TRMO\",\n    // },\n    // S.TWO\ttemp work office\tTemporary Work Offices\n    {\n      name: \"temp work office\",\n      value: \"TWO\"\n    },\n    // // S.UNIP\tuniversity prep school\tUniversity Preparation Schools & Institutions\n    // {\n    //     name: \"university prep school\",\n    //     value: \"UNIP\",\n    // },\n    // S.UNIV\tuniversity\tAn institution for higher learning with teaching and research facilities constituting a graduate school and professional schools that award master's degrees and doctorates and an undergraduate division that awards bachelor's degrees.\n    {\n      name: \"university\",\n      value: \"UNIV\"\n    },\n    // // S.USGE\tunited states government establishment\ta facility operated by the United States Government in Panama\n    // {\n    //     name: \"united states government establishment\",\n    //     value: \"USGE\",\n    // },\n    // S.VETF\tveterinary facility\ta building or camp at which veterinary services are available\n    {\n      name: \"veterinarian\",\n      value: \"VETF\"\n    },\n    // S.WALL\twall\ta thick masonry structure, usually enclosing a field or building, or forming the side of a structure\n    {\n      name: \"wall\",\n      value: \"WALL\"\n    },\n    // S.WALLA\tancient wall\tthe remains of a linear defensive stone structure\n    {\n      name: \"ancient wall\",\n      value: \"WALLA\"\n    },\n    // // S.WEIR\tweir(s)\ta small dam in a stream, designed to raise the water level or to divert stream flow through a desired channel\n    // {\n    //     name: \"weir\",\n    //     value: \"WEIR\",\n    // },\n    // S.WHRF\twharf(-ves)\ta structure of open rather than solid construction along a shore or a bank which provides berthing for ships and cargo-handling facilities\n    {\n      name: \"wharf\",\n      value: \"WHRF\"\n    },\n    // S.WRCK\twreck\tthe site of the remains of a wrecked vessel\n    {\n      name: \"wreck\",\n      value: \"WRCK\"\n    },\n    // // S.WTRW\twaterworks\ta facility for supplying potable water through a water source and a system of pumps and filtration beds\n    // {\n    //     name: \"waterworks\",\n    //     value: \"WTRW\",\n    // },\n    // S.ZNF\tfree trade zone\tan area, usually a section of a port, where goods may be received and shipped free of customs duty and of most customs regulations\n    {\n      name: \"free trade zone\",\n      value: \"ZNF\"\n    },\n    // S.ZOO\tzoo\ta zoological garden or park where wild animals are kept for exhibition\n    {\n      name: \"zoo\",\n      value: \"ZOO\"\n    },\n    // =====================================================\n    // =====================================================\n    // T. MOUNTAIN, HILL, ROCK, ...\n    // =====================================================\n    // =====================================================\n    {\n      name: \"\",\n      value: \"blank11\"\n    },\n    {\n      name: \"MOUNTAINS, HILLS + ROCKS\",\n      value: \"MountainsHillsAndRocks\"\n    },\n    {\n      name: \"\",\n      value: \"blank12\"\n    },\n    // T.ASPH\tasphalt lake\ta small basin containing naturally occurring asphalt\n    {\n      name: \"asphalt lake\",\n      value: \"ASPH\"\n    },\n    // T.ATOL\tatoll(s)\ta ring-shaped coral reef which has closely spaced islands on it encircling a lagoon\n    {\n      name: \"atoll\",\n      value: \"ATOL\"\n    },\n    // // T.BAR\tbar\ta shallow ridge or mound of coarse unconsolidated material in a stream channel, at the mouth of a stream, estuary, or lagoon and in the wave-break zone along coasts\n    // {\n    //     name: \"bar\",\n    //     value: \"BAR\",\n    // },\n    // T.BCH\tbeach\ta shore zone of coarse unconsolidated sediment that extends from the low-water line to the highest reach of storm waves\n    {\n      name: \"beach\",\n      value: \"BCH\"\n    },\n    // T.BCHS\tbeaches\ta shore zone of coarse unconsolidated sediment that extends from the low-water line to the highest reach of storm waves\n    {\n      name: \"beaches\",\n      value: \"BCHS\"\n    },\n    // T.BDLD\tbadlands\tan area characterized by a maze of very closely spaced, deep, narrow, steep-sided ravines, and sharp crests and pinnacles\n    {\n      name: \"badlands\",\n      value: \"BDLD\"\n    },\n    // T.BLDR\tboulder field\ta high altitude or high latitude bare, flat area covered with large angular rocks\n    {\n      name: \"boulder field\",\n      value: \"BLDR\"\n    },\n    // T.BLHL\tblowhole(s)\ta hole in coastal rock through which sea water is forced by a rising tide or waves and spurted through an outlet into the air\n    {\n      name: \"blowhole\",\n      value: \"BLHL\"\n    },\n    // T.BLOW\tblowout(s)\ta small depression in sandy terrain, caused by wind erosion\n    {\n      name: \"blowout\",\n      value: \"BLOW\"\n    },\n    // T.BNCH\tbench\ta long, narrow bedrock platform bounded by steeper slopes above and below, usually overlooking a waterbody\n    {\n      name: \"bench\",\n      value: \"BNCH\"\n    },\n    // T.BUTE\tbutte(s)\ta small, isolated, usually flat-topped hill with steep sides\n    {\n      name: \"butte\",\n      value: \"BUTE\"\n    },\n    // T.CAPE\tcape\ta land area, more prominent than a point, projecting into the sea and marking a notable change in coastal direction\n    {\n      name: \"cape\",\n      value: \"CAPE\"\n    },\n    // T.CFT\tcleft(s)\ta deep narrow slot, notch, or groove in a coastal cliff\n    {\n      name: \"cleft\",\n      value: \"CFT\"\n    },\n    // T.CLDA\tcaldera\ta depression measuring kilometers across formed by the collapse of a volcanic mountain\n    {\n      name: \"caldera\",\n      value: \"CLDA\"\n    },\n    // T.CLF\tcliff(s)\ta high, steep to perpendicular slope overlooking a waterbody or lower area\n    {\n      name: \"cliff\",\n      value: \"CLF\"\n    },\n    // T.CNYN\tcanyon\ta deep, narrow valley with steep sides cutting into a plateau or mountainous area\n    {\n      name: \"canyon\",\n      value: \"CNYN\"\n    },\n    // T.CONE\tcone(s)\ta conical landform composed of mud or volcanic material\n    {\n      name: \"mud/volcanic cone\",\n      value: \"CONE\"\n    },\n    // // T.CRDR\tcorridor\ta strip or area of land having significance as an access way\n    // {\n    //     name: \"corridor\",\n    //     value: \"CRDR\",\n    // },\n    // T.CRQ\tcirque\ta bowl-like hollow partially surrounded by cliffs or steep slopes at the head of a glaciated valley\n    {\n      name: \"cirque\",\n      value: \"CRQ\"\n    },\n    // T.CRQS\tcirques\tbowl-like hollows partially surrounded by cliffs or steep slopes at the head of a glaciated valley\n    {\n      name: \"cirques\",\n      value: \"CRQS\"\n    },\n    // T.CRTR\tcrater(s)\ta generally circular saucer or bowl-shaped depression caused by volcanic or meteorite explosive action\n    {\n      name: \"crater\",\n      value: \"CRTR\"\n    },\n    // // T.CUET\tcuesta(s)\tan asymmetric ridge formed on tilted strata\n    // {\n    //     name: \"cuesta\",\n    //     value: \"CUET\",\n    // },\n    // T.DLTA\tdelta\ta flat plain formed by alluvial deposits at the mouth of a stream\n    {\n      name: \"delta\",\n      value: \"DLTA\"\n    },\n    // T.DPR\tdepression(s)\ta low area surrounded by higher land and usually characterized by interior drainage\n    {\n      name: \"depression\",\n      value: \"DPR\"\n    },\n    // T.DSRT\tdesert\ta large area with little or no vegetation due to extreme environmental conditions\n    {\n      name: \"desert\",\n      value: \"DSRT\"\n    },\n    // T.DUNE\tdune(s)\ta wave form, ridge or star shape feature composed of sand\n    {\n      name: \"dunes\",\n      value: \"DUNE\"\n    },\n    // T.DVD\tdivide\ta line separating adjacent drainage basins\n    {\n      name: \"divide\",\n      value: \"DVD\"\n    },\n    // T.ERG\tsandy desert\tan extensive tract of shifting sand and sand dunes\n    {\n      name: \"sandy desert (erg)\",\n      value: \"ERG\"\n    },\n    // T.FAN\tfan(s)\ta fan-shaped wedge of coarse alluvium with apex merging with a mountain stream bed and the fan spreading out at a low angle slope onto an adjacent plain\n    {\n      name: \"alluvial fan\",\n      value: \"FAN\"\n    },\n    // T.FORD\tford\ta shallow part of a stream which can be crossed on foot or by land vehicle\n    {\n      name: \"ford\",\n      value: \"FORD\"\n    },\n    // T.FSR\tfissure\ta crack associated with volcanism\n    {\n      name: \"fissure\",\n      value: \"FSR\"\n    },\n    // T.GAP\tgap\ta low place in a ridge, not used for transportation\n    {\n      name: \"gap\",\n      value: \"GAP\"\n    },\n    // T.GRGE\tgorge(s)\ta short, narrow, steep-sided section of a stream valley\n    {\n      name: \"gorge\",\n      value: \"GRGE\"\n    },\n    // T.HDLD\theadland\ta high projection of land extending into a large body of water beyond the line of the coast\n    {\n      name: \"headland\",\n      value: \"HDLD\"\n    },\n    // T.HLL\thill\ta rounded elevation of limited extent rising above the surrounding land with local relief of less than 300m\n    {\n      name: \"hill\",\n      value: \"HLL\"\n    },\n    // T.HLLS\thills\trounded elevations of limited extent rising above the surrounding land with local relief of less than 300m\n    {\n      name: \"hills\",\n      value: \"HLLS\"\n    },\n    // T.HMCK\thammock(s)\ta patch of ground, distinct from and slightly above the surrounding plain or wetland. Often occurs in groups\n    {\n      name: \"hammock\",\n      value: \"HMCK\"\n    },\n    // T.HMDA\trock desert\ta relatively sand-free, high bedrock plateau in a hot desert, with or without a gravel veneer\n    {\n      name: \"rock desert\",\n      value: \"HMDA\"\n    },\n    // // T.INTF\tinterfluve\ta relatively undissected upland between adjacent stream valleys\n    // {\n    //     name: \"interfluve\",\n    //     value: \"INTF\",\n    // },\n    // T.ISL\tisland\ta tract of land, smaller than a continent, surrounded by water at high water\n    {\n      name: \"island\",\n      value: \"ISL\"\n    },\n    // T.ISLET\tislet\tsmall island, bigger than rock, smaller than island.\n    {\n      name: \"islet\",\n      value: \"ISLET\"\n    },\n    // T.ISLF\tartificial island\tan island created by landfill or diking and filling in a wetland, bay, or lagoon\n    {\n      name: \"artificial island\",\n      value: \"ISLF\"\n    },\n    // T.ISLM\tmangrove island\ta mangrove swamp surrounded by a waterbody\n    {\n      name: \"mangrove island\",\n      value: \"ISLM\"\n    },\n    // T.ISLS\tislands\ttracts of land, smaller than a continent, surrounded by water at high water\n    {\n      name: \"islands\",\n      value: \"ISLS\"\n    },\n    // T.ISLT\tland-tied island\ta coastal island connected to the mainland by barrier beaches, levees or dikes\n    {\n      name: \"land-tied island\",\n      value: \"ISLT\"\n    },\n    // // T.ISLX\tsection of island\n    // {\n    //     name: \"section of island\",\n    //     value: \"ISLX\",\n    // },\n    // T.ISTH\tisthmus\ta narrow strip of land connecting two larger land masses and bordered by water\n    {\n      name: \"isthmus\",\n      value: \"ISTH\"\n    },\n    // T.KRST\tkarst area\ta distinctive landscape developed on soluble rock such as limestone characterized by sinkholes, caves, disappearing streams, and underground drainage\n    {\n      name: \"karst\",\n      value: \"KRST\"\n    },\n    // T.LAVA\tlava area\tan area of solidified lava\n    {\n      name: \"lava\",\n      value: \"LAVA\"\n    },\n    // // T.LEV\tlevee\ta natural low embankment bordering a distributary or meandering stream; often built up artificially to control floods\n    // {\n    //     name: \"levee\",\n    //     value: \"LEV\",\n    // },\n    // T.MESA\tmesa(s)\ta flat-topped, isolated elevation with steep slopes on all sides, less extensive than a plateau\n    {\n      name: \"mesa\",\n      value: \"MESA\"\n    },\n    // T.MND\tmound(s)\ta low, isolated, rounded hill\n    {\n      name: \"mound\",\n      value: \"MND\"\n    },\n    // T.MRN\tmoraine\ta mound, ridge, or other accumulation of glacial till\n    {\n      name: \"moraine\",\n      value: \"MRN\"\n    },\n    // T.MT\tmountain\tan elevation standing high above the surrounding area with small summit area, steep slopes and local relief of 300m or more\n    {\n      name: \"mountain\",\n      value: \"MT\"\n    },\n    // T.MTS\tmountains\ta mountain range or a group of mountains or high ridges\n    {\n      name: \"mountains\",\n      value: \"MTS\"\n    },\n    // // T.NKM\tmeander neck\ta narrow strip of land between the two limbs of a meander loop at its narrowest point\n    // {\n    //     name: \"meander neck\",\n    //     value: \"NKM\",\n    // },\n    // T.NTK\tnunatak\ta rock or mountain peak protruding through glacial ice\n    {\n      name: \"nunatak\",\n      value: \"NTK\"\n    },\n    // T.NTKS\tnunataks\trocks or mountain peaks protruding through glacial ice\n    {\n      name: \"nunataks\",\n      value: \"NTKS\"\n    },\n    // T.PAN\tpan\ta near-level shallow, natural depression or basin, usually containing an intermittent lake, pond, or pool\n    {\n      name: \"pan\",\n      value: \"PAN\"\n    },\n    // T.PANS\tpans\ta near-level shallow, natural depression or basin, usually containing an intermittent lake, pond, or pool\n    {\n      name: \"pans\",\n      value: \"PANS\"\n    },\n    // T.PASS\tpass\ta break in a mountain range or other high obstruction, used for transportation from one side to the other [See also gap]\n    {\n      name: \"pass\",\n      value: \"PASS\"\n    },\n    // T.PEN\tpeninsula\tan elongate area of land projecting into a body of water and nearly surrounded by water\n    {\n      name: \"peninsula\",\n      value: \"PEN\"\n    },\n    // // T.PENX\tsection of peninsula\n    // {\n    //     name: \"section of peninsula\",\n    //     value: \"PENX\",\n    // },\n    // T.PK\tpeak\ta pointed elevation atop a mountain, ridge, or other hypsographic feature\n    {\n      name: \"peak\",\n      value: \"PK\"\n    },\n    // T.PKS\tpeaks\tpointed elevations atop a mountain, ridge, or other hypsographic features\n    {\n      name: \"peaks\",\n      value: \"PKS\"\n    },\n    // T.PLAT\tplateau\tan elevated plain with steep slopes on one or more sides, and often with incised streams\n    {\n      name: \"plateau\",\n      value: \"PLAT\"\n    },\n    // // T.PLATX\tsection of plateau\n    // {\n    //     name: \"section of plateau\",\n    //     value: \"PLATX\",\n    // },\n    // // T.PLDR\tpolder\tan area reclaimed from the sea by diking and draining\n    // {\n    //     name: \"polder\",\n    //     value: \"PLDR\",\n    // },\n    // T.PLN\tplain(s)\tan extensive area of comparatively level to gently undulating land, lacking surface irregularities, and usually adjacent to a higher area\n    {\n      name: \"plains\",\n      value: \"PLN\"\n    },\n    // // T.PLNX\tsection of plain\n    // {\n    //     name: \"section of plain\",\n    //     value: \"PLNX\",\n    // },\n    // T.PROM\tpromontory(-ies)\ta bluff or prominent hill overlooking or projecting into a lowland\n    {\n      name: \"promontory\",\n      value: \"PROM\"\n    },\n    // T.PT\tpoint\ta tapering piece of land projecting into a body of water, less prominent than a cape\n    {\n      name: \"point\",\n      value: \"PT\"\n    },\n    // T.PTS\tpoints\ttapering pieces of land projecting into a body of water, less prominent than a cape\n    {\n      name: \"points\",\n      value: \"PTS\"\n    },\n    // T.RDGB\tbeach ridge\ta ridge of sand just inland and parallel to the beach, usually in series\n    {\n      name: \"beach ridge\",\n      value: \"RDGB\"\n    },\n    // T.RDGE\tridge(s)\ta long narrow elevation with steep sides, and a more or less continuous crest\n    {\n      name: \"ridge\",\n      value: \"RDGE\"\n    },\n    // T.REG\tstony desert\ta desert plain characterized by a surface veneer of gravel and stones\n    {\n      name: \"stony desert\",\n      value: \"REG\"\n    },\n    // T.RK\trock\ta conspicuous, isolated rocky mass\n    {\n      name: \"rock\",\n      value: \"RK\"\n    },\n    // T.RKFL\trockfall\tan irregular mass of fallen rock at the base of a cliff or steep slope\n    {\n      name: \"rockfall\",\n      value: \"RKFL\"\n    },\n    // T.RKS\trocks\tconspicuous, isolated rocky masses\n    {\n      name: \"rocks\",\n      value: \"RKS\"\n    },\n    // T.SAND\tsand area\ta tract of land covered with sand\n    {\n      name: \"sand\",\n      value: \"SAND\"\n    },\n    // T.SBED\tdry stream bed\ta channel formerly containing the water of a stream\n    {\n      name: \"dry stream bed\",\n      value: \"SBED\"\n    },\n    // T.SCRP\tescarpment\ta long line of cliffs or steep slopes separating level surfaces above and below\n    {\n      name: \"escarpment\",\n      value: \"SCRP\"\n    },\n    // T.SDL\tsaddle\ta broad, open pass crossing a ridge or between hills or mountains\n    {\n      name: \"saddle\",\n      value: \"SDL\"\n    },\n    // T.SHOR\tshore\ta narrow zone bordering a waterbody which covers and uncovers at high and low water, respectively\n    {\n      name: \"shore\",\n      value: \"SHOR\"\n    },\n    // T.SINK\tsinkhole\ta small crater-shape depression in a karst area\n    {\n      name: \"sinkhole\",\n      value: \"SINK\"\n    },\n    // T.SLID\tslide\ta mound of earth material, at the base of a slope and the associated scoured area\n    {\n      name: \"slide\",\n      value: \"SLID\"\n    },\n    // T.SLP\tslope(s)\ta surface with a relatively uniform slope angle\n    {\n      name: \"slope\",\n      value: \"SLP\"\n    },\n    // T.SPIT\tspit\ta narrow, straight or curved continuation of a beach into a waterbody\n    {\n      name: \"spit\",\n      value: \"SPIT\"\n    },\n    // T.SPUR\tspur(s)\ta subordinate ridge projecting outward from a hill, mountain or other elevation\n    {\n      name: \"spur\",\n      value: \"SPUR\"\n    },\n    // T.TAL\ttalus slope\ta steep concave slope formed by an accumulation of loose rock fragments at the base of a cliff or steep slope\n    {\n      name: \"talus\",\n      value: \"TAL\"\n    },\n    // T.TRGD\tinterdune trough(s)\ta long wind-swept trough between parallel longitudinal dunes\n    {\n      name: \"interdune trough\",\n      value: \"TRGD\"\n    },\n    // T.TRR\tterrace\ta long, narrow alluvial platform bounded by steeper slopes above and below, usually overlooking a waterbody\n    {\n      name: \"terrace\",\n      value: \"TRR\"\n    },\n    // T.UPLD\tupland\tan extensive interior region of high land with low to moderate surface relief\n    {\n      name: \"upland\",\n      value: \"UPLD\"\n    },\n    // T.VAL\tvalley\tan elongated depression usually traversed by a stream\n    {\n      name: \"valley\",\n      value: \"VAL\"\n    },\n    // T.VALG\thanging valley\ta valley the floor of which is notably higher than the valley or shore to which it leads; most common in areas that have been glaciated\n    {\n      name: \"hanging valley\",\n      value: \"VALG\"\n    },\n    // T.VALS\tvalleys\telongated depressions usually traversed by a stream\n    {\n      name: \"valleys\",\n      value: \"VALS\"\n    },\n    // // T.VALX\tsection of valley\n    // {\n    //     name: \"section of valley\",\n    //     value: \"VALX\",\n    // },\n    // T.VLC\tvolcano\ta conical elevation composed of volcanic materials with a crater at the top\n    {\n      name: \"volcano\",\n      value: \"VLC\"\n    },\n    // =====================================================\n    // =====================================================\n    // U. UNDERSEA\n    // =====================================================\n    // =====================================================\n    {\n      name: \"\",\n      value: \"blank13\"\n    },\n    {\n      name: \"UNDERWATER\",\n      value: \"Underwater\"\n    },\n    {\n      name: \"\",\n      value: \"blank14\"\n    },\n    // // U.APNU\tapron\ta gentle slope, with a generally smooth surface, particularly found around groups of islands and seamounts\n    // {\n    //     name: \"apron\",\n    //     value: \"APNU\",\n    // },\n    // // U.ARCU\tarch\ta low bulge around the southeastern end of the island of Hawaii\n    // {\n    //     name: \"arch\",\n    //     value: \"ARCU\",\n    // },\n    // // U.ARRU\tarrugado\tan area of subdued corrugations off Baja California\n    // {\n    //     name: \"arrugado\",\n    //     value: \"ARRU\",\n    // },\n    // // U.BDLU\tborderland\ta region adjacent to a continent, normally occupied by or bordering a shelf, that is highly irregular with depths well in excess of those typical of a shelf\n    // {\n    //     name: \"underwater borderland\",\n    //     value: \"BDLU\",\n    // },\n    // U.BKSU\tbanks\televations, typically located on a shelf, over which the depth of water is relatively shallow but sufficient for safe surface navigation\n    {\n      name: \"underwater banks\",\n      value: \"BKSU\"\n    },\n    // U.BNKU\tbank\tan elevation, typically located on a shelf, over which the depth of water is relatively shallow but sufficient for safe surface navigation\n    {\n      name: \"underwater bank\",\n      value: \"BNKU\"\n    },\n    // // U.BSNU\tbasin\ta depression more or less equidimensional in plan and of variable extent\n    // {\n    //     name: \"underwater basin\",\n    //     value: \"BSNU\",\n    // },\n    // U.CDAU\tcordillera\tan entire mountain system including the subordinate ranges, interior plateaus, and basins\n    {\n      name: \"underwater cordillera\",\n      value: \"CDAU\"\n    },\n    // // U.CNSU\tcanyons\trelatively narrow, deep depressions with steep sides, the bottom of which generally has a continuous slope\n    // {\n    //     name: \"underwater canyons\",\n    //     value: \"CNSU\",\n    // },\n    // // U.CNYU\tcanyon\ta relatively narrow, deep depression with steep sides, the bottom of which generally has a continuous slope\n    // {\n    //     name: \"underwater canyon\",\n    //     value: \"CNYU\",\n    // },\n    // // U.CRSU\tcontinental rise\ta gentle slope rising from oceanic depths towards the foot of a continental slope\n    // {\n    //     name: \"continental rise\",\n    //     value: \"CRSU\",\n    // },\n    // U.DEPU\tdeep\ta localized deep area within the confines of a larger feature, such as a trough, basin or trench\n    {\n      name: \"deep\",\n      value: \"DEPU\"\n    },\n    // U.EDGU\tshelf edge\ta line along which there is a marked increase of slope at the outer margin of a continental shelf or island shelf\n    {\n      name: \"underwater shelf\",\n      value: \"EDGU\"\n    },\n    // // U.ESCU\tescarpment (or scarp)\tan elongated and comparatively steep slope separating flat or gently sloping areas\n    // {\n    //     name: \"underwater escarpment\",\n    //     value: \"ESCU\",\n    // },\n    // // U.FANU\tfan\ta relatively smooth feature normally sloping away from the lower termination of a canyon or canyon system\n    // {\n    //     name: \"underwater fan\",\n    //     value: \"FANU\",\n    // },\n    // U.FLTU\tflat\ta small level or nearly level area\n    {\n      name: \"underwater flat\",\n      value: \"FLTU\"\n    },\n    // // U.FRZU\tfracture zone\tan extensive linear zone of irregular topography of the sea floor, characterized by steep-sided or asymmetrical ridges, troughs, or escarpments\n    // {\n    //     name: \"fracture zone\",\n    //     value: \"FRZU\",\n    // },\n    // // U.FURU\tfurrow\ta closed, linear, narrow, shallow depression\n    // {\n    //     name: \"underwater furrow\",\n    //     value: \"FURU\",\n    // },\n    // U.GAPU\tgap\ta narrow break in a ridge or rise\n    {\n      name: \"underwater gap\",\n      value: \"GAPU\"\n    },\n    // // U.GLYU\tgully\ta small valley-like feature\n    // {\n    //     name: \"underwater gully\",\n    //     value: \"GLYU\",\n    // },\n    // U.HLLU\thill\tan elevation rising generally less than 500 meters\n    {\n      name: \"underwater hill\",\n      value: \"HLLU\"\n    },\n    // U.HLSU\thills\televations rising generally less than 500 meters\n    {\n      name: \"underwater hills\",\n      value: \"HLSU\"\n    },\n    // U.HOLU\thole\ta small depression of the sea floor\n    {\n      name: \"underwater hole\",\n      value: \"HOLU\"\n    },\n    // U.KNLU\tknoll\tan elevation rising generally more than 500 meters and less than 1,000 meters and of limited extent across the summit\n    {\n      name: \"underwater knoll\",\n      value: \"KNLU\"\n    },\n    // U.KNSU\tknolls\televations rising generally more than 500 meters and less than 1,000 meters and of limited extent across the summits\n    {\n      name: \"underwater knolls\",\n      value: \"KNSU\"\n    },\n    // U.LDGU\tledge\ta rocky projection or outcrop, commonly linear and near shore\n    {\n      name: \"underwater ledge\",\n      value: \"LDGU\"\n    },\n    // // U.LEVU\tlevee\tan embankment bordering a canyon, valley, or seachannel\n    // {\n    //     name: \"underwater levee\",\n    //     value: \"LEVU\",\n    // },\n    // U.MESU\tmesa\tan isolated, extensive, flat-topped elevation on the shelf, with relatively steep sides\n    {\n      name: \"underwater mesa\",\n      value: \"MESU\"\n    },\n    // U.MNDU\tmound\ta low, isolated, rounded hill\n    {\n      name: \"underwater mound\",\n      value: \"MNDU\"\n    },\n    // U.MOTU\tmoat\tan annular depression that may not be continuous, located at the base of many seamounts, islands, and other isolated elevations\n    {\n      name: \"underwater moat\",\n      value: \"MOTU\"\n    },\n    // U.MTU\tmountain\ta well-delineated subdivision of a large and complex positive feature\n    {\n      name: \"underwater mountain\",\n      value: \"MTU\"\n    },\n    // U.PKSU\tpeaks\tprominent elevations, part of a larger feature, either pointed or of very limited extent across the summit\n    {\n      name: \"underwater peaks\",\n      value: \"PKSU\"\n    },\n    // U.PKU\tpeak\ta prominent elevation, part of a larger feature, either pointed or of very limited extent across the summit\n    {\n      name: \"underwater peak\",\n      value: \"PKU\"\n    },\n    // // U.PLNU\tplain\ta flat, gently sloping or nearly level region\n    // {\n    //     name: \"underwater plain\",\n    //     value: \"PLNU\",\n    // },\n    // U.PLTU\tplateau\ta comparatively flat-topped feature of considerable extent, dropping off abruptly on one or more sides\n    {\n      name: \"underwater plateau\",\n      value: \"PLTU\"\n    },\n    // U.PNLU\tpinnacle\ta high tower or spire-shaped pillar of rock or coral, alone or cresting a summit\n    {\n      name: \"underwater pinncale\",\n      value: \"PNLU\"\n    },\n    // // U.PRVU\tprovince\ta region identifiable by a group of similar physiographic features whose characteristics are markedly in contrast with surrounding areas\n    // {\n    //     name: \"underwater province\",\n    //     value: \"PRVU\",\n    // },\n    // U.RDGU\tridge\ta long narrow elevation with steep sides\n    {\n      name: \"underwater ridge\",\n      value: \"RDGU\"\n    },\n    // U.RDSU\tridges\tlong narrow elevations with steep sides\n    {\n      name: \"underwater ridges\",\n      value: \"RDSU\"\n    },\n    // U.RFSU\treefs\tsurface-navigation hazards composed of consolidated material\n    {\n      name: \"reefs\",\n      value: \"RFSU\"\n    },\n    // U.RFU\treef\ta surface-navigation hazard composed of consolidated material\n    {\n      name: \"reef\",\n      value: \"RFU\"\n    },\n    // // U.RISU\trise\ta broad elevation that rises gently, and generally smoothly, from the sea floor\n    // {\n    //     name: \"underwater rise\",\n    //     value: \"RISE\",\n    // },\n    // // U.SCNU\tseachannel\ta continuously sloping, elongated depression commonly found in fans or plains and customarily bordered by levees on one or two sides\n    // {\n    //     name: \"seachannel\",\n    //     value: \"SCNU\",\n    // },\n    // // U.SCSU\tseachannels\tcontinuously sloping, elongated depressions commonly found in fans or plains and customarily bordered by levees on one or two sides\n    // {\n    //     name: \"seachannels\",\n    //     value: \"SCSU\",\n    // },\n    // // U.SDLU\tsaddle\ta low part, resembling in shape a saddle, in a ridge or between contiguous seamounts\n    // {\n    //     name: \"underwater saddle\",\n    //     value: \"SDLU\",\n    // },\n    // U.SHFU\tshelf\ta zone adjacent to a continent (or around an island) that extends from the low water line to a depth at which there is usually a marked increase of slope towards oceanic depths\n    {\n      name: \"underwater shelf\",\n      value: \"SHFU\"\n    },\n    // U.SHLU\tshoal\ta surface-navigation hazard composed of unconsolidated material\n    {\n      name: \"shoal\",\n      value: \"SHLU\"\n    },\n    // U.SHSU\tshoals\thazards to surface navigation composed of unconsolidated material\n    {\n      name: \"shoals\",\n      value: \"SHSU\"\n    },\n    // U.SHVU\tshelf valley\ta valley on the shelf, generally the shoreward extension of a canyon\n    {\n      name: \"underwater shelf valley\",\n      value: \"SHVU\"\n    },\n    // // U.SILU\tsill\tthe low part of a gap or saddle separating basins\n    // {\n    //     name: \"sill\",\n    //     value: \"SILU\",\n    // },\n    // // U.SLPU\tslope\tthe slope seaward from the shelf edge to the beginning of a continental rise or the point where there is a general reduction in slope\n    // {\n    //     name: \"underwater slope\",\n    //     value: \"SLPU\",\n    // },\n    // U.SMSU\tseamounts\televations rising generally more than 1,000 meters and of limited extent across the summit\n    {\n      name: \"seamounts\",\n      value: \"SMSU\"\n    }, // U.SMU\tseamount\tan elevation rising generally more than 1,000 meters and of limited extent across the summit\n    {\n      name: \"seamount\",\n      value: \"SMU\"\n    },\n    // // U.SPRU\tspur\ta subordinate elevation, ridge, or rise projecting outward from a larger feature\n    // {\n    //     name: \"underwater spur\",\n    //     value: \"SPRU\",\n    // },\n    // // U.TERU\tterrace\ta relatively flat horizontal or gently inclined surface, sometimes long and narrow, which is bounded by a steeper ascending slope on one side and by a steep descending slope on the opposite side\n    // {\n    //     name: \"underwater terrace\",\n    //     value: \"TERU\",\n    // },\n    // U.TMSU\ttablemounts (or guyots)\tseamounts having a comparatively smooth, flat top\n    {\n      name: \"tablemounts (guyots)\",\n      value: \"TMSU\"\n    },\n    // U.TMTU\ttablemount (or guyot)\ta seamount having a comparatively smooth, flat top\n    {\n      name: \"tablemount (guyot)\",\n      value: \"TMTU\"\n    },\n    // U.TNGU\ttongue\tan elongate (tongue-like) extension of a flat sea floor into an adjacent higher feature\n    // {\n    //     name: \"underwater tounge\",\n    //     value: \"TNGU\",\n    // },\n    // // U.TRGU\ttrough\ta long depression of the sea floor characteristically flat bottomed and steep sided, and normally shallower than a trench\n    // {\n    //     name: \"underwater trough\",\n    //     value: \"TRGU\",\n    // },\n    // U.TRNU\ttrench\ta long, narrow, characteristically very deep and asymmetrical depression of the sea floor, with relatively steep sides\n    {\n      name: \"underwater trench\",\n      value: \"TRNU\"\n    },\n    // U.VALU\tvalley\ta relatively shallow, wide depression, the bottom of which usually has a continuous gradient\n    {\n      name: \"underwater valley\",\n      value: \"VALU\"\n    },\n    // U.VLSU\tvalleys\ta relatively shallow, wide depression, the bottom of which usually has a continuous gradient\n    {\n      name: \"underwater valleys\",\n      value: \"VLSU\"\n    },\n    // =====================================================\n    // =====================================================\n    // V. FOREST, HEATH, ...\n    // =====================================================\n    // =====================================================\n    {\n      name: \"\",\n      value: \"blank15\"\n    },\n    {\n      name: \"FOREST + HEATH\",\n      value: \"ForestAndHeath\"\n    },\n    {\n      name: \"\",\n      value: \"blank16\"\n    },\n    // V.BUSH\tbush(es)\ta small clump of conspicuous bushes in an otherwise bare area\n    {\n      name: \"bushes\",\n      value: \"BUSH\"\n    },\n    // V.CULT\tcultivated area\tan area under cultivation\n    {\n      name: \"cultivated\",\n      value: \"CULT\"\n    },\n    // V.FRST\tforest(s)\tan area dominated by tree vegetation\n    {\n      name: \"forests\",\n      value: \"FRST\"\n    },\n    // V.FRSTF\tfossilized forest\ta forest fossilized by geologic processes and now exposed at the earth's surface\n    {\n      name: \"fossilized forest\",\n      value: \"FRSTF\"\n    },\n    // V.GROVE\tgrove\ta small wooded area or collection of trees growing closely together, occurring naturally or deliberately planted\n    {\n      name: \"grove\",\n      value: \"GROVE\"\n    },\n    // V.GRSLD\tgrassland\tan area dominated by grass vegetation\n    {\n      name: \"grassland\",\n      value: \"GRSLD\"\n    },\n    // V.GRVC\tcoconut grove\ta planting of coconut trees\n    {\n      name: \"coconut grove\",\n      value: \"GRVC\"\n    },\n    // V.GRVO\tolive grove\ta planting of olive trees\n    {\n      name: \"olive grove\",\n      value: \"GRVO\"\n    },\n    // V.GRVP\tpalm grove\ta planting of palm trees\n    {\n      name: \"palm grove\",\n      value: \"GRVP\"\n    },\n    // V.GRVPN\tpine grove\ta planting of pine trees\n    {\n      name: \"pine grove\",\n      value: \"GRVPN\"\n    },\n    // V.HTH\theath\tan upland moor or sandy area dominated by low shrubby vegetation including heather\n    {\n      name: \"heath\",\n      value: \"HTH\"\n    },\n    // V.MDW\tmeadow\ta small, poorly drained area dominated by grassy vegetation\n    {\n      name: \"meadow\",\n      value: \"MDW\"\n    },\n    // V.OCH\torchard(s)\ta planting of fruit or nut trees\n    {\n      name: \"orchards\",\n      value: \"OCH\"\n    },\n    // V.SCRB\tscrubland\tan area of low trees, bushes, and shrubs stunted by some environmental limitation\n    {\n      name: \"scrubland\",\n      value: \"SCRB\"\n    },\n    // V.TREE\ttree(s)\ta conspicuous tree used as a landmark\n    {\n      name: \"trees\",\n      value: \"TREE\"\n    },\n    // V.TUND\ttundra\ta marshy, treeless, high latitude plain, dominated by mosses, lichens, and low shrub vegetation under permafrost conditions\n    {\n      name: \"tundra\",\n      value: \"TUND\"\n    },\n    // V.VIN\tvineyard\ta planting of grapevines\n    {\n      name: \"vineyard\",\n      value: \"VIN\"\n    },\n    // V.VINS\tvineyards\tplantings of grapevines\n    {\n      name: \"vineyards\",\n      value: \"VINS\"\n    }\n  ]\n};\n","// Header component\n\nimport React from \"react\";\nimport \"./style.css\";\n\n// returns a Bootstrap \"jumbotron\" class <div> with inline CSS\n// has a {children} param so other components can exist within its open and close tags\nfunction Header({ children }) {\n  return (\n    <div\n      style={{ clear: \"both\", paddingTop: 20, textAlign: \"center\", backgroundColor: \"#eee\" }}\n      className=\"px-0 mx-0\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Header;\n","// Background component\n\nimport React from \"react\";\nimport \"./style.css\";\n\n// returns a Bootstrap \"jumbotron\" class <div> with inline CSS\n// has a {children} param so other components can exist within its open and close tags\nfunction Background({ children }) {\n  return <div id=\"photo\">{children}</div>;\n}\n\nexport default Background;\n","import React from \"react\";\n\n// Exports the Container, Row, and Col components\n\n// Container component creates a Bootstrap container or container-fluid\n// Container can be either <Container> or <Container fluid>\n// Container can contain child elements between it's open and close tags {children}\nexport function Container({ fluid, children }) {\n  // if <Container fluid> then return <div class=\"container-fluid\"> ... </div>\n  // otherwise return <div class=\"container\"> ... </div>\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// Row component lets us use a Bootstrap row without having to think about class names\n// !!! row-fluid is OLD BOOTSTRAP (2.x), no class=\"row-fluid\" in Bootstrap 4\nexport function Row({ children }) {\n  return <div className={\"row mt-2\"}>{children}</div>;\n  // return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// Col component lets us size Bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\n\n// example to demo what can be done to create custom Component properties\n// make the class (className) the value of size (md-12 lg-6) or whatever\n// and split into an array at spaces \" \", so [\"md-12\", \"lg-6\"]\n// then do a map on that array, calling each element \"size\" (BAD CODE! CONFUSING)\n// and have the map create a new array with \"col-\" tacked onto each element, so\n// [\"col-md-12\", \"col-lg-6\"] is the new mapped array,\n// then .join that array back into a space \" \" separated string: \"col-md-12 col-lg-6\"\n// so that <div className=\"col-md-12 col-lg-6\"> {children} </div> is returned\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","// Search contains SelectRegion and SelectFeature components\n\nimport React from \"react\";\nimport \"./style.css\";\n\n// ===================================================================\n// SelectRegion component\n// ===================================================================\n\nexport function SelectRegion(props) {\n  // console.log(props.list);\n  // console.log(props.thisRegion);\n\n  return (\n    <>\n      <select name=\"countryAndRegion\" className=\"custom-select\" onChange={props.thisRegion}>\n        {props.list.map(region => (\n          // where every region gets an <option> element with a key for React\n          <option value={region.value} key={region.value}>\n            {region.name}\n          </option>\n        ))}\n      </select>\n      <div className=\"input-group-append\">\n        <span className=\"input-group-text\" style={{ width: \"5rem\" }}>\n          region\n        </span>\n      </div>\n    </>\n  );\n}\n\n// ===================================================================\n// SelectFeature component\n// ===================================================================\n\nexport function SelectFeature(props) {\n  // console.log(props.list);\n\n  return (\n    <>\n      <select name=\"featureCode\" className=\"custom-select\" onChange={props.thisFeature}>\n        {props.list.map(feature => (\n          // where every feature gets an <option> element with a key for React\n          <option value={feature.value} key={feature.value}>\n            {feature.name}\n          </option>\n        ))}\n      </select>\n      <div className=\"input-group-append\">\n        <button className=\"input-group-text btn btn-primary\" style={{ width: \"5rem\" }}\n        onClick={props.findFeature}>\n          search\n        </button>\n      </div>\n    </>\n  );\n}\n","// CardsContainer, ResultCard and NoResultCard components\n// card to hold a found place's search result details\nimport React from \"react\";\nimport \"./style.css\";\n\n// ===================================================================\n// cards CONTAINER\n// ===================================================================\n\nexport function CardsContainer({ fluid, children }) {\n  return (\n    <div className=\"container\" style={{ paddingTop: 20, paddingRight: 6, paddingLeft: 6, textAlign: \"center\" }}>\n      {children}\n    </div>\n  );\n}\n\n// ===================================================================\n// SEARCH RESULTS card\n// ===================================================================\n\nexport function ResultCard(props) {\n  return (\n    <>\n      <div className=\"card border-secondary mb-3\">\n        {/* CARD TOP SECTION */}\n        <div className=\"card-header text-primary text-left p-1\">\n          {/* FEATURE NAME (FEATURE TYPE) : COUNTRY */}\n          <h5 className=\"pl-1\" style={{ display: \"inline\" }}>\n            {/* Google search: FEATURE NAME */}\n            <a\n              // href={`https://www.google.com/search?q=Ensenada Mogotes`}\n              href={`https://www.google.com/search?q=${props.featureName}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ color: \"rgb(121, 27, 27)\", fontWeight: 500, textDecoration: \"none\" }}\n            >\n              {props.featureName}\n              {/* Ensenada Mogotes */}\n              {/* ${card.featureName} */}\n            </a>\n            {/* Google search: FEATURE TYPE */}\n            <a\n              // href={`https://www.google.com/search?q=bay`}\n              href={`https://www.google.com/search?q=${props.featureType}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ color: \"rgb(162, 155, 99)\", fontWeight: 100, textDecoration: \"none\" }}\n            >\n              &nbsp;{props.featureType}&nbsp;\n              {/* &nbsp;(bay)&nbsp; */}\n              {/* ${card.featureType} */}\n            </a>\n            {/* Google search: COUNTRY */}\n            <a\n              // href={`https://www.google.com/search?q=Argentina`}\n              href={`https://www.google.com/search?q=${props.featureCountryName}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ color: \"rgb(29, 68, 126)\", fontWeight: 300, textDecoration: \"none\" }}\n            >\n              :&nbsp;{props.featureCountryName}\n              {/* :&nbsp;Argentina */}\n              {/* ${card.featureCountryName} */}\n            </a>\n          </h5>\n          {/* LONGITUDE AND LATITUDE */}\n          <span className=\"font-weight-light pr-1\" style={{ display: \"inline\", float: \"right\" }}>\n            {/* GoogleMaps feature location */}\n            <a\n              // href={`https://www.google.com/maps/@-38.13333,-57.56667,15z`}\n              href={`https://www.google.com/maps/@${props.featureLatitude},${props.featureLongitude},12z`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ color: \"rgb(29, 68, 126)\", textDecoration: \"none\" }}\n            >\n              {props.featureLatitude}, {props.featureLongitude}\n              {/* -38.13333, -57.56667 */}\n              {/* ${card.featureLatitude}, ${card.featureLongitude} */}\n            </a>\n          </span>\n        </div>\n        {/* CARD BOTTOM SECTION */}\n        <div className=\"card-body p-1 pl-2 text-left\">\n          {/* NEARPLACENAME COUNTRYCODE POSTALCODE (DISTANCE km) */}\n          <span className=\"font-weight-light\">\n            {/* GoogleMaps directions from nearest city to feature */}\n            <a\n              // ${card.nearPlaceLatLong}\n              // href={`https://www.google.com/maps/dir/?api=1&origin=-38.1167,-57.6&destination=-38.13333,-57.56667`}\n              href={`https://www.google.com/maps/dir/?api=1&origin=${props.nearPlaceLatLong}&destination=${props.featureLatitude},${\n                props.featureLongitude\n              }`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ color: \"rgb(29, 68, 126)\", textDecoration: \"none\" }}\n            >\n              {props.nearPlaceName}&nbsp;\n              {/* LOS ACANTILADOS&nbsp; */}\n              {/* ${card.nearPlaceName}  */}\n              {props.nearPlaceCountryCode}&nbsp;\n              {/* AR&nbsp; */}\n              {/* ${card.nearPlaceCountryCode}   */}\n              {props.nearPlacePostalCode}&nbsp;\n              {/* 7609&nbsp; */}\n              {/* ${card.nearPlacePostalCode}   */}({props.nearPlaceDistance} km)\n              {/* (3.5 km) */}\n              {/* (${card.nearPlaceDistance} km) */}\n            </a>\n          </span>\n          {/* Wigle WIFI MAP */}\n          <a\n            // href={`https://wigle.net/map?maplat=-38.13333&maplon=-57.56666999999999&mapzoom=12&coloring=density`}\n            href={`https://wigle.net/map?maplat=${props.featureLatitude}&maplon=${\n              props.featureLongitude\n            }&mapzoom=12&mapstyle=standard&coloring=density`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i\n              className=\"float-right fas fa-wifi\"\n              style={{ fontSize: \"15px\", marginLeft: 2, marginRight: 4, paddingTop: 4, color: \"rgb(51, 103, 181)\" }}\n            />\n            <span className=\"float-right\" style={{ color: \"rgb(51, 103, 181)\" }}>\n              {props.nearPlaceWifi}\n              {/* 3k */}\n              {/* ${card.nearPlaceWifi} */}\n            </span>\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n\n// ===================================================================\n// NO RESULTS card\n// ===================================================================\n\nexport function NoResultCard({ children }) {\n  return (\n    <div className=\"card border-dark mb-3\">\n      <div className=\"card-header p-2\">\n        <p className=\"mb-0\" style={{ color: \"rgb(29, 68, 126)\" }}>\n          Sorry, no matching features found in that area.\n        </p>\n      </div>\n    </div>\n  );\n}\n","// Home page view Component called by React Router in the App.js Router Switch Routes\n// Home page is available to all users (?)\n\nimport React, { Component } from \"react\";\n// use a <Link> tag in place of <a href> to link to another page view with React Router\n// import { Link } from \"react-router-dom\";\n\n// import list object arrays for Countries/Regions and Feature types\nimport ListRegions from \"../utils/ListRegions\";\nimport ListFeatures from \"../utils/ListFeatures\";\n\n// import single-component .js files\nimport Header from \"../components/Header\";\nimport Background from \"../components/Background\";\n// import DeleteBtn from \"../components/DeleteBtn\";\n// import Jumbotron from \"../components/Jumbotron\";\n\n// import multiple-component .js files\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { SelectRegion, SelectFeature } from \"../components/Search\";\nimport { CardsContainer, ResultCard, NoResultCard } from \"../components/Cards\";\n// import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n\n// import master style.css for all page views\nimport \"./style.css\";\n\n// import API in order to make axios API calls to the Express Server\n// import API from \"../utils/API\";\n\n// use axios to make XMLHttpRequest API calls\nimport axios from \"axios\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countryAndRegion: \"\",\n      countryCC: \"\",\n      regionCC: \"\",\n      featureCode: \"\",\n      listRegions: ListRegions.countryArray,\n      listFeatures: ListFeatures.featureArray,\n      featureName: \"Ensenada Mogotes\",\n      featureType: \"bay\",\n      featureCountryCode: \"AR\",\n      featureLatitude: \"-38.13333\",\n      featureLongitude: \"-57.56667\",\n      featureLocation: \"\",\n      featureCountryName: \"Argentina\",\n      nearPlaceName: \"LOS ACANTILADOS\",\n      nearPlacePostalCode: \"7609\",\n      nearPlaceCountryCode: \"AR\",\n      nearPlaceCountryName: \"Argentina\",\n      nearPlaceDistance: \"3.5\",\n      nearPlaceLatLong: \"-38.1167,-57.6\",\n      nearPlaceWifi: \"wifi map\"\n    };\n  }\n\n  // ===================================================\n\n  componentDidUpdate() {\n    // console.log(this.state.regionCC);\n  }\n  // ===================================================\n\n  componentDidMount() {\n    // this.loadBooks();\n    // console.log(this.state);\n  }\n  // ===================================================\n\n  // send live typed input data to this.state.title, .author, .synopsis on each keystroke\n  handleInputChange = event => {\n    // create variables name and value for event.target.name and event.target.value\n    const { name, value } = event.target;\n    // use setState to change state values of the state key [name] for whichever property\n    // if selecting a country or region, also set the Country Code and Region Codes\n    if (name === \"countryAndRegion\") {\n      this.setState({\n        [name]: value,\n        countryCC: value.substring(0, 2),\n        regionCC: value.substring(2, 4)\n      });\n    } else {\n      this.setState({\n        [name]: value\n      });\n    }\n  };\n\n  // ===================================================\n\n  geonamesString = () => {\n    if (this.state.featureCode) {\n      let geoString;\n      if (this.state.countryCC === \"XX\") {\n        geoString = `https://secure.geonames.org/searchJSON?featureCode=${this.state.featureCode}&maxRows=1000&username=ghostfountain`;\n        return geoString;\n      } else if (this.state.regionCC === \"\") {\n        geoString = `https://secure.geonames.org/searchJSON?featureCode=${this.state.featureCode}&country=${\n          this.state.countryCC\n        }&maxRows=1000&username=ghostfountain`;\n        return geoString;\n      } else {\n        geoString = `https://secure.geonames.org/searchJSON?featureCode=${this.state.featureCode}&country=${this.state.countryCC}&adminCode1=${\n          this.state.regionCC\n        }&maxRows=1000&username=ghostfountain`;\n        return geoString;\n      }\n      // console.log(geoString);\n    } else {\n      alert(\"Please select a feature type.\");\n    }\n  };\n\n  // ===================================================\n\n  // when user hits the submit button to add a new book,\n  handleFormSubmit = event => {\n    // prevent page reload default behavior of \"submit\"\n    event.preventDefault();\n\n    // test geonamesString()\n    // console.log(this.geonamesString());\n\n    // call geonamesString to construct with current info,\n    // and have axios make the XMLHttpRequest GET call to geoNames API\n    axios\n      .get(this.geonamesString())\n      .then(response => {\n        // console.log(response.data);\n\n        if (response.data.totalResultsCount === 0) {\n          // buildNoResults();\n          console.log(\"Sorry, no results!\");\n        } else {\n          // console.log(response.data.totalResultsCount);\n          // console.log(response.data.geonames);\n\n          // get number of results up to 1000 (set as 1000 if more than 1000)\n          let maxNumber = Math.min(response.data.totalResultsCount, 1000);\n\n          // get a random number from the range of number of results returned\n          let random = Math.floor(Math.random() * maxNumber);\n          // console.log(random);\n\n          // use the random number to select one result from the returned data\n          let theFeature = response.data.geonames[random];\n          // console.log(theFeature);\n\n          this.setState({\n            featureName: theFeature.name,\n            featureType: theFeature.fcodeName,\n            featureCountryCode: theFeature.countryCode,\n            featureLatitude: theFeature.lat,\n            featureLongitude: theFeature.lng,\n            featureLocation: theFeature.fclName\n          });\n\n          if (theFeature.countryName) {\n            this.setState({\n              featureCountryName: theFeature.countryName\n            });\n          } else {\n            this.setState({ featureCountryName: \"\" });\n          }\n        }\n        // });\n      })\n      .then(() => {\n        this.getPostalCodes();\n        // console.log(\"monkeypants\");\n      });\n  };\n\n  // ===========================================================================\n  // GET CLOSEST POSTAL CODE TO FEATURE LOCATION and NEARBY PLACE\n  // LAT+LONG COORDINATES FROM EZCMD API (limit 10,000 calls/month)\n  // ===========================================================================\n\n  getPostalCodes = () => {\n    // build API string for EZCMD postal code search\n    let ezcmdPostalCodes = `https://ezcmd.com/apps/api_geo_postal_codes/nearby_locations_by_coords/866eaf56be3781d02011b80ebd0baef8/354?coords=${\n      this.state.featureLatitude\n    },${this.state.featureLongitude}&within=100&unit=Km`;\n\n    // and have axios make the XMLHttpRequest GET call to EZCMD API\n    axios.get(ezcmdPostalCodes).then(response => {\n      // console.log(response.data);\n      console.log(response.data.search_results[0]);\n\n      if (response.data.search_results.length > 0) {\n        this.setState({\n          nearPlaceName: response.data.search_results[0].place_name.trim(),\n          nearPlacePostalCode: response.data.search_results[0].postal_code,\n          nearPlaceCountryCode: response.data.search_results[0].country_code,\n          nearPlaceCountryName: response.data.search_results[0].country_name,\n          nearPlaceDistance: Math.round(response.data.search_results[0].distance * 10) / 10,\n          nearPlaceLatLong: response.data.search_results[0].coords\n        });\n\n        this.getHotspots();\n      } else if (this.state.featureLocation) {\n        this.setState({\n          nearPlaceName: this.state.featureLocation,\n          nearPlacePostalCode: \"\",\n          nearPlaceCountryCode: this.state.featureCountryCode,\n          nearPlaceCountryName: this.state.featureCountryName,\n          nearPlaceDistance: \"?\",\n          nearPlaceLatLong: \"\"\n        });\n\n        this.getHotspots();\n      } else {\n        this.getHotspots();\n        console.log(\"CLOSEST CITY: no info\");\n      }\n    });\n  };\n\n  // ===================================================\n\n  // ===========================================================================\n  // GET # OF WIFI HOTSPOTS BY POSTAL CODE FROM WIGLE API (service is beta, no set limits)\n  // ===========================================================================\n\n  // // mini function to format thousands of WiFi numbers to k format\n  // kFormatter = num => {\n  //   return num > 999 ? (num / 1000).toFixed(1) + \"k\" : num;\n  // };\n\n  getHotspots = () => {\n    let wigleHotspots = `https://api.wigle.net/api/v2/stats/regions?country=${this.state.nearPlaceCountryCode}`;\n    // console.log(this.state.nearPlaceCountryCode);\n    // console.log(\"this.state.nearPlaceCountryCode\");\n    // console.log(this.state.nearPlaceCountryCode);\n\n    // and have axios make the XMLHttpRequest GET call to EZCMD API\n    axios\n      .get(wigleHotspots, {\n        headers: {\n          Authorization: \"Basic \" + btoa(\"AID544c0365fdcc8c2463ec21d3590bbd23:8891f56fb22400d107dd8ee49d2798ff\")\n        }\n      })\n      .then(response => {\n        // console.log(response.data);\n        // console.log(response.data.postalCode[0]);\n        // console.log(this.state.nearPlacePostalCode);\n\n        // mini function to format thousands of WiFi numbers to k format\n        let kFormatter = num => {\n          return num > 999 ? (num / 1000).toFixed(1) + \"k\" : num;\n        };\n\n        for (let k = 0; k < response.data.postalCode.length; k++) {\n          let PostalCode = response.data.postalCode[k].postalCode;\n          let wifiCountK = kFormatter(response.data.postalCode[k].count);\n\n          // console.log(wifiCountK);\n          // console.log(PostalCode);\n          // console.log(this.state.nearPlacePostalCode);\n\n          if (PostalCode === this.state.nearPlacePostalCode) {\n            console.log(\"It's a match:\");\n            console.log(wifiCountK);\n            console.log(this.state.nearPlaceCountryCode);\n\n            this.setState({\n              nearPlaceWifi: wifiCountK\n            });\n          }\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // buildCard();\n  };\n\n  // ===================================================\n\n  // call client/src/utils/API.js to make API.saveBook(bookData) axios API call\n  // and send current this.state.title, .author, and .synopsis values\n  // as the req.body (bookData) of the axios API POST call to /api/books\n  // API.saveBook({\n  //   title: this.state.title,\n  //   author: this.state.author,\n  //   synopsis: this.state.synopsis\n  // })\n  //   // after async operation completes, call loadBooks() to get updated book list\n  //   .then(res => this.loadBooks())\n  //   .catch(err => console.log(err));\n\n  // ===================================================\n\n  // call client/src/utils/API.js to make API.getBooks() axios API route call\n  // loads all books data in the db into this.state.books\n  // and also clear all existing data in this.state.title, .author, and .synopsis\n\n  loadBooks = () => {\n    //   API.getBooks()\n    //     .then(res => this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" }))\n    //     .catch(err => console.log(err));\n  };\n\n  // ===================================================\n\n  // when this.deleteBook(id) is called,\n  // call client/src/utils/API.js to make API.deleteBook(id) axios API route call\n  // and then call this.loadBooks() above to refresh all book data in state\n\n  deleteBook = id => {\n    //   API.deleteBook(id)\n    //     .then(res => this.loadBooks())\n    //     .catch(err => console.log(err));\n  };\n\n  // ===================================================\n\n  render() {\n    return (\n      <>\n        {/* <Container fluid > */}\n        <Background>\n          {/* logo and intro text header */}\n          <Header>\n            <Row>\n              <Col size=\"sm-6 md-4\">\n                <img src=\"assets/images/dinofii_logo.svg\" style={{ width: \"90%\", maxHeight: 150, padding: \"1px 1px 1px 1px\" }} alt=\"Dinofii logo\" />\n              </Col>\n              <Col size=\"sm-6 md-8\">\n                <div style={{ fontWeight: \"100\", color: \"#444\", textAlign: \"left\", padding: \"0px 30px 30px 0px\" }}>\n                  <span style={{ fontWeight: \"700\", color: \"rgb(121, 27, 27)\" }}>FIND NEW PLACES TO EXPLORE.</span> Select a feature and choose an\n                  area to search. Dinofii gives you a random point of interest and the closest city, as well as links to info, maps, directions, and\n                  local wifi.\n                </div>\n              </Col>\n            </Row>\n          </Header>\n\n          {/* Search Options Pulldown Selects */}\n          <Container>\n            {/* <Container fluid> */}\n            <form action=\"\">\n              <Row>\n                <div className=\"col-sm-6 p-2\">\n                  <div className=\"input-group\">\n                    <SelectRegion\n                      list={this.state.listRegions}\n                      thisRegion={this.handleInputChange}\n                      onChange={console.log(this.state.countryAndRegion, this.state.countryCC, this.state.regionCC)}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm-6 p-2\">\n                  <div className=\"input-group\">\n                    <SelectFeature\n                      list={this.state.listFeatures}\n                      thisFeature={this.handleInputChange}\n                      onChange={console.log(this.state.featureCode)}\n                      findFeature={this.handleFormSubmit}\n                    />\n                  </div>\n                </div>\n              </Row>\n            </form>\n          </Container>\n\n          {/* Clear All Results button and search results label */}\n          <Container>\n            <div id=\"results_header\" className=\"row pr-2 pl-2\">\n              <div className=\"input-group input-group-sm mb-3\">\n                <button className=\"form-control btn-outline-light text-left\" style={{ height: \"30px\" }} disabled>\n                  SEARCH RESULTS:\n                </button>\n                <div className=\"input-group-prepend\">\n                  <button className=\"form-control btn btn-outline-light\" type=\"button\" id=\"clear_button\" style={{ width: \"5rem\", height: \"30px\" }}>\n                    CLEAR\n                  </button>\n                </div>\n              </div>\n            </div>\n          </Container>\n\n          {/* ResultCards list */}\n          <CardsContainer fluid>\n            <ResultCard\n              featureName={this.state.featureName}\n              featureType={this.state.featureType}\n              featureCountryName={this.state.featureCountryName}\n              featureLatitude={this.state.featureLatitude}\n              featureLongitude={this.state.featureLongitude}\n              nearPlaceName={this.state.nearPlaceName}\n              nearPlaceCountryCode={this.state.nearPlaceCountryCode}\n              nearPlacePostalCode={this.state.nearPlacePostalCode}\n              nearPlaceDistance={this.state.nearPlaceDistance}\n              nearPlaceLatLong={this.state.nearPlaceLatLong}\n              nearPlaceWifi={this.state.nearPlaceWifi}\n            />\n            <NoResultCard />\n          </CardsContainer>\n\n          {/* Row returns a Bootstrap \"row\" */}\n          {/* <Row> */}\n          {/* Col returns a Bootstrap \"col-md-6\" */}\n          {/* <Col size=\"md-6\"> */}\n          {/* returns a Bootstrap \"jumbotron\" with inline CSS */}\n          {/* <Jumbotron> */}\n          {/* <h1>What Books Should I Read?</h1> */}\n          {/* </Jumbotron> */}\n          {/* HTML <form> tag: input for adding a new book */}\n          {/* <form> */}\n          {/* Bootstrap \"form-group\" <div> and \"form-control\" <input> with ...props */}\n          {/* <Input  */}\n          {/* // insert this.state.title data as the value of the input field */}\n          {/* value={this.state.title}  */}\n          {/* // on every char typed, make field value the value of this.state.title */}\n          {/* onChange={this.handleInputChange}  */}\n          {/* // name used by this.handleInputChange to change this.state.title */}\n          {/* name=\"title\"  */}\n          {/* // displayed field text when no value exists */}\n          {/* placeholder=\"Title (required)\"  */}\n          {/* /> */}\n          {/* <Input  */}\n          {/* value={this.state.author}  */}\n          {/* onChange={this.handleInputChange}  */}\n          {/* name=\"author\"  */}\n          {/* placeholder=\"Author (required)\"  */}\n          {/* /> */}\n          {/* uses <textarea> instead of <input>, sizes input field to 20 rows deep */}\n          {/* <TextArea  */}\n          {/* value={this.state.synopsis}  */}\n          {/* onChange={this.handleInputChange}  */}\n          {/* name=\"synopsis\"  */}\n          {/* placeholder=\"Synopsis (Optional)\"  */}\n          {/* /> */}\n          {/* <button> with Bootstrap classes, inline CSS, props, and children */}\n          {/* <FormBtn  */}\n          {/* // button is disabled if no author AND title are entered */}\n          {/* disabled={!(this.state.author && this.state.title)}  */}\n          {/* // when button is clicked, handle the click with this.handleFormSubmit */}\n          {/* onClick={this.handleFormSubmit} */}\n          {/* > */}\n          {/* Submit Book */}\n          {/* </FormBtn> */}\n          {/* </form> */}\n          {/* </Col> */}\n          {/* <Col size=\"md-6 sm-12\"> */}\n          {/* <Jumbotron> */}\n          {/* <h1>Books On My List</h1> */}\n          {/* </Jumbotron> */}\n          {/* if there are books in this.state.books (if TRUE (exists)), then */}\n          {/* {this.state.books.length ? ( */}\n          {/* // create a List component container (styled <div> holding \"list-group\" <ul>) */}\n          {/* <List> */}\n          {/* array.map() all books in this.state.books */}\n          {/* {this.state.books.map(book => ( */}\n          {/* // where every book object gets a ListItem component with a key for React */}\n          {/* // an <li> with Bootstrap \"list-group-item\" */}\n          {/* <ListItem key={book._id}> */}\n          {/* <li> contains a Link (React Router) to it's own book page */}\n          {/* App.js (React Router) sends this route to Detail.js page view */}\n          {/* <Link to={\"/books/\" + book._id}> */}\n          {/* <strong> */}\n          {/* Link surrounds the displayed title and author */}\n          {/* {book.title} by {book.author} */}\n          {/* </strong> */}\n          {/* </Link> */}\n          {/* ListItem also contains DeleteBtn with click handler */}\n          {/* returns a <button> with other non-individual properties */}\n          {/* <DeleteBtn onClick={() => this.deleteBook(book._id)} /> */}\n          {/* </ListItem> */}\n          {/* ))} */}\n          {/* </List> */}\n          {/* ) : ( */}\n          {/* // otherwise, if this.state.books does not have a length (no data), then */}\n          {/* // don't create the <List> component, just create this <h3>: */}\n          {/* <h3>No Results to Display</h3> */}\n          {/* )} */}\n          {/* </Col> */}\n          {/* </Row> */}\n          {/* </Container> */}\n        </Background>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","// used by React client Components to make API calls to the server\n\n// use axios to make XMLHttpRequest API calls to Express server from React client\nimport axios from \"axios\";\n\n// define axios call functions to be executed when calling \"API.getBooks\" etc\n// NOTE: where is the PUT route to update a document?\nexport default {\n  // API.getUser : user auth signin route\n  getUser: query => {\n    return axios.post(\"/api/auth/signin\", query);\n  },\n  // API.createUser : user auth signup route\n  createUser: query => {\n    return axios.post(\"/api/auth/signup\", query);\n  },\n  // API.checkAuth : user auth verify route\n  // verify that user is logged in and is allowed access to this functionality\n  checkAuth: function(query) {\n    // console.log(\"Quer in API = \" + JSON.stringify(query));\n    return axios.post(\"/api/auth/verify\", query);\n  },\n  // EXAMPLE CODE BELOW (DELETE)\n  // Gets all books\n  getBooks: function() {\n    // in this app's domain, do a GET call on domain.com/api/books\n    // server.js (Express) will use routes/api/index.js etc to route this call\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    // construct and make an API call with (id) from a API.getBook(id) call\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","// Saved page view Component called by React Router in the App.js Router Switch Routes\n// Saved page is only available for logged in users\n\nimport React, { Component } from \"react\";\n// use a <Link> tag in place of <a href> to link to another page view with React Router\n// import { Link } from \"react-router-dom\";\n\n// import list object arrays for Countries/Regions and Feature types\nimport ListRegions from \"../utils/ListRegions\";\nimport ListFeatures from \"../utils/ListFeatures\";\n\n// import single-component .js files\nimport Header from \"../components/Header\";\nimport Background from \"../components/Background\";\n// import DeleteBtn from \"../components/DeleteBtn\";\n// import Jumbotron from \"../components/Jumbotron\";\n\n// import multiple-component .js files\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { SelectRegion, SelectFeature } from \"../components/Search\";\nimport { CardsContainer, ResultCard, NoResultCard } from \"../components/Cards\";\n// import { List, ListItem } from \"../components/List\";\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\n\n// import master style.css for all page views\nimport \"./style.css\";\n\n// import API in order to make axios API calls to the Express Server\nimport API from \"../utils/API\";\n\n// use axios to make XMLHttpRequest API calls\nimport axios from \"axios\";\n\nclass Saved extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countryAndRegion: \"\",\n      countryCC: \"\",\n      regionCC: \"\",\n      featureCode: \"\",\n      listRegions: ListRegions.countryArray,\n      listFeatures: ListFeatures.featureArray,\n      featureName: \"Ensenada Mogotes\",\n      featureType: \"bay\",\n      featureCountryCode: \"AR\",\n      featureLatitude: \"-38.13333\",\n      featureLongitude: \"-57.56667\",\n      featureLocation: \"\",\n      featureCountryName: \"Argentina\",\n      nearPlaceName: \"LOS ACANTILADOS\",\n      nearPlacePostalCode: \"7609\",\n      nearPlaceCountryCode: \"AR\",\n      nearPlaceCountryName: \"Argentina\",\n      nearPlaceDistance: \"3.5\",\n      nearPlaceLatLong: \"-38.1167,-57.6\",\n      nearPlaceWifi: \"wifi map\"\n    };\n  }\n\n  // ===================================================\n\n  componentDidMount() {\n    let readToken = window.localStorage.getItem(\"RLT_authkey\");\n    let query = {\n      token: readToken\n    };\n    API.checkAuth(query)\n      .then(res => {\n        if (res.data.success) {\n          this.setState({ isLoggedIn: true });\n        } else {\n          this.setState({ isLoggedIn: false });\n          window.location.assign(\"/login\");\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  // ===================================================\n\n  componentDidUpdate() {\n    // console.log(this.state.regionCC);\n  }\n\n  // ===================================================\n\n  // send live typed input data to this.state.title, .author, .synopsis on each keystroke\n  handleInputChange = event => {\n    // create variables name and value for event.target.name and event.target.value\n    const { name, value } = event.target;\n    // use setState to change state values of the state key [name] for whichever property\n    // if selecting a country or region, also set the Country Code and Region Codes\n    if (name === \"countryAndRegion\") {\n      this.setState({\n        [name]: value,\n        countryCC: value.substring(0, 2),\n        regionCC: value.substring(2, 4)\n      });\n    } else {\n      this.setState({\n        [name]: value\n      });\n    }\n  };\n\n  // ===================================================\n\n  geonamesString = () => {\n    if (this.state.featureCode) {\n      let geoString;\n      if (this.state.countryCC === \"XX\") {\n        geoString = `https://secure.geonames.org/searchJSON?featureCode=${this.state.featureCode}&maxRows=1000&username=ghostfountain`;\n        return geoString;\n      } else if (this.state.regionCC === \"\") {\n        geoString = `https://secure.geonames.org/searchJSON?featureCode=${this.state.featureCode}&country=${\n          this.state.countryCC\n        }&maxRows=1000&username=ghostfountain`;\n        return geoString;\n      } else {\n        geoString = `https://secure.geonames.org/searchJSON?featureCode=${this.state.featureCode}&country=${this.state.countryCC}&adminCode1=${\n          this.state.regionCC\n        }&maxRows=1000&username=ghostfountain`;\n        return geoString;\n      }\n      // console.log(geoString);\n    } else {\n      alert(\"Please select a feature type.\");\n    }\n  };\n\n  // ===================================================\n\n  // when user hits the submit button to add a new book,\n  handleFormSubmit = event => {\n    // prevent page reload default behavior of \"submit\"\n    event.preventDefault();\n\n    // test geonamesString()\n    // console.log(this.geonamesString());\n\n    // call geonamesString to construct with current info,\n    // and have axios make the XMLHttpRequest GET call to geoNames API\n    axios\n      .get(this.geonamesString())\n      .then(response => {\n        // console.log(response.data);\n\n        if (response.data.totalResultsCount === 0) {\n          // buildNoResults();\n          console.log(\"Sorry, no results!\");\n        } else {\n          // console.log(response.data.totalResultsCount);\n          // console.log(response.data.geonames);\n\n          // get number of results up to 1000 (set as 1000 if more than 1000)\n          let maxNumber = Math.min(response.data.totalResultsCount, 1000);\n\n          // get a random number from the range of number of results returned\n          let random = Math.floor(Math.random() * maxNumber);\n          // console.log(random);\n\n          // use the random number to select one result from the returned data\n          let theFeature = response.data.geonames[random];\n          // console.log(theFeature);\n\n          this.setState({\n            featureName: theFeature.name,\n            featureType: theFeature.fcodeName,\n            featureCountryCode: theFeature.countryCode,\n            featureLatitude: theFeature.lat,\n            featureLongitude: theFeature.lng,\n            featureLocation: theFeature.fclName\n          });\n\n          if (theFeature.countryName) {\n            this.setState({\n              featureCountryName: theFeature.countryName\n            });\n          } else {\n            this.setState({ featureCountryName: \"\" });\n          }\n        }\n        // });\n      })\n      .then(() => {\n        this.getPostalCodes();\n        // console.log(\"monkeypants\");\n      });\n  };\n\n  // ===========================================================================\n  // GET CLOSEST POSTAL CODE TO FEATURE LOCATION and NEARBY PLACE\n  // LAT+LONG COORDINATES FROM EZCMD API (limit 10,000 calls/month)\n  // ===========================================================================\n\n  getPostalCodes = () => {\n    // build API string for EZCMD postal code search\n    let ezcmdPostalCodes = `https://ezcmd.com/apps/api_geo_postal_codes/nearby_locations_by_coords/866eaf56be3781d02011b80ebd0baef8/354?coords=${\n      this.state.featureLatitude\n    },${this.state.featureLongitude}&within=100&unit=Km`;\n\n    // and have axios make the XMLHttpRequest GET call to EZCMD API\n    axios.get(ezcmdPostalCodes).then(response => {\n      // console.log(response.data);\n      console.log(response.data.search_results[0]);\n\n      if (response.data.search_results.length > 0) {\n        this.setState({\n          nearPlaceName: response.data.search_results[0].place_name.trim(),\n          nearPlacePostalCode: response.data.search_results[0].postal_code,\n          nearPlaceCountryCode: response.data.search_results[0].country_code,\n          nearPlaceCountryName: response.data.search_results[0].country_name,\n          nearPlaceDistance: Math.round(response.data.search_results[0].distance * 10) / 10,\n          nearPlaceLatLong: response.data.search_results[0].coords\n        });\n\n        this.getHotspots();\n      } else if (this.state.featureLocation) {\n        this.setState({\n          nearPlaceName: this.state.featureLocation,\n          nearPlacePostalCode: \"\",\n          nearPlaceCountryCode: this.state.featureCountryCode,\n          nearPlaceCountryName: this.state.featureCountryName,\n          nearPlaceDistance: \"?\",\n          nearPlaceLatLong: \"\"\n        });\n\n        this.getHotspots();\n      } else {\n        this.getHotspots();\n        console.log(\"CLOSEST CITY: no info\");\n      }\n    });\n  };\n\n  // ===================================================\n\n  // ===========================================================================\n  // GET # OF WIFI HOTSPOTS BY POSTAL CODE FROM WIGLE API (service is beta, no set limits)\n  // ===========================================================================\n\n  // // mini function to format thousands of WiFi numbers to k format\n  // kFormatter = num => {\n  //   return num > 999 ? (num / 1000).toFixed(1) + \"k\" : num;\n  // };\n\n  getHotspots = () => {\n    let wigleHotspots = `https://api.wigle.net/api/v2/stats/regions?country=${this.state.nearPlaceCountryCode}`;\n    // console.log(this.state.nearPlaceCountryCode);\n    // console.log(\"this.state.nearPlaceCountryCode\");\n    // console.log(this.state.nearPlaceCountryCode);\n\n    // and have axios make the XMLHttpRequest GET call to EZCMD API\n    axios\n      .get(wigleHotspots, {\n        headers: {\n          Authorization: \"Basic \" + btoa(\"AID544c0365fdcc8c2463ec21d3590bbd23:8891f56fb22400d107dd8ee49d2798ff\")\n        }\n      })\n      .then(response => {\n        // console.log(response.data);\n        // console.log(response.data.postalCode[0]);\n        // console.log(this.state.nearPlacePostalCode);\n\n        // mini function to format thousands of WiFi numbers to k format\n        let kFormatter = num => {\n          return num > 999 ? (num / 1000).toFixed(1) + \"k\" : num;\n        };\n\n        for (let k = 0; k < response.data.postalCode.length; k++) {\n          let PostalCode = response.data.postalCode[k].postalCode;\n          let wifiCountK = kFormatter(response.data.postalCode[k].count);\n\n          // console.log(wifiCountK);\n          // console.log(PostalCode);\n          // console.log(this.state.nearPlacePostalCode);\n\n          if (PostalCode === this.state.nearPlacePostalCode) {\n            console.log(\"It's a match:\");\n            console.log(wifiCountK);\n            console.log(this.state.nearPlaceCountryCode);\n\n            this.setState({\n              nearPlaceWifi: wifiCountK\n            });\n          }\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // buildCard();\n  };\n\n  // ===================================================\n\n  // call client/src/utils/API.js to make API.saveBook(bookData) axios API call\n  // and send current this.state.title, .author, and .synopsis values\n  // as the req.body (bookData) of the axios API POST call to /api/books\n  // API.saveBook({\n  //   title: this.state.title,\n  //   author: this.state.author,\n  //   synopsis: this.state.synopsis\n  // })\n  //   // after async operation completes, call loadBooks() to get updated book list\n  //   .then(res => this.loadBooks())\n  //   .catch(err => console.log(err));\n\n  // ===================================================\n\n  // call client/src/utils/API.js to make API.getBooks() axios API route call\n  // loads all books data in the db into this.state.books\n  // and also clear all existing data in this.state.title, .author, and .synopsis\n\n  loadBooks = () => {\n    //   API.getBooks()\n    //     .then(res => this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" }))\n    //     .catch(err => console.log(err));\n  };\n\n  // ===================================================\n\n  // when this.deleteBook(id) is called,\n  // call client/src/utils/API.js to make API.deleteBook(id) axios API route call\n  // and then call this.loadBooks() above to refresh all book data in state\n\n  deleteBook = id => {\n    //   API.deleteBook(id)\n    //     .then(res => this.loadBooks())\n    //     .catch(err => console.log(err));\n  };\n\n  // ===================================================\n\n  render() {\n    return (\n      <>\n        {/* <Container fluid > */}\n        <Background>\n          {/* logo and intro text header */}\n          <Header>\n            <Row>\n              <Col size=\"sm-6 md-4\">\n                <img src=\"assets/images/dinofii_logo.svg\" style={{ width: \"90%\", maxHeight: 150, padding: \"1px 1px 1px 1px\" }} alt=\"Dinofii logo\" />\n              </Col>\n              <Col size=\"sm-6 md-8\">\n                <div style={{ fontWeight: \"100\", color: \"#444\", textAlign: \"left\", padding: \"0px 30px 30px 0px\" }}>\n                  <span style={{ fontWeight: \"700\", color: \"rgb(121, 27, 27)\" }}>FIND NEW PLACES TO EXPLORE.</span> Select a feature and choose an\n                  area to search. Dinofii gives you a random point of interest and the closest city, as well as links to info, maps, directions, and\n                  local wifi.\n                </div>\n              </Col>\n            </Row>\n          </Header>\n\n          {/* Search Options Pulldown Selects */}\n          <Container>\n            {/* <Container fluid> */}\n            <form action=\"\">\n              <Row>\n                <div className=\"col-sm-6 p-2\">\n                  <div className=\"input-group\">\n                    <SelectRegion\n                      list={this.state.listRegions}\n                      thisRegion={this.handleInputChange}\n                      onChange={console.log(this.state.countryAndRegion, this.state.countryCC, this.state.regionCC)}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm-6 p-2\">\n                  <div className=\"input-group\">\n                    <SelectFeature\n                      list={this.state.listFeatures}\n                      thisFeature={this.handleInputChange}\n                      onChange={console.log(this.state.featureCode)}\n                      findFeature={this.handleFormSubmit}\n                    />\n                  </div>\n                </div>\n              </Row>\n            </form>\n          </Container>\n\n          {/* Clear All Results button and search results label */}\n          <Container>\n            <div id=\"results_header\" className=\"row pr-2 pl-2\">\n              <div className=\"input-group input-group-sm mb-3\">\n                <button className=\"form-control btn-outline-light text-left\" style={{ height: \"30px\" }} disabled>\n                  SEARCH RESULTS:\n                </button>\n                <div className=\"input-group-prepend\">\n                  <button className=\"form-control btn btn-outline-light\" type=\"button\" id=\"clear_button\" style={{ width: \"5rem\", height: \"30px\" }}>\n                    CLEAR\n                  </button>\n                </div>\n              </div>\n            </div>\n          </Container>\n\n          {/* ResultCards list */}\n          <CardsContainer fluid>\n            <ResultCard\n              featureName={this.state.featureName}\n              featureType={this.state.featureType}\n              featureCountryName={this.state.featureCountryName}\n              featureLatitude={this.state.featureLatitude}\n              featureLongitude={this.state.featureLongitude}\n              nearPlaceName={this.state.nearPlaceName}\n              nearPlaceCountryCode={this.state.nearPlaceCountryCode}\n              nearPlacePostalCode={this.state.nearPlacePostalCode}\n              nearPlaceDistance={this.state.nearPlaceDistance}\n              nearPlaceLatLong={this.state.nearPlaceLatLong}\n              nearPlaceWifi={this.state.nearPlaceWifi}\n            />\n            <NoResultCard />\n          </CardsContainer>\n\n          {/* Row returns a Bootstrap \"row\" */}\n          {/* <Row> */}\n          {/* Col returns a Bootstrap \"col-md-6\" */}\n          {/* <Col size=\"md-6\"> */}\n          {/* returns a Bootstrap \"jumbotron\" with inline CSS */}\n          {/* <Jumbotron> */}\n          {/* <h1>What Books Should I Read?</h1> */}\n          {/* </Jumbotron> */}\n          {/* HTML <form> tag: input for adding a new book */}\n          {/* <form> */}\n          {/* Bootstrap \"form-group\" <div> and \"form-control\" <input> with ...props */}\n          {/* <Input  */}\n          {/* // insert this.state.title data as the value of the input field */}\n          {/* value={this.state.title}  */}\n          {/* // on every char typed, make field value the value of this.state.title */}\n          {/* onChange={this.handleInputChange}  */}\n          {/* // name used by this.handleInputChange to change this.state.title */}\n          {/* name=\"title\"  */}\n          {/* // displayed field text when no value exists */}\n          {/* placeholder=\"Title (required)\"  */}\n          {/* /> */}\n          {/* <Input  */}\n          {/* value={this.state.author}  */}\n          {/* onChange={this.handleInputChange}  */}\n          {/* name=\"author\"  */}\n          {/* placeholder=\"Author (required)\"  */}\n          {/* /> */}\n          {/* uses <textarea> instead of <input>, sizes input field to 20 rows deep */}\n          {/* <TextArea  */}\n          {/* value={this.state.synopsis}  */}\n          {/* onChange={this.handleInputChange}  */}\n          {/* name=\"synopsis\"  */}\n          {/* placeholder=\"Synopsis (Optional)\"  */}\n          {/* /> */}\n          {/* <button> with Bootstrap classes, inline CSS, props, and children */}\n          {/* <FormBtn  */}\n          {/* // button is disabled if no author AND title are entered */}\n          {/* disabled={!(this.state.author && this.state.title)}  */}\n          {/* // when button is clicked, handle the click with this.handleFormSubmit */}\n          {/* onClick={this.handleFormSubmit} */}\n          {/* > */}\n          {/* Submit Book */}\n          {/* </FormBtn> */}\n          {/* </form> */}\n          {/* </Col> */}\n          {/* <Col size=\"md-6 sm-12\"> */}\n          {/* <Jumbotron> */}\n          {/* <h1>Books On My List</h1> */}\n          {/* </Jumbotron> */}\n          {/* if there are books in this.state.books (if TRUE (exists)), then */}\n          {/* {this.state.books.length ? ( */}\n          {/* // create a List component container (styled <div> holding \"list-group\" <ul>) */}\n          {/* <List> */}\n          {/* array.map() all books in this.state.books */}\n          {/* {this.state.books.map(book => ( */}\n          {/* // where every book object gets a ListItem component with a key for React */}\n          {/* // an <li> with Bootstrap \"list-group-item\" */}\n          {/* <ListItem key={book._id}> */}\n          {/* <li> contains a Link (React Router) to it's own book page */}\n          {/* App.js (React Router) sends this route to Detail.js page view */}\n          {/* <Link to={\"/books/\" + book._id}> */}\n          {/* <strong> */}\n          {/* Link surrounds the displayed title and author */}\n          {/* {book.title} by {book.author} */}\n          {/* </strong> */}\n          {/* </Link> */}\n          {/* ListItem also contains DeleteBtn with click handler */}\n          {/* returns a <button> with other non-individual properties */}\n          {/* <DeleteBtn onClick={() => this.deleteBook(book._id)} /> */}\n          {/* </ListItem> */}\n          {/* ))} */}\n          {/* </List> */}\n          {/* ) : ( */}\n          {/* // otherwise, if this.state.books does not have a length (no data), then */}\n          {/* // don't create the <List> component, just create this <h3>: */}\n          {/* <h3>No Results to Display</h3> */}\n          {/* )} */}\n          {/* </Col> */}\n          {/* </Row> */}\n          {/* </Container> */}\n        </Background>\n      </>\n    );\n  }\n}\n\nexport default Saved;\n","// DeleteBtn component\n// note style.css for DeleteBtn\n\nimport React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\n// {...props} is a placeholder for one prop: a click handler with _id of this book\n// onClick={() => this.deleteBook(book._id)}\n// but could be a whole bunch of props set in the parent\n// properties that are the same for all buttons can be set here\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from \"react\";\n\n// returns a Bootstrap \"jumbotron\" class <div> with inline CSS\n// has a {children} param so other components can exist within its open and close tags\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\n// {children} will be a bunch of ListItems\n// NOTE the style.css file with multiple styles for custom list-overflow-container\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\n// {children} will be a Link (from React Router) with inner children\n// parent sets key={book._id} on each <ListItem key={book._id}>\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\n// returns a Bootstrap \"form-group\" <div> with a \"form-control\" <input>\n// takes (props) that are assigned in parent (Books.js) that include parent state\n// and are assigned to the <input> tag as <input {...props}>\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\n// returns a Bootstrap styled <textarea> for long text input (this.state.synopsis)\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\n// returns a <button> with Bootstrap classes, inline CSS, <button> tag props,\n// and also can hold text between it's tags as {props.children} \n// could this also be just {children} if FormBtn({props, children}) ?\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","// page view Component called by React Router in the App.js Router Switch Routes\n\nimport React, { Component } from \"react\";\n// use a <Link> tag in place of <a href> to link to another page view with React Router\nimport { Link } from \"react-router-dom\";\n\n// import API in order to make axios API calls to the Express Server\nimport API from \"../utils/API\";\n\n// import single-component .js files\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\n// import multiple-component .js files\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Books extends Component {\n  state = {\n    books: [],\n    title: \"\",\n    author: \"\",\n    synopsis: \"\"\n  };\n\n  // whenever this page-view Component mounts (is called and displayed),\n  // run the loadBooks() method (below)\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  // call client/src/utils/API.js to make API.getBooks() axios API route call\n  // loads all books data in the db into this.state.books\n  // and also clear all existing data in this.state.title, .author, and .synopsis\n  loadBooks = () => {\n    API.getBooks()\n      .then(res => this.setState({ books: res.data, title: \"\", author: \"\", synopsis: \"\" }))\n      .catch(err => console.log(err));\n  };\n\n  // when this.deleteBook(id) is called,\n  // call client/src/utils/API.js to make API.deleteBook(id) axios API route call\n  // and then call this.loadBooks() above to refresh all book data in state\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  // send live typed input data to this.state.title, .author, .synopsis on each keystroke\n  handleInputChange = event => {\n    // create variables name and value for event.target.name and event.target.value\n    const { name, value } = event.target;\n    // use setState to change state values of the state key [name] for whichever property\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // when user hits the submit button to add a new book,\n  handleFormSubmit = event => {\n    // prevent page reload default behavior of \"submit\"\n    event.preventDefault();\n    // as long as user entered a title and author (synopsis optional)\n    if (this.state.title && this.state.author) {\n      // call client/src/utils/API.js to make API.saveBook(bookData) axios API call\n      // and send current this.state.title, .author, and .synopsis values\n      // as the req.body (bookData) of the axios API POST call to /api/books\n      API.saveBook({\n        title: this.state.title,\n        author: this.state.author,\n        synopsis: this.state.synopsis\n      })\n      // after async operation complete, call loadBooks() to get updated book list\n        .then(res => this.loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      // Container component from Grid returns a Bootstrap \"container-fluid\"\n      <Container fluid>\n        {/* Row returns a Bootstrap \"row\" */}\n        <Row>\n          {/* Col returns a Bootstrap \"col-md-6\" */}\n          <Col size=\"md-6\">\n          {/* returns a Bootstrap \"jumbotron\" with inline CSS */}\n            <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron>\n\n            {/* HTML <form> tag: input for adding a new book */}\n            <form>\n              {/* Bootstrap \"form-group\" <div> and \"form-control\" <input> with ...props */}\n              <Input \n                // insert this.state.title data as the value of the input field\n                value={this.state.title} \n                // on every char typed, make field value the value of this.state.title\n                onChange={this.handleInputChange} \n                // name used by this.handleInputChange to change this.state.title\n                name=\"title\" \n                // displayed field text when no value exists\n                placeholder=\"Title (required)\" \n              />\n              <Input \n                value={this.state.author} \n                onChange={this.handleInputChange} \n                name=\"author\" \n                placeholder=\"Author (required)\" \n              />\n              {/* uses <textarea> instead of <input>, sizes input field to 20 rows deep */}\n              <TextArea \n                value={this.state.synopsis} \n                onChange={this.handleInputChange} \n                name=\"synopsis\" \n                placeholder=\"Synopsis (Optional)\" \n              />\n              {/* <button> with Bootstrap classes, inline CSS, props, and children */}\n              <FormBtn \n                // button is disabled if no author AND title are entered\n                disabled={!(this.state.author && this.state.title)} \n                // when button is clicked, handle the click with this.handleFormSubmit\n                onClick={this.handleFormSubmit}\n              >\n                Submit Book\n              </FormBtn>\n            </form>\n\n          </Col>\n\n\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Books On My List</h1>\n            </Jumbotron>\n\n            {/* if there are books in this.state.books (if TRUE (exists)), then */}\n            {this.state.books.length ? (\n              // create a List component container (styled <div> holding \"list-group\" <ul>)\n              <List>\n                {/* array.map() all books in this.state.books */}\n                {this.state.books.map(book => (\n                  // where every book object gets a ListItem component with a key for React\n                  // an <li> with Bootstrap \"list-group-item\"\n                  <ListItem key={book._id}>\n                    {/* <li> contains a Link (React Router) to it's own book page */}\n                    {/* App.js (React Router) sends this route to Detail.js page view */}\n                    <Link to={\"/books/\" + book._id}>\n                      <strong>\n                        {/* Link surrounds the displayed title and author */}\n                        {book.title} by {book.author}\n                      </strong>\n                    </Link>\n                    {/* ListItem also contains DeleteBtn with click handler */}\n                    {/* returns a <button> with other non-individual properties */}\n                    <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              // otherwise, if this.state.books does not have a length (no data), then\n              // don't create the <List> component, just create this <h3>:\n              <h3>No Results to Display</h3>\n            )}\n\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n","// Detail page view component\n// called in Book page view and routed by React Router in App.js\n// <Link to={\"/books/\" + book._id}>\n// route call always includes the MongoDB book _id\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n\nclass Detail extends Component {\n  // state holds all details for a single book as an object\n  state = {\n    book: {}\n  };\n\n  // When this component mounts, grab the book with the _id of this.props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  componentDidMount() {\n    // this.props.match.params.id gets book._id from localhost:3000/books/1234567\n    // have axios make a GET API call to Express server to query database\n    API.getBook(this.props.match.params.id)\n    // then set this.state.book object as the returned res.data from the API call\n      .then(res => this.setState({ book: res.data }))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      // Bootstrap container, row, col, jumbotron React components, HTML <article>\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                {this.state.book.title} by {this.state.book.author}\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1>Synopsis</h1>\n              <p>\n                {this.state.book.synopsis}\n              </p>\n            </article>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-2\">\n            <Link to=\"/\">← Back to Authors</Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Detail;\n","// NoMatch component (404 page)\n// simple page with Bootstrap components\n\nimport React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","// App contains Components that appear on every page (Nav, etc)\n// as well as the React Router Switch Routes\n// to control which \"page\" is displayed for each HTML URL path\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// import Components that appear on every page view\nimport Nav from \"./components/Nav\";\n\n// import individual page view Components\nimport Home from \"./pages/Home\";\nimport Saved from \"./pages/Saved\";\n\nimport Books from \"./pages/Books\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\n\nfunction App() {\n  return (\n    // wrap entire App in Router tags\n    <Router>\n      {/* give a single DOM element to contain all other DOM elements */}\n      <div>\n        {/* Nav is always displayed */}\n        {/* <nav> with <a> (NOTE: NOT A React Router <Link> component) */}\n        {/* Bootstrap \"navbar\" classes on the <nav> and <a> elements */}\n        <Nav />\n        {/* Switch controls Route component views displayed, first matching route displayed */}\n        {/* use \"exact path\" unless you are capturing sub-paths and adding additional content to a primary page view path */}\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/saved\" component={Saved} />\n          {/* example routes below */}\n          <Route exact path=\"/books\" component={Books} />\n          <Route exact path=\"/books/:id\" component={Detail} />\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// React's direct connection to the public/index.html file\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// App is the master component containing elements that occur on all pages,\n// as well as the React Router to load page views based on the URL path.\n// Render everything in App to the <div id=\"root\"> in the index.html file\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}